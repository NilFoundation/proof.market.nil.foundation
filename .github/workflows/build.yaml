name: Build

on:
  # Triggers the workflow on every pull-request
  pull_request:
  # Allows to trigger workflow manually
  workflow_dispatch:
  # Allows to call from another workflow
  workflow_call:
    inputs:
      environment:
        type: string
      commit:
        type: string

jobs:
  build:
    name: Build
    runs-on: [ubuntu-latest]
    environment: ${{ inputs.environment || 'test' }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ inputs.commit }}

    - name: Setup Nodejs
      uses: actions/setup-node@v3
      with:
        node-version: 16.x

    - name: Install dependencies
      run: |
        npm ci

    - name: Setup runtime config
      working-directory: public
      run: |
        config='
          BASE_API_URL = "${{ secrets.BASE_API_URL }}"
          DBMS_DEFAULT_DATABASE = "${{ secrets.DBMS_DEFAULT_DATABASE }}"
          API_VERSION = "${{ secrets.API_VERSION }}"
          REVALIDATE_DATA_INTERVAL = "${{ secrets.REVALIDATE_DATA_INTERVAL }}"
          READONLY_USER = "${{ secrets.READONLY_USER }}"
          SITE_DEFAULT_TITLE = "${{ secrets.SITE_DEFAULT_TITLE }}"
          GA_TRACKING_ID = "${{ secrets.GA_TRACKING_ID }}"
          PROOFMARKET_TOOLCHAIN_REPO = "${{ secrets.PROOFMARKET_TOOLCHAIN_REPO }}"
          SENTRY_DSN = "${{ secrets.SENTRY_DSN }}"
          CIRCUIT_DEVELOPER_GUIDE_URL = "${{ secrets.CIRCUIT_DEVELOPER_GUIDE_URL }}"
          API_RESPONSE_WAIT_TIMEOUT = "${{ secrets.API_RESPONSE_WAIT_TIMEOUT }}"
        '
        echo "$config" > runtime-config.toml
        echo runtime-config.toml

    - name: Lint
      run: npm run lint:ts

    - name: Build
      run: |
        npm run build
        ls -lah build

    - name: Pack build results
      run: tar -czf build-${{ github.sha }}.tar.gz build

    - name: Upload workflow artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-${{ github.sha }}
        path: build-${{ github.sha }}.tar.gz
        if-no-files-found: error
        retention-days: 10
