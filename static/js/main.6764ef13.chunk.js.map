{"version":3,"sources":["components/market/CircuitsList/CircuitsList.module.scss","packages/LocalStorage/LocalStorage.ts","components/market/CircuitDetailedInfo/DetailedInfoTab.ts","components/common/SocialLinks/SocialLinks.tsx","components/common/Copyright/Copyright.tsx","components/common/Footer/Footer.tsx","components/common/MobileMenu/MobileMenu.tsx","components/login/AuthCard/AuthCard.tsx","components/login/LoginForm/LoginForm.tsx","components/login/AuthContainer/AuthContainer.tsx","components/login/RegisterForm/RegisterForm.tsx","components/login/ReadonlyAccessProvider/ReadonlyAccessProvider.tsx","components/login/UserBalance/UserBalance.tsx","components/login/UserMenu/UserMenu.tsx","components/login/ProtectedContent/ProtectedContent.tsx","components/common/BreadCrumbs/Breadcrumbs.tsx","components/common/Header/HeaderLink.tsx","components/common/Header/Header.tsx","components/common/Details/Details.tsx","components/common/DashboardCard/DashboardCard.tsx","components/common/Table/Table.tsx","components/common/Table/TBody.tsx","components/common/Table/TCell.tsx","components/common/Table/THead.tsx","components/common/Table/THeader.tsx","components/common/Table/TRow.tsx","components/common/ReactTable/ReactTableHeader.tsx","components/common/ReactTable/ReactTable.tsx","components/common/FileUploader/FileUploader.tsx","components/common/FullScreenView/FullScreenView.tsx","components/common/ClicableIcon/ClicableIcon.tsx","views/OfflineView.tsx","components/common/NetConnectionHandler/NetConnectionHandler.tsx","components/common/Overlay/Overlay.tsx","components/common/ObjectAsPlainTextViewer/ObjectAsPlainTextViewer.tsx","components/common/GALocationTracker/GALocationTracker.tsx","components/market/PriceChangeIndicator/PriceChangeIndicator.tsx","components/market/CircuitsList/CircuitsListItemInfo.tsx","components/market/CircuitsList/CircuitsListItem.tsx","components/market/CircuitsList/CircuitsListTable.tsx","components/market/CircuitsList/CircuitsList.tsx","components/market/CircuitDetailedInfo/CircuitInfoCard.tsx","components/market/ManageOrdersPanel/ManageOrdersTab.ts","components/market/CircuitDetailedInfo/CircuitJsonView.tsx","components/market/CircuitDetailedInfo/CircuitStatsCard.tsx","components/market/CircuitDetailedInfo/CircuitDetailedInfo.tsx","components/market/CircuitDashboard/ChartTypeSelect.tsx","components/market/CircuitDashboard/ChartSettingsContext.ts","components/market/CircuitDashboard/DataRangeSelect.tsx","components/market/ChartLegend/ChartLegend.tsx","components/market/ChartTemplate/ChartTemplate.tsx","components/market/CircuitCharts/ProofCostChart.tsx","components/market/CircuitCharts/ProofGenTimeChart.tsx","components/market/CircuitDashboard/ChartSettingsProvider.tsx","components/market/CircuitDashboard/DashboardToolbar.tsx","components/market/CircuitInfoPanel/CircuitInfoPanel.tsx","components/market/CircuitDashboard/CircuitDashboard.tsx","components/market/OrderManagementContextProvider/OrderManagementContext.ts","components/market/OrderManagementContextProvider/OrderManagementContextProvider.tsx","components/market/OrderBook/OrderBookTableCell.tsx","components/market/OrderBook/OrderBookTableRow.tsx","components/market/OrderBook/OrderBookTable.tsx","components/market/OrderBook/OrderBookSettingsContext.ts","components/market/OrderBook/OrderBookToolbar.tsx","components/market/OrderBook/OrderBook.tsx","components/market/CreateTradeOrderForm/BaseFormGroup.tsx","components/market/CreateTradeOrderForm/CreateTradeOrderForm.tsx","components/market/CreateBidForm/PublicInput.tsx","components/market/CreateBidForm/CreateBidForm.tsx","components/market/CreateAskForm/CreateAskForm.tsx","components/market/CreateOrdersPanel/CreateOrdersTabs.tsx","components/market/CreateOrdersPanel/CreateOrdersPanel.tsx","components/market/TradeHistory/TradeHistoryTable.tsx","components/market/TradeHistory/TradeHistory.tsx","components/market/ManageOrdersPanel/ManageOrdersPanelTabs.tsx","components/market/ManageOrdersPanel/ToolbarPanel.tsx","components/market/ManageOrdersPanel/ActiveOrdersTable.tsx","components/market/ManageOrdersPanel/HistoryOrdersTable.tsx","components/market/ManageOrdersPanel/ManageOrdersPanel.tsx","components/portfolio/ProofList/ProofListItem.tsx","components/portfolio/ProofList/ProofList.tsx","components/portfolio/ProofView/ProofContentCardToolbar.tsx","components/portfolio/ProofView/ProofContentCard.tsx","components/market/CircuitDetailedInfo/CircuitDetailedInfo.module.scss","components/login/RegisterForm/RegisterForm.module.scss","components/login/UserMenu/UserMenu.module.scss","components/market/CircuitInfoPanel/CircuitInfoPanel.module.scss","components/login/LoginForm/LoginForm.module.scss","components/login/UserBalance/UserBalance.module.scss","components/common/Table/Table.module.scss","components/portfolio/ProofList/ProofList.module.scss","components/market/CreateTradeOrderForm/CreateTradeOrderForm.module.scss","enums/market/Currency.ts","enums/market/ChartType.ts","enums/market/DateUnit.ts","enums/common/UrlQueryParam.ts","enums/common/RouterParam.ts","enums/market/OrderBookPriceStep.ts","api/market/BidsApi.ts","api/market/AsksApi.ts","components/market/TradeHistory/TradeHistory.module.scss","components/portfolio/ProofView/ProofContentCard.module.scss","components/login/AuthContainer/AuthContainer.module.scss","components/common/BreadCrumbs/Breadcrumbs.module.scss","components/common/Header/Header.module.scss","hooks/login/loginHooks.ts","hooks/market/charts/useChart.ts","hooks/market/charts/useGetCircuitDashboardData.ts","hooks/market/charts/useRenderChartData.ts","hooks/market/orderBook/useGetOrderBookData.ts","hooks/market/tradeHistory/useGetTradeHistoryData.ts","hooks/market/manageOrders/useGetManageOrdersData.ts","hooks/market/useSelectedCircuitId.ts","hooks/portfolio/useSelectedProofId.ts","hooks/portfolio/useDownloadJson.ts","hooks/common/useLocalStorage.tsx","hooks/common/useDebounce.tsx","hooks/common/table/useInitialTableState.ts","components/common/SocialLinks/SocialLinks.module.scss","components/common/MobileMenu/MobileMenu.module.scss","components/common/Details/Details.module.scss","components/common/ObjectAsPlainTextViewer/ObjectAsPlainTextViewer.module.scss","components/market/ChartLegend/ChartLegend.module.scss","utils/login/getUserFromJwt.ts","utils/dates/formatUTCTimestamp.ts","utils/dates/floorDateTo.ts","utils/dates/getUTCTimestamp.ts","utils/dates/formatDate.ts","utils/common/notEmpty.ts","utils/common/longDashSymbol.ts","utils/common/renderDashOnEmptyValue.ts","utils/regexp/emailRegExp.ts","components/common/Footer/Footer.module.scss","components/login/AuthCard/AuthCard.module.scss","components/login/ProtectedContent/ProtectedContent.module.scss","components/common/DashboardCard/DashboardCard.module.scss","components/common/ReactTable/ReactTable.module.scss","components/common/FullScreenView/FullScreenView.module.scss","components/common/ClicableIcon/ClicableIcon.module.scss","components/common/Overlay/Overlay.module.scss","components/market/PriceChangeIndicator/PriceChangeIndicator.module.scss","styles/export.module.scss","routing/Paths.ts","components/login/ProtectedRoute/ProtectedRoute.tsx","layouts/AuthLayout.tsx","layouts/MainLayout.tsx","routing/routesConfig.tsx","routing/Router.tsx","api/login/LoginApi.ts","api/login/BalanceApi.ts","api/market/CircuitsApi.ts","api/portfolio/ProofApi.ts","models/market/TradeOrder/TradeOrderType.ts","api/common/HttpClient.ts","api/common/BearerHttpClient.ts","constants/common/socialLinks.ts","constants/common/navigationLinks.ts","constants/common/jsonViewerTheme.ts","constants/common/mainSiteAddress.ts","polyfills.ts","views/ErrorView.tsx","App.tsx","checkEnv.ts","ga.ts","reportWebVitals.ts","sentry.ts","index.tsx","redux/login/selectors/UserSelectors.ts","redux/login/actions/UserActions.ts","redux/login/reducers/UserReducer.ts","redux/login/sagas/AuthSaga.ts","redux/login/sagas/ProtectedCall.ts","redux/market/actions/CircuitsActions.ts","redux/market/actions/BidActions.ts","redux/market/actions/AskActions.ts","redux/market/reducers/CircuitsReducer.ts","redux/market/reducers/AsksReducer.ts","redux/market/reducers/BidsReducer.ts","redux/market/selectors/CircuitsSelectors.ts","redux/market/selectors/BidsSelectors.ts","redux/market/selectors/AsksSelectors.ts","redux/common/sagas/RevalidateSaga.tsx","redux/market/sagas/CircuitsSaga.ts","redux/market/sagas/BidsSaga.ts","redux/market/sagas/AsksSaga.ts","redux/login/sagas/UserSaga.ts","redux/portfolio/actions/ProofActions.ts","redux/portfolio/reducers/ProofReducer.ts","redux/portfolio/selectors/ProofSelectors.ts","redux/portfolio/sagas/ProofSaga.ts","redux/rootReducer.ts","redux/RootSaga.ts","redux/store.ts","redux/reduxHooks/useAppSelector.ts","components/market/OrderBook/OrderBook.module.scss"],"names":["module","exports","getItemFromLocalStorage","ItemKey","serialisedValue","localStorage","getItem","JSON","parse","setItemIntoLocalStorage","ItemValue","stringify","setItem","removeItemFromLocalStorage","removeItem","DetailedInfoTab","SocialLinks","className","bottomIndent","styles","socialLinks","map","icon","url","href","iconName","srOnlyText","Copyright","Date","getFullYear","Footer","footer","MobileMenu","menu","Button","button","iconNameDropdownClosed","iconNameDropdownOpend","Menu","align","navigationLinks","title","path","Item","AuthCard","children","authCard","LoginForm","nodeRef","useRef","userNameInputRef","processLogin","useLogin","useState","errorMessage","setErrorMessage","pwdInputType","setPwdInputType","pwdInputIconName","useForm","mode","register","formState","isSubmitting","isValid","errors","onSubmitLogin","handleSubmit","data","login","jwt","useEffect","current","focus","required","ref","restRegister","source","process","alt","responsive","rounded","logoImage","Group","hasError","size","Size","lg","control","Addon","type","id","placeholder","e","autoComplete","Buttons","onClick","block","variant","Variant","success","disabled","CSSTransition","classNames","timeout","in","unmountOnExit","to","Path","AuthContainer","useBreakpoints","md","showFullScreen","loginContainer","back","market","copyright","RegisterForm","email","setEmail","isEmailValid","useMemo","emailRegExp","test","emailInputRef","subject","window","location","hostname","state","submitting","succeeded","debouncedOnChangeHandler","debounce","target","value","successMessage","primary","form","onSubmit","description","name","onChange","length","field","prefix","social","ReadonlyAccessProvider","fallback","errorView","error","setError","isAuthentificated","useAuth","loginWithReadonly","user","username","password","UserBalance","canToggleVisibility","useLocalStorage","hidden","setHidden","userBalance","useAppSelector","selectUserBalance","loadingUserBalance","s","userState","balanceIsLoading","balance","toFixed","blocked","isNoData","undefined","displayLoader","longDash","text","hiddenText","repeat","label","grow","currency","UserMenu","isReadonly","processLogout","useLogout","navigate","useNavigate","dropdown","Header","balanceContainer","balanceTitle","Divider","onSelect","ProtectedContent","overlayTitle","overlayButtonText","container","Breadcrumbs","breadcrumbs","mainSiteAddress","item","renderLink","HeaderLink","match","useMatch","end","active","props","navbar","fluid","nav","Details","defaultOpen","unmountOnClose","isOpen","setIsOpen","toggleIsOpen","iconClassName","onKeyDown","key","role","tabIndex","Children","child","isValidElement","cloneElement","DashboardCard","dashboardCard","Table","rest","table","TBody","TCell","THead","sticky","isFooterHeader","tHeadClassName","clsx","tableHead","stickyHead","footerHead","THeader","TRow","ReactTableHeader","column","onlySortBy","canSort","isSorted","isSortedDesc","toggleSortBy","shouldToggleSort","useLayoutEffect","getHeaderProps","getSortByToggleProps","sortableColumnHeader","preventDefault","render","tableHooks","useFilters","useSortBy","filter","notEmpty","ReactTable","renderRows","renderHeaders","defaultInitialState","initialState","footerHeader","showTableHeader","restOptions","useInitialTableState","setInitialState","tableInstance","useTable","getTableBodyProps","visibleColumns","debouncedState","useDebounce","renderTableHeadersFallback","columns","FileUploader","onDrop","textMessage","setTextMessage","useDropzone","acceptedFiles","fileRejections","event","Object","keys","getRootProps","getInputProps","isDragActive","x","FullScreenView","fullScreenView","ClicableIcon","OfflineView","as","xs","NetConnectionHandler","navigator","onLine","online","setOnline","setIsOnline","setIsOffline","addEventListener","removeEventListener","Overlay","overlay","ObjectAsPlainTextViewer","viewer","entries","y","GALocationTracker","mainPath","useLocation","pathname","split","slice","join","ReactGa","send","hitType","page","PriceChangeIndicator","change","isGrow","computedClassName","priceChangeIndicator","Math","abs","CircuitsListItemInfo","memo","cost","isLoadingInfo","circuitsState","isLoadingCircuitsInfo","position","dailyChangeIndicator","CurcuitsListItem","_key","isSelected","useSelector","selectCurrentCircuitId","selected","Body","itemBody","accessor","Filter","setFilter","setValue","debouncedSearch","inputGroup","disableFilters","defaultTableState","sortBy","desc","hiddenColumns","CircuitsListTable","circuitsList","circuitsInfo","deepEqual","tableData","isPrivate","info","find","toUpperCase","inputDescription","daily_change","useCallback","rows","prepareRow","canFilter","listGroup","row","values","CircuitsList","selectCircuits","loadingCircuits","isLoading","useSelectedCircuitId","CircuitInfoCard","circuit","ManageOrdersTab","CircuitJsonView","jsonView","src","collapsed","displayDataTypes","displayObjectSize","theme","jsonViewerTheme","CircuitStatsCard","circuitId","isLoadingStats","isLoadingCircuitsStats","stats","circuitsStats","statsData","avg_cost","avg_eval_time","Completed","completed","CircuitDetailedInfo","intoType","setInfoType","currentSelectedCircuit","selectCurrentCircuit","justified","toolbar","t","getCurrencyImage","imageContainer","content","CircuitDetailedInfoFactory","ChartTypeSelect","chartType","onSelectChartType","sm","tabs","vertical","ChartType","ChartSettingsContext","createContext","DataRangeSelect","useContext","dataRange","setDataRange","DateUnit","ChartLegend","price","chartLegend","chartName","ChartTemplate","loadingData","seriesType","seriesData","seriesOptions","chartOptions","volumesData","displayVolumes","options","localization","timeFormatter","formatUTCTimestamp","getDateFormatBasedOnDateUnit","timeScale","tickMarkFormatter","fixRightEdge","rightPriceScale","scaleMargins","top","bottom","chart","useChart","useRenderChartData","visibleRange","volumes","ProofCostChart","upColor","colors","successColor","downColor","dangerColor","priceLineWidth","useGetCircuitDashboardData","chartData","candlestickChartData","isLoadingChartData","ProofTimeGenChart","color","infoColor","proofGenTimeData","ChartSettingsProvider","hour","setDisplayVolumes","Provider","DashboardToolbar","isFullscreen","setFullScreen","CircuitInfoPanel","currentCircuit","circuitInfo","panel","renderDashOnEmptyValue","max","min","volume","CircuitDashboard","proofCostChart","setChartType","fullScreen","ChartFactory","proofGetTimeChart","OrderManagementContext","OrderManagementContextProvider","processing","setProcessing","selectedValues","setSelectedValues","OrderBookTableCell","cell","userOrdersAmount","getCellProps","OrderBookTableRow","propsClassName","onClickRow","eval_time","getRowProps","style","combinedStyle","combinedClassName","cells","defaultOrderBookState","OrderBookTable","lastOrderData","maxVolume","rowsContainer","getDataWithVolumes","renderRow","ask","lastOrderDataContainer","reverse","bid","orderBookTable","disableSortRemove","count","ordersAmount","OrderBookSettingsContext","OrderBookToolbar","priceStep","setPriceStep","changePriceStepButton","OrderBookPriceStep","sort","OrderBook","orderBookData","useGetOrderBookData","header","orderBook","OrderBookViewFactory","isError","BaseFormGroup","hintText","labelText","uniqueId","Label","htmlFor","validateFn","v","isNaN","CreateTradeOrderForm","useFormContext","setValueOpts","shouldDirty","shouldValidate","valueAsNumber","detailsTitle","validate","PublicInput","rules","val","handleJsonFile","reader","FileReader","onload","result","obj","onerror","onabort","file","at","readAsText","multiple","accept","CreateBidForm","selectedCircuitId","selectedid","dispatch","useDispatch","defaultValues","sender","statement_key","onSubmitBid","createBid","AddBid","notificationActions","create","message","reset","CreateAskForm","onSubmitAsk","createAsk","AddAsk","CreateOrdersTabs","currentTab","onSetTab","TradeOrderType","CreateOrdersPanel","buy","tab","setTab","tabFactory","sell","TradeHistoryTable","getCellClassName","TradeHistory","useGetTradeHistoryData","TradeHistoryViewFactory","ManageOrdersPanelTabs","ToolbarPanel","onAccept","onDecline","danger","disableSortBy","ActiveOrdersTable","selectedRow","setSelectedRow","onAcceptRemoveOrder","orderId","fetcher","removeBid","removeAsk","action","RemoveBid","RemoveAsk","canRemove","shouldUseToFixed","activeOrders","status","inProgressOrders","HistoryOrdersTable","ManageOrdersPanel","useGetManageOrdersData","activeOrdersData","historyOrdersData","loading","history","ProofListItem","proof","selectSelectedProofId","portfolio","ProofList","proofList","selectProofList","loadingProofs","proofState","isLoadingProofs","getProofsError","useSelectedProofId","ProofListViewFactory","ProofContentCardToolbar","getProofById","useDownloadJson","fileName","downloadJson","ProofContentCard","selectedProofId","proofData","proofs","ProofViewFactory","Currency","includes","UrlQueryParam","RouterParam","unit","minute","quaterMinute","halfHour","day","databaseUrl","apiUrl","httpFetcher","createBearerHttpClient","createFetcher","getBidsByCircuitId","post","query","bindVars","batchSize","then","bidToRemoveId","getAsksByCircuitId","askToRemoveId","readonlyUser","selectUserName","useSearchParams","refUrlParam","get","getUserFromJwt","UpdateUserName","navigateTo","root","replace","setChart","htmlElement","createChart","width","clientWidth","height","clientHeight","chartDefaultOptions","fitContent","handleResize","applyOptions","remove","chartDefaultTheme","background","baseDarkerColor","fontFamily","layoutTextColor","secondaryDarkerColor","gridLineColor","baseLightColor","layout","ColorType","Solid","textColor","grid","vertLines","horzLines","withVolumes","asksState","asks","selectCompletedAsks","grouppedOrders","reduceOrdersByDate","getCandlestickData","getProofGenTimeData","getVolumesData","reduce","previousValue","currentValue","date","getUTCTimestamp","updatedOn","push","ordersGrouppedByDate","index","ordersCosts","high","low","open","close","time","Number","ordersEvalTime","averageEvalTime","sum","costs","transparentSuccessColor","transparentDangerColor","markers","setPrice","series","addLineSeries","bind","seriesDefaultOptions","addCandlestickSeries","setData","setMarkers","volumeSeries","addHistogramSeries","volumeSeriesDefaultOptions","crosshairMoveHandler","param","seriesPrices","subscribeCrosshairMove","removeSeries","unsubscribeCrosshairMove","setVisibleLogicalRange","getDataRange","priceFormat","precision","minMove","transparentBaseLightColor","priceScaleId","rightEdge","distance","from","itemsLimit","bidsState","selectAsksList","bids","selectBidsList","userAsks","selectCurrentUserAsks","userBids","selectCurrentUserBids","getLastOrderData","sortType","customSortFunction","sortDescFirst","reduceOrdersByCostAndEvalTime","mapKey","round","set","asksData","createOrderBookData","Map","bidsData","concat","orderType","userOrders","forEach","parsedKey","some","currentAsks","completedAsks","latestCost","prevCost","firstRow","secondRow","columnId","firstValue","secondValue","mapToTradeHistoryData","i","matched_time","timestamp","formatDate","getType","costA","costB","createdBids","selectCurrentUserCreatedBids","completedBids","selectCurrentUserCompletedBids","createdAsks","selectCurrentUserActiveAsks","selectCurrentUserCompletedAsks","mappedAsks","mapToManageOrdersData","mappedBids","createdOn","init_time","useParams","UpdateSelectedCircuitId","proofId","UpdateSelectedProofId","setLoading","processDownload","remoteData","a","document","createElement","download","URL","createObjectURL","Blob","clickEvt","MouseEvent","view","bubbles","cancelable","dispatchEvent","initialValue","storedValue","setStoredValue","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","defaultState","setNewState","input","filters","columnOrder","groupBy","decoded","jwt_decode","preferred_username","Error","format","dayjs","floorToQuaterMinute","minutes","getMinutes","minutesToSet","setMinutes","dateString","floorTo","setSeconds","setHours","floorDateTo","trunc","getTime","fractionDigits","ProtectedRoute","readonlyAccess","redirectPath","getNavigateTo","AuthLayout","MainLayout","stickyHeader","MarketView","lazy","LoginView","PortfolioView","Page404","RegisterView","routesConfig","element","any","Router","useRoutes","loginData","db","getUserBalance","dbName","getCircuits","getCircuitsInfo","getCircuitsStats","getProofs","currentUser","HttpClient","requestConfig","configureClient","client","this","axios","config","response","payload","put","delete","REACT_APP_BASE_API_URL","baseUrl","withCredentials","injectToken","baseURL","interceptors","request","use","injectJwtToken","jwtToken","headers","Authorization","base00","base01","base02","base03","base04","primaryColor","base05","base06","base07","base08","base09","base0A","secondaryColor","base0B","base0C","base0D","base0E","base0F","require","ErrorView","baseDocumentTitle","withProfiler","titleTemplate","defaultTitle","requiredEnv","gaInitOptions","testMode","onPerfEntry","dsn","Sentry","integrations","BrowserTracing","tracesSampleRate","configureSentry","measurementId","initialize","configureGA","StrictMode","store","getElementById","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createAction","UpdateUserBalance","UpdateUserBalanceIsLoading","UpdateUserBalanceIsLoadingError","loadingBalanceError","UserReducer","createReducer","builder","addCase","AuthSaga","TryGetUserFromLocalStorageTokenSaga","fork","ProtectedCall","fn","args","call","code","UpdateCircuitsList","UpdateIsLoadingCircuits","UpdateCircuitsError","UpdateCircuitsInfoList","UpdateIsLoadingCircuitsInfo","UpdateCircuitsStats","UpdateIsLoadingCircuitsStats","UpdateBidsList","UpdateIsLoadingBids","UpdateBidsError","UpdateAsksList","UpdateIsLoadingAsks","UpdateAsksError","circuits","CircuitsReducer","AsksReducer","BidsReducer","createSelector","RevalidateSaga","Revalidate","fnToRevalidate","revalidateInterval","take","task","cancel","CircuitsSaga","GetCircuitsInfoSaga","GetCircuitsStatsSaga","GetCircuitsAdditionalData","revalidateCircuitsInfoInterval","takeLatest","GetCircuitsSaga","SelectCircuitSaga","select","circutsInfo","circutsStats","all","BidsSaga","GetBidsSaga","revalidateBidsDelay","AsksSaga","GetAsksSaga","revalidateAsksDelay","UserSaga","GetUserInfoSaga","UpdateProofList","UpdateIsLoadingProofs","UpdateProofsError","ProofReducer","p","ProofSaga","GetProofSaga","selectUser","SelectProofSaga","RootReducer","combineReducers","RootSaga","sagaMiddleware","createSagaMiddleware","middlewares","configureStore","reducer","middleware","getDefaultMiddleware","thunk","devTools","run"],"mappings":"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","file":"static/js/main.6764ef13.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CircuitsList_container__1qQmw\",\"inputGroup\":\"CircuitsList_inputGroup__27p_A\",\"dailyChangeIndicator\":\"CircuitsList_dailyChangeIndicator__RTBF4\",\"selected\":\"CircuitsList_selected__1dL4j\",\"listGroup\":\"CircuitsList_listGroup__1Tbj6\",\"itemBody\":\"CircuitsList_itemBody__1Zh-p\"};","/**\n * @file Local storage API.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Get localStorage item.\n *\n * @param ItemKey - Key.\n * @returns Item value.\n */\nexport const getItemFromLocalStorage = <T>(ItemKey: string): T | undefined => {\n    try {\n        const serialisedValue = localStorage.getItem(ItemKey);\n        if (serialisedValue === null) {\n            return undefined;\n        }\n        return JSON.parse(serialisedValue);\n    } catch {\n        return undefined;\n    }\n};\n\n/**\n * Set localStorage item.\n *\n * @param ItemKey - Key.\n * @param ItemValue - Value.\n */\nexport const setItemIntoLocalStorage = <T>(ItemKey: string, ItemValue: T): void => {\n    try {\n        const serialisedValue = JSON.stringify(ItemValue);\n        localStorage.setItem(ItemKey, serialisedValue);\n    } catch {\n        // Do nothing\n    }\n};\n\n/**\n * Remove item from localStorage.\n *\n * @param ItemKey - Key.\n */\nexport const removeItemFromLocalStorage = (ItemKey: string): void => {\n    try {\n        localStorage.removeItem(ItemKey);\n    } catch {\n        // Do nothing\n    }\n};\n","/**\n * @file Enum declaration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Detailed info tab.\n */\nexport enum DetailedInfoTab {\n    info = 'Circuit info',\n    stats = 'Statistics',\n}\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Icon } from '@nilfoundation/react-components';\nimport { socialLinks } from '../../../constants';\nimport styles from './SocialLinks.module.scss';\n\n/**\n * Props.\n */\ntype SocialLinksProps = {\n    className?: string;\n    bottomIndent?: boolean;\n};\n\n/**\n * Social links.\n *\n * @param {SocialLinksProps} props Props.\n * @returns React component.\n */\nexport const SocialLinks = ({ className, bottomIndent }: SocialLinksProps): ReactElement => (\n    <ul\n        aria-label=\"Social media links\"\n        className={`${styles.socialLinks} ${className ?? ''} ${\n            bottomIndent ? styles.bottomIndent : ''\n        }`}\n    >\n        {socialLinks.map(({ icon, url }) => (\n            <li key={icon}>\n                <a href={url}>\n                    <Icon\n                        iconName={`fa-brands fa-${icon}`}\n                        srOnlyText={`${icon} link`}\n                    />\n                </a>\n            </li>\n        ))}\n    </ul>\n);\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\n\n/**\n * Copyright text.\n *\n * @returns React component.\n */\nexport const Copyright = (): ReactElement => {\n    return <>{`Copyright © =nil; Foundation ${new Date().getFullYear()}`}</>;\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Container, Row, Col } from '@nilfoundation/react-components';\nimport { SocialLinks } from '../SocialLinks';\nimport { Copyright } from '../Copyright';\nimport styles from './Footer.module.scss';\n\n/**\n * Footer.\n *\n * @returns React component.\n */\nexport const Footer = (): ReactElement => (\n    <Container className={styles.footer}>\n        <Row>\n            <Col>\n                <SocialLinks bottomIndent />\n            </Col>\n        </Row>\n        <Row className=\"text-center\">\n            <Col>\n                <Copyright />\n            </Col>\n        </Row>\n    </Container>\n);\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Dropdown } from '@nilfoundation/react-components';\nimport { navigationLinks } from '../../../constants';\nimport styles from './MobileMenu.module.scss';\n\n/**\n * Mobile menu.\n *\n * @returns React component.\n */\nexport const MobileMenu = (): ReactElement => {\n    return (\n        <Dropdown className={styles.menu}>\n            <Dropdown.Button\n                className={styles.button}\n                iconNameDropdownClosed=\"fa fa-bars\"\n                iconNameDropdownOpend=\"fa fa-times\"\n            />\n            <Dropdown.Menu align=\"right\">\n                {navigationLinks.map(({ title, path }) => (\n                    <Dropdown.Item\n                        href={path}\n                        key={title}\n                    >\n                        {title}\n                    </Dropdown.Item>\n                ))}\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n","/**\n * @file React functional component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode } from 'react';\nimport { Jumbotron } from '@nilfoundation/react-components';\nimport styles from './AuthCard.module.scss';\n\n/**\n * Props.\n */\ntype AuthCardProps = {\n    children: ReactNode;\n};\n\n/**\n * Auth card template.\n *\n * @param {AuthCardProps} props - Props.\n * @returns React component.\n */\nexport const AuthCard = ({ children }: AuthCardProps): ReactElement => {\n    return <Jumbotron className={styles.authCard}>{children}</Jumbotron>;\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useRef, useState, useEffect } from 'react';\nimport {\n    Image,\n    InputGroup,\n    Icon,\n    Input,\n    Size,\n    Button,\n    Variant,\n    Form,\n    Spinner,\n} from '@nilfoundation/react-components';\nimport { CSSTransition } from 'react-transition-group';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { Path } from 'src/routing';\nimport { LoginData } from 'src/models';\nimport { login } from 'src/api';\nimport { useLogin } from 'src/hooks';\nimport { AuthCard } from '../AuthCard';\nimport styles from './LoginForm.module.scss';\n\n/**\n * Password input type.\n */\ntype PwdInputType = 'password' | 'text';\n\n/**\n * Login form.\n *\n * @returns React component.\n */\nexport const LoginForm = (): ReactElement => {\n    const nodeRef = useRef(null);\n    const userNameInputRef = useRef<HTMLInputElement | null>(null);\n    const processLogin = useLogin();\n    const [errorMessage, setErrorMessage] = useState<string>();\n    const [pwdInputType, setPwdInputType] = useState<PwdInputType>('password');\n    const pwdInputIconName = pwdInputType === 'password' ? 'fa-eye-slash' : 'fa-eye';\n    const switchPwdInputType = () =>\n        setPwdInputType(pwdInputType === 'password' ? 'text' : 'password');\n\n    const {\n        register,\n        formState: { isSubmitting, isValid, errors },\n        handleSubmit,\n    } = useForm<LoginData>({\n        mode: 'onChange',\n    });\n\n    const onSubmitLogin = handleSubmit(async (data: LoginData): Promise<void> => {\n        setErrorMessage('');\n        try {\n            const { jwt } = await login(data);\n            processLogin(jwt);\n        } catch (e) {\n            setErrorMessage('Login error');\n        }\n    });\n\n    useEffect(() => {\n        userNameInputRef.current && userNameInputRef.current.focus();\n    }, []);\n\n    const { ref, ...restRegister } = register('username', { required: true });\n\n    return (\n        <AuthCard>\n            <Image\n                source={`${process.env.PUBLIC_URL}/logo512x384.png`}\n                alt=\"=nil; Foundation logo\"\n                responsive\n                rounded\n                className={styles.logoImage}\n            />\n            <Form>\n                <Form.Group hasError={!!errors['username']}>\n                    <InputGroup\n                        size={Size.lg}\n                        className={styles.control}\n                    >\n                        <InputGroup.Addon>\n                            <Icon\n                                iconName=\"fa-solid fa-user\"\n                                className={styles.icon}\n                            />\n                        </InputGroup.Addon>\n                        <Input\n                            type=\"text\"\n                            id=\"userName\"\n                            placeholder=\"username\"\n                            aria-label=\"username\"\n                            {...restRegister}\n                            ref={e => {\n                                ref(e);\n                                userNameInputRef.current = e;\n                            }}\n                        />\n                    </InputGroup>\n                </Form.Group>\n                <Form.Group hasError={!!errors['password']}>\n                    <InputGroup\n                        size={Size.lg}\n                        className={styles.control}\n                    >\n                        <InputGroup.Addon>\n                            <Icon\n                                iconName=\"fa-solid fa-lock\"\n                                className={styles.icon}\n                            />\n                        </InputGroup.Addon>\n                        <Input\n                            type={pwdInputType}\n                            id=\"password\"\n                            aria-label=\"password\"\n                            placeholder=\"password\"\n                            autoComplete=\"off\"\n                            {...register('password')}\n                        />\n                        <InputGroup.Buttons>\n                            <Button onClick={switchPwdInputType}>\n                                <Icon\n                                    iconName={`fa-solid ${pwdInputIconName}`}\n                                    className={styles.icon}\n                                />\n                            </Button>\n                        </InputGroup.Buttons>\n                    </InputGroup>\n                </Form.Group>\n                <Button\n                    block\n                    variant={Variant.success}\n                    size={Size.lg}\n                    onClick={onSubmitLogin}\n                    disabled={!isValid || isSubmitting}\n                >\n                    Login\n                    {isSubmitting && <Spinner />}\n                </Button>\n                <CSSTransition\n                    classNames=\"fade\"\n                    timeout={300}\n                    in={!!errorMessage}\n                    unmountOnExit\n                    nodeRef={nodeRef}\n                >\n                    <div\n                        ref={nodeRef}\n                        className=\"errorMessage\"\n                    >\n                        {errorMessage}\n                    </div>\n                </CSSTransition>\n                <h5 className=\"text-muted text-center\">{\"Don't have an account? \"}</h5>\n                <Link to={Path.register}>\n                    <Button\n                        block\n                        variant={Variant.success}\n                        size={Size.lg}\n                    >\n                        Request credentials\n                    </Button>\n                </Link>\n            </Form>\n        </AuthCard>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode } from 'react';\nimport { Icon, useBreakpoints } from '@nilfoundation/react-components';\nimport { Link } from 'react-router-dom';\nimport { Copyright, FullScreenView } from 'src/components';\nimport { Path } from 'src/routing';\nimport styles from './AuthContainer.module.scss';\n\n/**\n * Props.\n */\ntype AuthContainerProps = {\n    children: ReactNode;\n};\n\n/**\n * Auth container.\n *\n * @param {AuthContainerProps} props Props.\n * @returns React component.\n */\nexport const AuthContainer = ({ children }: AuthContainerProps): ReactElement => {\n    const { md, lg } = useBreakpoints();\n\n    return (\n        <FullScreenView\n            showFullScreen\n            className={styles.loginContainer}\n        >\n            {children}\n            {md ||\n                (lg && (\n                    <Link\n                        className={styles.back}\n                        to={Path.market}\n                    >\n                        <Icon iconName=\"fa-solid fa-chevron-left\" />\n                        Back to Market\n                    </Link>\n                ))}\n            <div className={styles.copyright}>\n                <Copyright />\n            </div>\n        </FullScreenView>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useRef, useState, useMemo, useEffect, ChangeEvent } from 'react';\nimport {\n    InputGroup,\n    Icon,\n    Input,\n    Size,\n    Button,\n    Variant,\n    Form,\n    Spinner,\n} from '@nilfoundation/react-components';\nimport { useForm, ValidationError } from '@formspree/react/dist/index.js';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport { Path } from 'src/routing';\nimport { SocialLinks } from 'src/components/common';\nimport { emailRegExp } from 'src/utils';\nimport { AuthCard } from '../AuthCard';\nimport styles from './RegisterForm.module.scss';\n\n/**\n * Register form.\n *\n * @returns React component.\n */\nexport const RegisterForm = (): ReactElement => {\n    const [email, setEmail] = useState('');\n    const isEmailValid = useMemo(() => !!email && emailRegExp.test(email), [email]);\n    const emailInputRef = useRef<HTMLInputElement | null>(null);\n    const [state, handleSubmit] = useForm(process.env.REACT_APP_FORMSPREE_FORM_ID!, {\n        data: {\n            subject: `New credentials request from ${window.location.hostname}`,\n        },\n    });\n    const { submitting, succeeded, errors } = state;\n    const debouncedOnChangeHandler = useRef(\n        debounce((e: ChangeEvent<HTMLInputElement>) => {\n            setEmail(e.target.value);\n        }, 180),\n    ).current;\n\n    useEffect(() => {\n        emailInputRef.current && emailInputRef.current.focus();\n    }, []);\n\n    if (succeeded) {\n        return (\n            <div className={styles.successMessage}>\n                <h4>Thank you for request!</h4>\n                <Link to={Path.market}>\n                    <Button\n                        block\n                        variant={Variant.primary}\n                        size={Size.lg}\n                    >\n                        Back to market\n                    </Button>\n                </Link>\n            </div>\n        );\n    }\n\n    return (\n        <AuthCard>\n            <Form\n                className={styles.form}\n                onSubmit={handleSubmit}\n            >\n                <h4 className={styles.title}>Request your beta-test credentials via email</h4>\n                <div className={`${styles.description} text-muted`}>\n                    If you would like to get involved early, leave email below and we will let you\n                    know when proof market opens!\n                </div>\n                <Form.Group hasError={!isEmailValid && !!email}>\n                    <InputGroup\n                        size={Size.lg}\n                        className={styles.control}\n                    >\n                        <InputGroup.Addon>\n                            <Icon iconName=\"fa-solid fa-at\" />\n                        </InputGroup.Addon>\n                        <Input\n                            type=\"email\"\n                            name=\"email\"\n                            id=\"email\"\n                            aria-label=\"email\"\n                            placeholder=\"your email\"\n                            autoComplete=\"off\"\n                            ref={emailInputRef}\n                            onChange={debouncedOnChangeHandler}\n                        />\n                    </InputGroup>\n                </Form.Group>\n                <Button\n                    block\n                    variant={Variant.success}\n                    size={Size.lg}\n                    disabled={submitting || !isEmailValid}\n                    type=\"submit\"\n                >\n                    Submit\n                    {submitting && <Spinner />}\n                </Button>\n                {errors.length !== 0 && (\n                    <div className=\"errorMessage text-center\">\n                        <ValidationError\n                            field=\"email\"\n                            prefix=\"Email\"\n                            errors={errors}\n                        />\n                    </div>\n                )}\n                <div className={styles.social}>\n                    <h5 className={styles.title}>\n                        {\n                            \"Join our Discord's proof-market channel/Telegram for questions/to stay updated\"\n                        }\n                    </h5>\n                    <SocialLinks />\n                </div>\n                <h5 className=\"text-center text-muted\">{'Already have an account? '}</h5>\n                <Link to={Path.login}>\n                    <Button\n                        block\n                        variant={Variant.success}\n                        size={Size.lg}\n                    >\n                        Sign in\n                    </Button>\n                </Link>\n            </Form>\n        </AuthCard>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode, useEffect, useState } from 'react';\nimport { login } from 'src/api';\nimport { useAuth, useLogin } from 'src/hooks';\n\n/**\n * Props.\n */\ntype ReadonlyAccessProviderProps = {\n    children?: ReactNode;\n    fallback?: ReactNode;\n    errorView?: ReactNode;\n};\n\n/**\n * Provider automatic auth with readonly user.\n *\n * @param {ReadonlyAccessProviderProps} props Props.\n * @returns React component.\n */\nexport const ReadonlyAccessProvider = ({\n    children,\n    fallback,\n    errorView,\n}: ReadonlyAccessProviderProps): ReactElement => {\n    const [error, setError] = useState(false);\n    const processLogin = useLogin();\n    const { isAuthentificated } = useAuth();\n\n    useEffect(() => {\n        const readonlyUser = process.env.REACT_APP_READONLY_USER;\n\n        const loginWithReadonly = async (user: string) => {\n            try {\n                const { jwt } = await login({\n                    username: user,\n                    password: '',\n                });\n\n                processLogin(jwt);\n            } catch (e) {\n                setError(true);\n            }\n        };\n\n        !isAuthentificated && loginWithReadonly(readonlyUser!);\n    }, [processLogin, isAuthentificated]);\n\n    if (error) {\n        return <>{errorView}</>;\n    }\n\n    return <>{isAuthentificated ? children : fallback ?? null}</>;\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useEffect } from 'react';\nimport { Label, Spinner } from '@nilfoundation/react-components';\nimport { selectUserBalance, useAppSelector } from 'src/redux';\nimport { useLocalStorage } from 'src/hooks';\nimport { ClicableIcon } from 'src/components';\nimport { longDash } from 'src/utils';\nimport styles from './UserBalance.module.scss';\n\n/**\n * Props.\n */\ntype UserBalanceProps = {\n    className?: string;\n    canToggleVisibility?: boolean;\n};\n\n/**\n * User balance.\n *\n * @param {UserBalanceProps} props - Props.\n * @returns React component.\n */\nexport const UserBalance = ({ className, canToggleVisibility }: UserBalanceProps): ReactElement => {\n    const [hidden, setHidden] = useLocalStorage('userBalanceHidden', false);\n    const userBalance = useAppSelector(selectUserBalance);\n    const loadingUserBalance = useAppSelector(s => s.userState.balanceIsLoading);\n\n    useEffect(() => {\n        canToggleVisibility && setHidden(false);\n    }, [canToggleVisibility, setHidden]);\n\n    const balance = userBalance?.balance?.toFixed(2);\n    const blocked = userBalance?.blocked?.toFixed(2);\n    const iconName = hidden ? 'fa-eye-slash' : 'fa-eye';\n    const isNoData = balance === undefined && blocked === undefined;\n    const displayLoader = isNoData && loadingUserBalance;\n\n    return (\n        <div className={`${styles.balance} ${className ?? ''}`}>\n            {canToggleVisibility && (\n                <ClicableIcon\n                    onClick={() => setHidden(!hidden)}\n                    iconName={`fa-solid ${iconName}`}\n                />\n            )}\n            {isNoData && !loadingUserBalance && longDash}\n            {balance !== undefined && (\n                <span\n                    className={`${styles.text} ${hidden ? styles.hiddenText : ''}`}\n                    title={hidden ? undefined : `Balance: ${balance}`}\n                >\n                    {`${hidden ? '*'.repeat(balance.length) : balance}`}\n                </span>\n            )}\n            {blocked !== undefined && (\n                <Label className={styles.label}>\n                    <span\n                        className={hidden ? styles.hiddenText : ''}\n                        title={`Blocked: ${blocked}`}\n                    >\n                        {`${hidden ? '*'.repeat(blocked.length) : blocked}`}\n                    </span>\n                </Label>\n            )}\n            {displayLoader ? <Spinner grow /> : <span className={styles.currency}>USD</span>}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Button, Dropdown, Icon, Menu } from '@nilfoundation/react-components';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth, useLogout } from 'src/hooks';\nimport { Path } from 'src/routing';\nimport { UserBalance } from '../UserBalance';\nimport styles from './UserMenu.module.scss';\n\n/**\n * User menu.\n *\n * @returns React component.\n */\nexport const UserMenu = (): ReactElement => {\n    const { user, isReadonly } = useAuth();\n    const processLogout = useLogout();\n    const navigate = useNavigate();\n\n    if (!user || isReadonly) {\n        return (\n            <Button\n                className={styles.button}\n                onClick={() => navigate(Path.login)}\n            >\n                <Icon iconName=\"fa-solid fa-circle-user\" />\n                Sign In\n            </Button>\n        );\n    }\n\n    return (\n        <div className={styles.menu}>\n            <Dropdown className={styles.dropdown}>\n                <Dropdown.Button className={styles.button}>\n                    <Icon iconName=\"fa-solid fa-circle-user\" />\n                    {user}\n                </Dropdown.Button>\n                <Dropdown.Menu align=\"right\">\n                    <Menu.Header className={styles.balanceContainer}>\n                        <div className={styles.balanceTitle}>Current balance:</div>\n                        <UserBalance className={styles.balance} />\n                    </Menu.Header>\n                    <Menu.Divider />\n                    <Dropdown.Item onSelect={processLogout}>Logout</Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown>\n        </div>\n    );\n};\n","/**\n * @file React functional component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, Size, Variant } from '@nilfoundation/react-components';\nimport { Path } from 'src/routing';\nimport { useAuth } from 'src/hooks';\nimport { Overlay } from 'src/components/common';\nimport styles from './ProtectedContent.module.scss';\n\n/**\n * Props.\n */\ntype ProtectedComponentProps = {\n    children: ReactNode;\n    overlayTitle?: string;\n    overlayButtonText?: string;\n};\n\n/**\n * Component to restrict non-authorized and readonly users access.\n * Renders an overlay with a link to login page.\n *\n * Consider to add position: relative to parent container.\n *\n * @param {ProtectedComponentProps} props - Props.\n * @returns React component.\n */\nexport const ProtectedContent = ({\n    children,\n    overlayTitle,\n    overlayButtonText = 'Sign in',\n}: ProtectedComponentProps): ReactElement => {\n    const { isAuthentificated, isReadonly } = useAuth();\n    const navigate = useNavigate();\n\n    return (\n        <>\n            {(!isAuthentificated || isReadonly) && (\n                <Overlay>\n                    <div className={styles.container}>\n                        {overlayTitle && <h4 className=\"text-center\">{overlayTitle}</h4>}\n                        <Button\n                            variant={Variant.success}\n                            size={Size.lg}\n                            onClick={() => navigate(Path.login)}\n                        >\n                            {overlayButtonText}\n                        </Button>\n                    </div>\n                </Overlay>\n            )}\n            {children}\n        </>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { Breadcrumbs as NativeBreadcrumbs } from '@nilfoundation/react-components';\nimport { Link } from 'react-router-dom';\nimport { mainSiteAddress } from 'src/constants';\nimport { Path } from 'src/routing';\nimport styles from './Breadcrumbs.module.scss';\n\n/**\n * Breadcrumbs component.\n *\n * @returns React component.\n */\nexport const Breadcrumbs = (): JSX.Element => {\n    return (\n        <NativeBreadcrumbs className={styles.breadcrumbs}>\n            <NativeBreadcrumbs.Item\n                href={mainSiteAddress}\n                className={styles.item}\n            >\n                <span>\n                    <code>=nil;</code>Foundation\n                </span>\n            </NativeBreadcrumbs.Item>\n            <NativeBreadcrumbs.Item\n                className={styles.item}\n                renderLink={() => (\n                    <Link to={Path.market}>\n                        <span>Proof Market</span>\n                    </Link>\n                )}\n            />\n        </NativeBreadcrumbs>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Nav } from '@nilfoundation/react-components';\nimport { Link, useMatch } from 'react-router-dom';\nimport { Path } from 'src/routing';\n\n/**\n * Props.\n */\ntype HeaderLinkProps = {\n    title: string;\n    to: Path;\n};\n\n/**\n * Header link.\n *\n * @param {HeaderLinkProps} props Props.\n * @returns React component.\n */\nexport const HeaderLink = ({ title, to }: HeaderLinkProps): ReactElement => {\n    const match = useMatch({\n        path: to,\n        end: false,\n    });\n\n    return (\n        <Nav.Item\n            key={title}\n            active={!!match}\n            renderLink={({ active: _, ...props }) => (\n                <Link\n                    to={to}\n                    {...props}\n                >\n                    <span>{title}</span>\n                </Link>\n            )}\n        />\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Container, Navbar, Nav } from '@nilfoundation/react-components';\nimport { navigationLinks } from 'src/constants';\nimport { MobileMenu } from '../MobileMenu';\nimport { UserMenu } from '../../login';\nimport { Breadcrumbs } from '../BreadCrumbs';\nimport { HeaderLink } from './HeaderLink';\nimport styles from './Header.module.scss';\n\n/**\n * Header.\n *\n * @returns React component.\n */\nexport const Header = (): ReactElement => {\n    return (\n        <Navbar className={styles.navbar}>\n            <Container\n                className={styles.container}\n                fluid\n            >\n                <Breadcrumbs />\n                <Nav className={styles.nav}>\n                    {navigationLinks.map(({ title, path }) => (\n                        <HeaderLink\n                            key={path}\n                            title={title}\n                            to={path}\n                        />\n                    ))}\n                </Nav>\n                <UserMenu />\n                <MobileMenu />\n            </Container>\n        </Navbar>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport {\n    KeyboardEventHandler,\n    ReactElement,\n    ReactNode,\n    useState,\n    Children,\n    isValidElement,\n    cloneElement,\n} from 'react';\nimport { Icon } from '@nilfoundation/react-components';\nimport styles from './Details.module.scss';\n\n/**\n * Props.\n */\ntype DetailsProps = {\n    children: ReactNode;\n    title: ReactNode;\n    defaultOpen?: boolean;\n    bottomIndent?: boolean;\n    unmountOnClose?: boolean;\n    disabled?: boolean;\n};\n\n/**\n * Details.\n *\n * @param {DetailsProps} props Props.\n * @returns React component.\n */\nexport const Details = ({\n    children,\n    title,\n    defaultOpen = true,\n    bottomIndent = true,\n    unmountOnClose = false,\n    disabled = false,\n}: DetailsProps): ReactElement => {\n    const [isOpen, setIsOpen] = useState(defaultOpen);\n    const toggleIsOpen = () => setIsOpen(!isOpen);\n\n    const onKeyDownHandler: KeyboardEventHandler = e => {\n        if (e.key !== 'Enter' && e.key !== ' ') {\n            return;\n        }\n\n        !disabled && toggleIsOpen();\n    };\n\n    const iconClassName = `fa-solid fa-angle-${isOpen ? 'up' : 'down'} ${\n        disabled ? 'text-muted' : ''\n    }`;\n\n    return (\n        <>\n            <div\n                className={`${styles.title} ${bottomIndent ? styles.bottomIndent : ''}`}\n                onClick={toggleIsOpen}\n                onKeyDown={onKeyDownHandler}\n                role=\"button\"\n                tabIndex={0}\n            >\n                {title}\n                <Icon iconName={iconClassName} />\n            </div>\n            <>\n                {(!unmountOnClose || isOpen) &&\n                    Children.map(children, child => {\n                        if (isValidElement(child)) {\n                            const props = {\n                                className: `${child.props.className} ${!isOpen ? ' hidden' : ''}`,\n                            };\n\n                            return cloneElement(child, props);\n                        }\n\n                        return child;\n                    })}\n            </>\n        </>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode } from 'react';\nimport { Jumbotron } from '@nilfoundation/react-components';\nimport styles from './DashboardCard.module.scss';\n\n/**\n * Props.\n */\ntype DashboardCardProps = {\n    children: ReactNode;\n    className?: string;\n};\n\n/**\n * Dashboard card.\n *\n * @param {DashboardCardProps} props - Props.\n * @returns React component.\n */\nexport const DashboardCard = ({ children, className }: DashboardCardProps): ReactElement => {\n    return (\n        <Jumbotron className={`${styles.dashboardCard} ${className ?? ''}`}>{children}</Jumbotron>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { DetailedHTMLProps, HTMLAttributes, ReactElement } from 'react';\nimport styles from './Table.module.scss';\n\n/**\n * Props.\n */\ntype TableProps = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n\n/**\n * Table.\n *\n * @param {TableProps} props Props.\n * @returns React component.\n */\nexport const Table = ({ className, children, ...rest }: TableProps): ReactElement => {\n    return (\n        <div\n            role=\"table\"\n            className={`${styles.table} ${className ?? ''}`}\n            {...rest}\n        >\n            {children}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { DetailedHTMLProps, HTMLAttributes, ReactElement } from 'react';\n\n/**\n * Props.\n */\ntype TBodyProps = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n\n/**\n * Table body.\n *\n * @param {TBodyProps} props Props.\n * @returns React component.\n */\nexport const TBody = ({ children, className, ...rest }: TBodyProps): ReactElement => {\n    return (\n        <div\n            role=\"rowgroup\"\n            className={`tableBody ${className ?? ''}`}\n            {...rest}\n        >\n            {children}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { DetailedHTMLProps, HTMLAttributes, ReactElement } from 'react';\n\n/**\n * Props.\n */\ntype TCellProps = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n\n/**\n * Table cell.\n *\n * @param {TCellProps} props Props.\n * @returns React component.\n */\nexport const TCell = ({ children, ...rest }: TCellProps): ReactElement => {\n    return (\n        <div\n            role=\"cell\"\n            {...rest}\n        >\n            {children}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { DetailedHTMLProps, HTMLAttributes, ReactElement } from 'react';\nimport clsx from 'clsx';\nimport styles from './Table.module.scss';\n\n/**\n * Props.\n */\ntype THeadProps = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement> & {\n    sticky?: boolean;\n    isFooterHeader?: boolean;\n};\n\n/**\n * Table head.\n *\n * @param {THeadProps} props Props.\n * @returns React component.\n */\nexport const THead = ({\n    sticky,\n    className,\n    children,\n    isFooterHeader,\n    ...rest\n}: THeadProps): ReactElement => {\n    const tHeadClassName = clsx(\n        styles.tableHead,\n        className,\n        sticky && styles.stickyHead,\n        isFooterHeader && styles.footerHead,\n    );\n\n    return (\n        <div\n            role=\"rowgroup\"\n            className={tHeadClassName}\n            {...rest}\n        >\n            {children}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { DetailedHTMLProps, HTMLAttributes, ReactElement } from 'react';\n\n/**\n * Props.\n */\ntype THeaderProps = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement> & {\n    sticky?: boolean;\n};\n\n/**\n * Table column header.\n *\n * @param {THeaderProps} props Props.\n * @returns React component.\n */\nexport const THeader = ({ children, ...rest }: THeaderProps): ReactElement => {\n    return (\n        <div\n            role=\"columnheader\"\n            {...rest}\n        >\n            {children}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { DetailedHTMLProps, HTMLAttributes, ReactElement } from 'react';\n\n/**\n * Props.\n */\ntype TRowProps = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n\n/**\n * Table row.\n *\n * @param {TRowProps} props Props.\n * @returns React component.\n */\nexport const TRow = ({ children, ...rest }: TRowProps): ReactElement => {\n    return (\n        <div\n            role=\"row\"\n            {...rest}\n        >\n            {children}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { KeyboardEventHandler, ReactElement, useLayoutEffect, useMemo } from 'react';\nimport { Icon } from '@nilfoundation/react-components';\nimport { ColumnInstance } from 'react-table';\nimport { THeader } from '../Table';\nimport styles from './ReactTable.module.scss';\n\n/**\n * Props.\n */\ntype ReactTableHeaderProps<T extends Record<string, unknown>> = {\n    column: ColumnInstance<T>;\n    // TODO - refactor after upgrading to react-table@v8\n    onlySortBy?: 'asc' | 'desc';\n};\n\n/**\n * React table header.\n *\n * @param {ReactTableHeaderProps} props Props.\n * @returns React component.\n */\nexport const ReactTableHeader = <T extends Record<string, unknown>>({\n    column,\n    onlySortBy,\n}: ReactTableHeaderProps<T>): ReactElement => {\n    const { canSort, isSorted, isSortedDesc, toggleSortBy } = column;\n\n    const onKeyDownHandler: KeyboardEventHandler = e => {\n        if (e.key !== 'Enter' && e.key !== ' ') {\n            return;\n        }\n\n        e.preventDefault();\n        toggleSortBy();\n    };\n\n    // TODO - refactor after upgrading to react-table@v8\n    const shouldToggleSort = useMemo(() => {\n        if (onlySortBy === undefined) {\n            return false;\n        }\n\n        const toggleSortCondition = onlySortBy === 'asc' ? isSortedDesc : !isSortedDesc;\n        return isSorted && !!toggleSortCondition;\n    }, [onlySortBy, isSortedDesc, isSorted]);\n\n    useLayoutEffect(() => {\n        shouldToggleSort && toggleSortBy();\n    }, [shouldToggleSort, toggleSortBy]);\n\n    return (\n        <THeader\n            {...column.getHeaderProps(column.getSortByToggleProps())}\n            className={canSort ? styles.sortableColumnHeader : ''}\n            tabIndex={canSort ? 0 : undefined}\n            onKeyDown={onKeyDownHandler}\n        >\n            {column.render('Header')}\n            {isSorted && <Icon iconName={`fa-solid fa-angle-${isSortedDesc ? 'down' : 'up'}`} />}\n        </THeader>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode, useEffect } from 'react';\nimport {\n    ColumnInstance,\n    TableInstance,\n    TableOptions,\n    useFilters,\n    useSortBy,\n    useTable,\n} from 'react-table';\nimport { notEmpty } from 'src/utils';\nimport { useDebounce, useInitialTableState } from 'src/hooks';\nimport { ReactTableHeader } from './ReactTableHeader';\nimport { Table, TBody, THead, TRow } from '../Table';\n\n/**\n * Props.\n */\ntype ReactTableProps<T extends Record<string, unknown>> = {\n    name: string;\n    renderRows: (tableInstance: TableInstance<T>) => ReactNode;\n    renderHeaders?: (tableInstance: TableInstance<T>) => ReactNode;\n    className?: string;\n    footerHeader?: boolean;\n    showTableHeader?: boolean;\n} & TableOptions<T>;\n\n/**\n * React-table hook list to pass into table instance.\n */\nconst tableHooks = [useFilters, useSortBy].filter(notEmpty);\n\n/**\n * React table template.\n *\n * @param {ReactTableProps} props Props.\n * @returns React component.\n */\nexport const ReactTable = <T extends Record<string, unknown>>({\n    name,\n    renderRows,\n    renderHeaders,\n    initialState: defaultInitialState,\n    className,\n    footerHeader,\n    showTableHeader = true,\n    ...restOptions\n}: ReactTableProps<T>): ReactElement => {\n    const [initialState, setInitialState] = useInitialTableState(name, defaultInitialState);\n\n    const tableInstance = useTable<T>(\n        {\n            initialState,\n            ...restOptions,\n        },\n        ...tableHooks,\n    );\n    const { getTableBodyProps, visibleColumns, state } = tableInstance;\n\n    const debouncedState = useDebounce(state, 500);\n\n    useEffect(() => {\n        setInitialState(debouncedState);\n    }, [setInitialState, debouncedState]);\n\n    const tableHeadersRenderer = () =>\n        renderHeaders ? renderHeaders(tableInstance) : renderTableHeadersFallback(visibleColumns);\n\n    return (\n        <Table className={className}>\n            {showTableHeader && (\n                <THead\n                    sticky\n                    isFooterHeader={footerHeader}\n                >\n                    <TRow>{tableHeadersRenderer()}</TRow>\n                </THead>\n            )}\n            <TBody {...getTableBodyProps()}>{renderRows(tableInstance)}</TBody>\n        </Table>\n    );\n};\n\n/**\n * Renders table head.\n *\n * @param columns Table columns.\n * @returns Table head.\n */\nconst renderTableHeadersFallback = <T extends Record<string, unknown>>(\n    columns: ColumnInstance<T>[],\n) => (\n    <>\n        {columns.map(column => (\n            <ReactTableHeader\n                key={column.id}\n                column={column}\n            />\n        ))}\n    </>\n);\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useState } from 'react';\nimport { Icon } from '@nilfoundation/react-components';\nimport { useDropzone, DropzoneOptions, FileRejection, DropEvent } from 'react-dropzone';\nimport './FileUploader.scss';\n\n/**\n * Props.\n */\ntype FileUploaderProps = {\n    title?: string;\n} & DropzoneOptions;\n\n/**\n *\n * @param {FileUploaderProps} props Props.\n * @returns React component.\n */\nexport const FileUploader = ({\n    title = \"Drag'n drop some files here, or click to select files\",\n    onDrop,\n    ...restOptions\n}: FileUploaderProps): ReactElement => {\n    const [textMessage, setTextMessage] = useState(title);\n\n    const onDropHandler = (\n        acceptedFiles: File[],\n        fileRejections: FileRejection[],\n        event: DropEvent,\n    ) => {\n        if (Object.keys(fileRejections).length !== 0) {\n            setTextMessage('Please submit valid file type');\n        }\n\n        onDrop && onDrop(acceptedFiles, fileRejections, event);\n    };\n\n    const { acceptedFiles, getRootProps, getInputProps, isDragActive } = useDropzone({\n        ...restOptions,\n        onDrop: onDropHandler,\n    });\n\n    return (\n        <div\n            className={`fileUploader ${isDragActive ? 'fileUploader-dragActive' : ''}`}\n            {...getRootProps()}\n        >\n            <input {...getInputProps()} />\n            {acceptedFiles.length !== 0 ? (\n                <span className=\"fileUploader__files\">\n                    {acceptedFiles.map(x => (\n                        <span key={x.name}>{x.name}</span>\n                    ))}\n                </span>\n            ) : (\n                <span className=\"fileUploader__message\">{textMessage}</span>\n            )}\n            <Icon iconName=\"fa-solid fa-circle-arrow-up\" />\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactNode, useRef } from 'react';\nimport { Portal } from '@nilfoundation/react-components';\nimport { CSSTransition } from 'react-transition-group';\nimport styles from './FullScreenView.module.scss';\n\n/**\n * Props.\n */\ntype FullScreenViewProps = {\n    showFullScreen: boolean;\n    children: ReactNode;\n    className?: string;\n};\n\n/**\n * Full screen view container.\n *\n * @param {FullScreenViewProps} props Props.\n * @returns React component.\n */\nexport const FullScreenView = ({\n    showFullScreen,\n    children,\n    className,\n}: FullScreenViewProps): JSX.Element => {\n    const nodeRef = useRef<HTMLDivElement>(null);\n\n    return (\n        <>\n            {!showFullScreen && children}\n            <Portal>\n                <CSSTransition\n                    classNames=\"alert\"\n                    timeout={300}\n                    in={showFullScreen}\n                    nodeRef={nodeRef}\n                    unmountOnExit\n                >\n                    <div\n                        className={`${styles.fullScreenView} ${className ?? ''}`}\n                        ref={nodeRef}\n                    >\n                        {children}\n                    </div>\n                </CSSTransition>\n            </Portal>\n        </>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { Button, ButtonProps, Icon } from '@nilfoundation/react-components';\nimport styles from './ClicableIcon.module.scss';\n\n/**\n * Props.\n */\ntype ClicableIconProps = {\n    iconName: string;\n} & ButtonProps<HTMLButtonElement>;\n\n/**\n * Button, that looks like an icon.\n *\n * @param {ClicableIconProps} props Props.\n * @returns React component.\n */\nexport const ClicableIcon = ({ iconName, className, ...rest }: ClicableIconProps): JSX.Element => {\n    return (\n        <Button\n            className={`${styles.button} ${className ?? ''}`}\n            {...rest}\n        >\n            <Icon iconName={iconName} />\n        </Button>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Container, Row, Col } from '@nilfoundation/react-components';\nimport { mainSiteAddress } from 'src/constants';\n\n/**\n * Offline view.\n *\n * @returns React component.\n */\nconst OfflineView = (): ReactElement => (\n    <Container\n        as=\"main\"\n        fluid\n    >\n        <Row>\n            <Col\n                xs={12}\n                className=\"text-center\"\n            >\n                <h4>Sorry, unknown error occured.</h4>\n                <p className=\"text-muted\">\n                    Please, try to reload page or leave message to support.\n                </p>\n                <p>\n                    <a href={mainSiteAddress}>{mainSiteAddress}</a>\n                </p>\n            </Col>\n        </Row>\n    </Container>\n);\n\nexport default OfflineView;\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode, useEffect, useState } from 'react';\nimport OfflineView from 'src/views/OfflineView';\n\n/**\n * Props.\n */\ntype NetConnectionHandlerProps = {\n    children?: ReactNode;\n};\n\n/**\n * Social links.\n *\n * @param {NetConnectionHandlerProps} props Props.\n * @returns React component.\n */\nexport const NetConnectionHandler = ({ children }: NetConnectionHandlerProps): ReactElement => {\n    const [online, setOnline] = useState(window.navigator.onLine);\n\n    useEffect(() => {\n        const setIsOnline = () => setOnline(true);\n        const setIsOffline = () => {\n            setOnline(false);\n        };\n\n        window.addEventListener('online', setIsOnline);\n        window.addEventListener('offline', setIsOffline);\n\n        return () => {\n            window.removeEventListener('online', setIsOnline);\n            window.removeEventListener('offline', setIsOffline);\n        };\n    }, [setOnline]);\n\n    return <>{online ? children : <OfflineView />}</>;\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode } from 'react';\nimport styles from './Overlay.module.scss';\n\n/**\n * Props.\n */\ntype OverlayProps = {\n    className?: string;\n    children: ReactNode;\n};\n\n/**\n * Overlay component.\n *\n * @param {OverlayProps} props Props.\n * @returns React component.\n */\nexport const Overlay = ({ className, children }: OverlayProps): ReactElement => (\n    <div className={`${className ?? ''} ${styles.overlay}`}>{children}</div>\n);\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport styles from './ObjectAsPlainTextViewer.module.scss';\n\n/**\n * Props.\n */\ntype ObjectAsPlainTextViewerProps<T extends Record<string, unknown>> = {\n    data: T;\n    className?: string;\n};\n\n/**\n * Takes object as a prop and returns it plain text representation.\n *\n * @param {ObjectAsPlainTextViewerProps} props Props.\n * @returns React component.\n */\nexport const ObjectAsPlainTextViewer = <T extends Record<string, unknown>>({\n    data,\n    className,\n}: ObjectAsPlainTextViewerProps<T>): ReactElement => {\n    return (\n        <ul className={`${styles.viewer} ${className ?? ''}`}>\n            {Object.entries(data).map(([x, y]) =>\n                y === undefined ? null : (\n                    <li\n                        key={x}\n                        className={styles.item}\n                    >\n                        {!!x && !!y && (\n                            <>\n                                <strong>{x}</strong>\n                                <span>{`: ${y}`}</span>\n                            </>\n                        )}\n                    </li>\n                ),\n            )}\n        </ul>\n    );\n};\n","/**\n * @file Index.\n * @copyright Yury Korotovskikh 2023 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useEffect } from 'react';\nimport ReactGa from 'react-ga4';\nimport { useLocation } from 'react-router-dom';\n\n/**\n * Google Analytics location change tracker.\n *\n * @returns React component.\n */\nexport const GALocationTracker = (): ReactElement => {\n    const { pathname } = useLocation();\n    const mainPath = pathname.split('/').slice(0, 2).join('');\n\n    useEffect(() => {\n        mainPath && ReactGa.send({ hitType: 'pageview', page: mainPath });\n    }, [mainPath]);\n\n    return <></>;\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Icon } from '@nilfoundation/react-components';\nimport clsx from 'clsx';\nimport styles from './PriceChangeIndicator.module.scss';\n\n/**\n * Props.\n */\ntype PriceChangeIndicatorProps = {\n    change: number;\n    className?: string;\n    toFixed?: number;\n};\n\n/**\n * Trade history component.\n *\n * @param {PriceChangeIndicatorProps} props Props.\n * @returns React component.\n */\nexport const PriceChangeIndicator = ({\n    change,\n    className,\n    toFixed = 4,\n}: PriceChangeIndicatorProps): ReactElement => {\n    const isGrow = !!change && change > 0;\n    const iconName = `fa-solid fa-arrow-${isGrow ? 'up' : 'down'}`;\n    const computedClassName = clsx(\n        styles.priceChangeIndicator,\n        isGrow ? 'growTextColor' : 'lossTextColor',\n        className,\n    );\n\n    return (\n        <div className={computedClassName}>\n            <Icon iconName={iconName} />\n            {`${Math.abs(change).toFixed(toFixed)}%`}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, memo } from 'react';\nimport { Media, Spinner } from '@nilfoundation/react-components';\nimport { useAppSelector } from 'src/redux';\nimport { PriceChangeIndicator } from '../PriceChangeIndicator';\nimport styles from './CircuitsList.module.scss';\n\n/**\n * Props.\n */\ntype CircuitsListItemInfoProps = {\n    cost?: number | null;\n    change?: number | null;\n};\n\n/**\n * Currencies list item brief info.\n *\n * @param {CircuitsListItemInfoProps} props - Props.\n * @returns React component.\n */\nexport const CircuitsListItemInfo = memo(function CircuitsListItemInfo({\n    cost,\n    change,\n}: CircuitsListItemInfoProps): ReactElement {\n    const isLoadingInfo = useAppSelector(s => s.circuitsState.isLoadingCircuitsInfo);\n\n    return (\n        <Media.Item position=\"right\">\n            {cost && <div>{`$${cost.toFixed(4)}`}</div>}\n            {!!change && (\n                <PriceChangeIndicator\n                    change={change}\n                    className={styles.dailyChangeIndicator}\n                />\n            )}\n            {isLoadingInfo && cost === undefined && change === undefined && <Spinner />}\n        </Media.Item>\n    );\n});\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { ListGroup, Media } from '@nilfoundation/react-components';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectCurrentCircuitId } from 'src/redux';\nimport { Path } from 'src/routing';\nimport { CircuitsListData } from 'src/models';\nimport { CircuitsListItemInfo } from './CircuitsListItemInfo';\nimport styles from './CircuitsList.module.scss';\n\n/**\n * Props.\n */\ntype CurcuitsListItemProps = {\n    data: CircuitsListData;\n};\n\n/**\n * Currencies list item.\n *\n * @param {CurcuitsListItemProps} props - Props.\n * @returns React component.\n */\nexport const CurcuitsListItem = ({\n    data: { _key, cost, change, name },\n}: CurcuitsListItemProps): ReactElement => {\n    const selectedId = useSelector(selectCurrentCircuitId);\n    const isSelected = _key === selectedId;\n\n    return (\n        <ListGroup.Item active={isSelected}>\n            <Link to={`${Path.market}/${_key}`}>\n                <Media className={isSelected ? styles.selected : ''}>\n                    <Media.Body className={styles.itemBody}>{name}</Media.Body>\n                    <CircuitsListItemInfo\n                        cost={cost}\n                        change={change}\n                    />\n                </Media>\n            </Link>\n        </ListGroup.Item>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, memo, useCallback, useMemo, useRef, useState } from 'react';\nimport { FilterProps, TableInstance, TableState } from 'react-table';\nimport { Icon, Input, InputGroup, ListGroup } from '@nilfoundation/react-components';\nimport { dequal as deepEqual } from 'dequal';\nimport debounce from 'lodash/debounce';\nimport { useAppSelector } from 'src/redux';\nimport { Circuit, CircuitsListData, CircuitsListTableColumn } from 'src/models';\nimport { ReactTable } from 'src/components';\nimport { CurcuitsListItem } from './CircuitsListItem';\nimport styles from './CircuitsList.module.scss';\n\n/**\n * Props.\n */\ntype CircuitsListTableProps = {\n    circuitsList: Circuit[];\n};\n\n/**\n * Search by text input.\n *\n * @param {FilterProps<CircuitsListData>} props - Filter props.\n * @returns Search by text filter input.\n */\nconst ByTextColumnFilter = ({ column: { setFilter } }: FilterProps<CircuitsListData>) => {\n    const [value, setValue] = useState('');\n    const debouncedSearch = useRef(\n        debounce(value => {\n            setFilter(value || undefined);\n        }, 300),\n    ).current;\n\n    return (\n        <InputGroup className={styles.inputGroup}>\n            <InputGroup.Addon>\n                <Icon iconName=\"fa-solid fa-search\" />\n            </InputGroup.Addon>\n            <Input\n                placeholder=\"Search circuits\"\n                type=\"text\"\n                value={value}\n                onChange={e => {\n                    setValue(e.target.value);\n                    debouncedSearch(e.target.value);\n                }}\n            />\n        </InputGroup>\n    );\n};\n\n/**\n * Table columns.\n */\nconst columns: CircuitsListTableColumn[] = [\n    {\n        Header: 'Name',\n        accessor: 'name',\n        Filter: ByTextColumnFilter,\n    },\n    {\n        accessor: 'cost',\n        disableFilters: true,\n    },\n    {\n        accessor: 'change',\n        disableFilters: true,\n    },\n    {\n        accessor: '_key',\n        disableFilters: true,\n    },\n];\n\n/**\n * Initial table state without user interactions.\n */\nconst defaultTableState: Partial<TableState<CircuitsListData>> = {\n    sortBy: [\n        {\n            id: 'name',\n            desc: false,\n        },\n    ],\n    hiddenColumns: ['change', 'cost', 'id'],\n};\n\n/**\n * Active orders table.\n *\n * @param {CircuitsListTableProps} props Props.\n * @returns React component.\n */\nexport const CircuitsListTable = memo(function CircuitsListTable({\n    circuitsList,\n}: CircuitsListTableProps): ReactElement {\n    const circuitsInfo = useAppSelector(s => s.circuitsState.circuitsInfo, deepEqual);\n\n    const tableData: CircuitsListData[] = useMemo(() => {\n        return circuitsList\n            .filter(x => !x.isPrivate)\n            .map(x => {\n                const info = circuitsInfo && circuitsInfo.find(y => y._key === x._key);\n\n                return {\n                    _key: x._key,\n                    name: `${x.name.toUpperCase()}${\n                        x.inputDescription ? ` (${x.inputDescription?.toUpperCase()})` : ''\n                    }/USD`,\n                    cost: info?.current,\n                    change: info?.daily_change,\n                };\n            });\n    }, [circuitsList, circuitsInfo]);\n\n    const renderRows = useCallback(\n        ({ rows, prepareRow, visibleColumns }: TableInstance<CircuitsListData>) => (\n            <>\n                {visibleColumns.find(x => x.canFilter)?.render('Filter')}\n                <ListGroup className={styles.listGroup}>\n                    {rows.map(row => {\n                        prepareRow(row);\n                        return (\n                            <CurcuitsListItem\n                                key={row.id}\n                                data={row.values as CircuitsListData}\n                            />\n                        );\n                    })}\n                </ListGroup>\n            </>\n        ),\n        [],\n    );\n\n    return (\n        <ReactTable\n            name=\"circuitsListTable\"\n            data={tableData}\n            columns={columns}\n            renderRows={renderRows}\n            initialState={defaultTableState}\n            showTableHeader={false}\n        />\n    );\n});\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Spinner } from '@nilfoundation/react-components';\nimport { dequal as deepEqual } from 'dequal';\nimport { selectCircuits, useAppSelector } from 'src/redux';\nimport { useSelectedCircuitId } from 'src/hooks';\nimport { CircuitsListTable } from './CircuitsListTable';\nimport { DashboardCard } from '../../common';\nimport styles from './CircuitsList.module.scss';\n\n/**\n * Currencies list.\n *\n * @returns React component.\n */\nexport const CircuitsList = (): ReactElement => {\n    const circuitsList = useAppSelector(selectCircuits, deepEqual);\n    const loadingCircuits = useAppSelector(s => s.circuitsState.isLoading);\n    useSelectedCircuitId();\n\n    return (\n        <DashboardCard>\n            <h4>Circuit list</h4>\n            <div className={styles.container}>\n                {loadingCircuits && !circuitsList.length ? (\n                    <Spinner grow />\n                ) : (\n                    <CircuitsListTable circuitsList={circuitsList} />\n                )}\n            </div>\n        </DashboardCard>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\n//import { Icon, Label } from '@nilfoundation/react-components';\nimport { Circuit } from 'src/models';\nimport styles from './CircuitDetailedInfo.module.scss';\n\n/**\n * Props.\n */\ntype CircuitInfoCardProps = {\n    circuit: Circuit;\n};\n\n/**\n * Circuit info card.\n *\n * @param {CircuitInfoCardProps} props Props.\n * @returns React component.\n */\nexport const CircuitInfoCard = ({ circuit }: CircuitInfoCardProps): ReactElement => {\n    const { name, inputDescription, description } = circuit;\n\n    return (\n        <>\n            <h4>{`${name}${inputDescription ? ` (${inputDescription})` : ''}/USD`}</h4>\n            <h5 className={styles.description}>{description}</h5>\n            {/* <p>\n                <Label\n                    href={repository}\n                    target=\"_blank\"\n                >\n                    <Icon\n                        iconName=\"fa-brands fa-github\"\n                        srOnlyText=\"github repository link\"\n                    />\n                    GitHub Repository\n                </Label>\n            </p> */}\n        </>\n    );\n};\n","/**\n * @file Enum declaration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Tab.\n */\nexport enum ManageOrdersTab {\n    active = 'ACTIVE',\n    history = 'HISTORY',\n}\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport ReactJson from 'react-json-view';\nimport { jsonViewerTheme } from 'src/constants';\nimport { Circuit } from 'src/models';\nimport styles from './CircuitDetailedInfo.module.scss';\n\n/**\n * Props.\n */\ntype CircuitJsonViewProps = {\n    circuit: Circuit;\n};\n\n/**\n * Circuit json view.\n *\n * @param {CircuitJsonViewProps} props Props.\n * @returns React component.\n */\nexport const CircuitJsonView = ({ circuit }: CircuitJsonViewProps): ReactElement => {\n    return (\n        <div className={styles.jsonView}>\n            <ReactJson\n                src={circuit}\n                collapsed={1}\n                name={null}\n                displayDataTypes={false}\n                displayObjectSize={false}\n                theme={jsonViewerTheme}\n            />\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useMemo } from 'react';\nimport { dequal as deepEqual } from 'dequal';\nimport { Spinner } from '@nilfoundation/react-components';\nimport { useAppSelector } from 'src/redux';\nimport { ObjectAsPlainTextViewer } from 'src/components';\nimport { Circuit } from 'src/models';\n\n/**\n * Props.\n */\ntype CircuitStatsCardProps = {\n    circuitId: Circuit['_key'];\n};\n\n/**\n * Circuit statistics card.\n *\n * @param {CircuitStatsCardProps} props Props.\n * @returns React component.\n */\nexport const CircuitStatsCard = ({ circuitId }: CircuitStatsCardProps): ReactElement => {\n    const isLoadingStats = useAppSelector(s => s.circuitsState.isLoadingCircuitsStats);\n    const stats = useAppSelector(\n        s => s.circuitsState.circuitsStats.find(x => x._key === circuitId),\n        deepEqual,\n    );\n\n    const statsData = useMemo(() => {\n        return stats === undefined\n            ? {}\n            : {\n                  'Average cost': `${stats.avg_cost?.toFixed(4)} USD`,\n                  'Average gen time': stats.avg_eval_time\n                      ? `${stats.avg_eval_time?.toFixed(4)} Mins`\n                      : undefined,\n                  Completed: stats.completed,\n              };\n    }, [stats]);\n\n    switch (true) {\n        case isLoadingStats && stats === undefined:\n            return <Spinner grow />;\n        case !stats:\n            return <h4>No data.</h4>;\n        default:\n            return <ObjectAsPlainTextViewer data={statsData} />;\n    }\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Image, Nav, Spinner } from '@nilfoundation/react-components';\nimport { selectCurrentCircuit, useAppSelector } from 'src/redux';\nimport { Circuit } from 'src/models';\nimport { getCurrencyImage } from 'src/enums';\nimport { Details, DashboardCard } from '../../common';\nimport { CircuitInfoCard } from './CircuitInfoCard';\nimport { DetailedInfoTab } from './DetailedInfoTab';\nimport { CircuitJsonView } from './CircuitJsonView';\nimport { CircuitStatsCard } from './CircuitStatsCard';\nimport styles from './CircuitDetailedInfo.module.scss';\n\n/**\n * Currencies list.\n *\n * @returns React component.\n */\nexport const CircuitDetailedInfo = (): ReactElement => {\n    const [intoType, setInfoType] = useState<DetailedInfoTab>(DetailedInfoTab.info);\n    const currentSelectedCircuit = useSelector(selectCurrentCircuit);\n    const loadingCircuits = useAppSelector(s => s.circuitsState.isLoading);\n\n    return (\n        <DashboardCard className={styles.container}>\n            <Details title={<h4>Circuit detailed info</h4>}>\n                <Nav\n                    justified\n                    className={styles.toolbar}\n                >\n                    {Object.values(DetailedInfoTab).map(t => (\n                        <Nav.Item\n                            key={t}\n                            onClick={() => setInfoType(t)}\n                            active={t === intoType}\n                        >\n                            {t.toUpperCase()}\n                        </Nav.Item>\n                    ))}\n                </Nav>\n                {currentSelectedCircuit && getCurrencyImage(currentSelectedCircuit.name) && (\n                    <div className={styles.imageContainer}>\n                        <Image\n                            alt=\"Circuit image\"\n                            source={getCurrencyImage(currentSelectedCircuit.name)!}\n                            responsive\n                        />\n                    </div>\n                )}\n                <div className={styles.content}>\n                    {currentSelectedCircuit ? (\n                        <CircuitDetailedInfoFactory\n                            type={intoType}\n                            circuit={currentSelectedCircuit}\n                        />\n                    ) : loadingCircuits ? (\n                        <Spinner grow />\n                    ) : (\n                        <div>Nothing is selected.</div>\n                    )}\n                </div>\n            </Details>\n        </DashboardCard>\n    );\n};\n\n/**\n *Renders Circuit info conditionally.\n *\n * @param {{type: DetailedInfoTab; circuit: Circuit;}} props Props.\n * @returns React element.\n */\nconst CircuitDetailedInfoFactory = ({\n    type,\n    circuit,\n}: {\n    type: DetailedInfoTab;\n    circuit: Circuit;\n}): ReactElement => {\n    switch (type) {\n        case DetailedInfoTab.info:\n            return (\n                <>\n                    <CircuitInfoCard circuit={circuit} />\n                    <CircuitJsonView circuit={circuit} />\n                </>\n            );\n        case DetailedInfoTab.stats:\n            return <CircuitStatsCard circuitId={circuit._key} />;\n        default:\n            return <></>;\n    }\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Nav, useBreakpoints } from '@nilfoundation/react-components';\nimport { ChartType } from 'src/enums';\n\n/**\n * Props.\n */\ntype ChartTypeSelectProps = {\n    chartType: ChartType;\n    onSelectChartType: (chartType: ChartType) => void;\n    disabled: boolean;\n};\n\n/**\n * Chart type selector.\n *\n * @param {ChartTypeSelectProps} props Props.\n * @returns React component.\n */\nexport const ChartTypeSelect = ({\n    chartType,\n    onSelectChartType,\n    disabled,\n}: ChartTypeSelectProps): ReactElement => {\n    const { xs, sm } = useBreakpoints();\n\n    return (\n        <Nav\n            tabs\n            vertical={xs || sm}\n        >\n            {Object.values(ChartType).map(x => (\n                <Nav.Item\n                    key={x}\n                    active={x === chartType}\n                    onClick={() => onSelectChartType(x)}\n                    disabled={disabled}\n                >\n                    {x}\n                </Nav.Item>\n            ))}\n        </Nav>\n    );\n};\n","/**\n * @file React context.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createContext } from 'react';\nimport { DateUnit } from 'src/enums';\n\n/**\n * Context type.\n */\ntype ChartSettingsContectModel = {\n    dataRange: DateUnit;\n    setDataRange: (unit: DateUnit) => void;\n    displayVolumes: boolean;\n    setDisplayVolumes: (b: boolean) => void;\n};\n\n/**\n * Data range context.\n */\nexport const ChartSettingsContext = createContext<ChartSettingsContectModel>(\n    {} as ChartSettingsContectModel,\n);\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useContext } from 'react';\nimport { Nav } from '@nilfoundation/react-components';\nimport { DateUnit } from 'src/enums';\nimport { ChartSettingsContext } from './ChartSettingsContext';\n\n/**\n * Props.\n */\ntype DataRangeSelectProps = {\n    disabled: boolean;\n};\n\n/**\n * Data range select.\n *\n * @param {DataRangeSelectProps} props Props.\n * @returns React component.\n */\nexport const DataRangeSelect = ({ disabled }: DataRangeSelectProps): ReactElement => {\n    const { dataRange, setDataRange } = useContext(ChartSettingsContext);\n    return (\n        <Nav>\n            {Object.values(DateUnit).map(x => (\n                <Nav.Item\n                    key={x}\n                    active={dataRange === x}\n                    onClick={() => setDataRange(x)}\n                    disabled={disabled}\n                >\n                    {x}\n                </Nav.Item>\n            ))}\n        </Nav>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { BarPrice, BarPrices } from 'lightweight-charts';\nimport styles from './ChartLegend.module.scss';\n\n/**\n * Props.\n */\ntype ChartLegendProps = {\n    name: string;\n    price?: BarPrice | BarPrices;\n};\n\n/**\n * Dashboard legend.\n *\n * @param {ChartLegendProps} props Props.\n * @returns React component.\n */\nexport const ChartLegend = ({ name, price }: ChartLegendProps): ReactElement => {\n    return (\n        <div className={styles.chartLegend}>\n            <h5 className={styles.chartName}>{name.toUpperCase()}</h5>\n            {typeof price === 'object' ? (\n                Object.keys(price).map(x => (\n                    <div\n                        className=\"text-muted\"\n                        key={x}\n                    >\n                        {`${x}: ${price[x as keyof BarPrices]?.toFixed(2)}`}\n                    </div>\n                ))\n            ) : (\n                <div className=\"text-muted\">{price?.toFixed(2)}</div>\n            )}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useContext, useMemo, useRef } from 'react';\nimport {\n    CandlestickData,\n    CandlestickStyleOptions,\n    ChartOptions,\n    DeepPartial,\n    HistogramData,\n    LineData,\n    LineStyleOptions,\n    SeriesOptionsCommon,\n    UTCTimestamp,\n    WhitespaceData,\n} from 'lightweight-charts';\nimport { Spinner } from '@nilfoundation/react-components';\nimport { useChart, useRenderChartData } from 'src/hooks';\nimport { formatUTCTimestamp } from 'src/utils';\nimport { getDateFormatBasedOnDateUnit } from 'src/enums';\nimport { ChartSettingsContext } from '../CircuitDashboard';\nimport { ChartLegend } from '../ChartLegend';\nimport './ChartTemplate.scss';\n\n/**\n * Props.\n */\ntype ChartTemplateProps<T extends 'Line' | 'Candlestick'> = {\n    chartName: string;\n    loadingData: boolean;\n    seriesType: T;\n    seriesData: T extends 'Line' ? LineData[] : CandlestickData[];\n    seriesOptions?: DeepPartial<\n        (T extends 'Line' ? LineStyleOptions : CandlestickStyleOptions) & SeriesOptionsCommon\n    >;\n    chartOptions?: DeepPartial<ChartOptions>;\n    volumesData?: Array<WhitespaceData | HistogramData>;\n};\n\n/**\n * Chart template.\n *\n * @param {ChartTemplateProps} props Props.\n * @returns React component.\n */\nexport const ChartTemplate = <T extends 'Line' | 'Candlestick'>({\n    chartName,\n    loadingData,\n    seriesType,\n    seriesData,\n    seriesOptions,\n    chartOptions,\n    volumesData,\n}: ChartTemplateProps<T>): ReactElement => {\n    const ref = useRef<HTMLDivElement>(null);\n    const { dataRange, displayVolumes } = useContext(ChartSettingsContext);\n    const options = useMemo(\n        (): DeepPartial<ChartOptions> => ({\n            ...chartOptions,\n            localization: {\n                timeFormatter: (t: UTCTimestamp) =>\n                    formatUTCTimestamp(t, getDateFormatBasedOnDateUnit(dataRange)),\n            },\n            timeScale: {\n                tickMarkFormatter: (t: UTCTimestamp) =>\n                    formatUTCTimestamp(t, getDateFormatBasedOnDateUnit(dataRange)),\n                fixRightEdge: true,\n            },\n            rightPriceScale: {\n                scaleMargins: {\n                    top: 0.2,\n                    bottom: displayVolumes ? 0.3 : 0.2,\n                },\n            },\n        }),\n        [chartOptions, dataRange, displayVolumes],\n    );\n\n    const { chart } = useChart({ ref, options });\n\n    const { price } = useRenderChartData({\n        seriesType,\n        seriesData,\n        chart,\n        options: seriesOptions,\n        visibleRange: dataRange,\n        volumes: volumesData,\n    });\n\n    return (\n        <div\n            ref={ref}\n            className=\"circuitChart\"\n        >\n            <ChartLegend\n                price={price}\n                name={chartName}\n            />\n            {loadingData && seriesData.length === 0 && <Spinner grow />}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useContext, useMemo } from 'react';\nimport { LineWidth } from 'lightweight-charts';\nimport { useGetCircuitDashboardData } from 'src/hooks';\nimport colors from 'src/styles/export.module.scss';\nimport { ChartTemplate } from '../ChartTemplate';\nimport { ChartSettingsContext } from '../CircuitDashboard';\n\n/**\n * Proof cost chart.\n *\n * @returns React component.\n */\nexport const ProofCostChart = (): ReactElement => {\n    const seriesOptions = useMemo(\n        () => ({\n            upColor: colors.successColor,\n            downColor: colors.dangerColor,\n            priceLineWidth: 2 as LineWidth,\n        }),\n        [],\n    );\n    const { dataRange, displayVolumes } = useContext(ChartSettingsContext);\n    const {\n        chartData: { candlestickChartData, volumesData },\n        loadingData: isLoadingChartData,\n    } = useGetCircuitDashboardData(displayVolumes, dataRange);\n\n    return (\n        <ChartTemplate\n            loadingData={isLoadingChartData}\n            chartName=\"Proof cost, USD\"\n            seriesData={candlestickChartData}\n            seriesType=\"Candlestick\"\n            seriesOptions={seriesOptions}\n            volumesData={volumesData}\n        />\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useContext, useMemo } from 'react';\nimport { useGetCircuitDashboardData } from 'src/hooks';\nimport colors from 'src/styles/export.module.scss';\nimport { ChartTemplate } from '../ChartTemplate';\nimport { ChartSettingsContext } from '../CircuitDashboard';\n\n/**\n * Proof cost chart.\n *\n * @returns React component.\n */\nexport const ProofTimeGenChart = (): ReactElement => {\n    const seriesOptions = useMemo(\n        () => ({\n            color: colors.infoColor,\n        }),\n        [],\n    );\n    const { dataRange, displayVolumes } = useContext(ChartSettingsContext);\n    const {\n        chartData: { proofGenTimeData, volumesData },\n        loadingData: isLoadingChartData,\n    } = useGetCircuitDashboardData(displayVolumes, dataRange);\n\n    return (\n        <ChartTemplate\n            loadingData={isLoadingChartData}\n            chartName=\"Proof Generation Time, min\"\n            seriesData={proofGenTimeData}\n            seriesType=\"Line\"\n            seriesOptions={seriesOptions}\n            volumesData={volumesData}\n        />\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode } from 'react';\nimport { DateUnit } from 'src/enums';\nimport { useLocalStorage } from 'src/hooks';\nimport { ChartSettingsContext } from './ChartSettingsContext';\n/**\n * Props.\n */\ntype ChartSettingsProviderProps = {\n    children?: ReactNode;\n};\n\n/**\n * Chart settings provider.\n *\n * @param {ChartSettingsProviderProps} props Props.\n * @returns React component.\n */\nexport const ChartSettingsProvider = ({ children }: ChartSettingsProviderProps): ReactElement => {\n    const [dataRange, setDataRange] = useLocalStorage<DateUnit>(\n        'circuitDashboardDataRange',\n        DateUnit.hour,\n    );\n\n    const [displayVolumes, setDisplayVolumes] = useLocalStorage(\n        'circuitDashboardDisplayVolumes',\n        false,\n    );\n\n    return (\n        <ChartSettingsContext.Provider\n            value={{\n                dataRange,\n                setDataRange,\n                displayVolumes,\n                setDisplayVolumes,\n            }}\n        >\n            {children}\n        </ChartSettingsContext.Provider>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useContext } from 'react';\nimport { Icon, Nav } from '@nilfoundation/react-components';\nimport { ChartSettingsContext } from './ChartSettingsContext';\n\n/**\n * Props.\n */\ntype DashboardToolbarProps = {\n    disabled: boolean;\n    isFullscreen: boolean;\n    setFullScreen: (x: boolean) => void;\n};\n\n/**\n * Dashboard toolbar.\n *\n * @param {DashboardToolbarProps} props Props.\n * @returns React component.\n */\nexport const DashboardToolbar = ({\n    disabled,\n    isFullscreen,\n    setFullScreen,\n}: DashboardToolbarProps): ReactElement => {\n    const { displayVolumes, setDisplayVolumes } = useContext(ChartSettingsContext);\n\n    return (\n        <Nav>\n            <Nav.Item\n                disabled={disabled}\n                active={displayVolumes}\n                onClick={() => setDisplayVolumes(!displayVolumes)}\n            >\n                <Icon iconName=\"fa-solid fa-chart-simple\" />\n            </Nav.Item>\n            <Nav.Item\n                disabled={disabled}\n                active={isFullscreen}\n                onClick={() => setFullScreen(!isFullscreen)}\n            >\n                <Icon iconName={`fa-solid fa-${isFullscreen ? 'compress' : 'expand'}`} />\n            </Nav.Item>\n        </Nav>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useMemo } from 'react';\nimport { DashboardCard } from 'src/components/common';\nimport { selectCurrentCircuit, useAppSelector } from 'src/redux';\nimport { renderDashOnEmptyValue } from 'src/utils';\nimport { PriceChangeIndicator } from '../PriceChangeIndicator';\nimport styles from './CircuitInfoPanel.module.scss';\n\n/**\n * Panel with circuit info.\n *\n * @returns React component.\n */\nexport const CircuitInfoPanel = (): ReactElement => {\n    const currentCircuit = useAppSelector(selectCurrentCircuit);\n    const circuitInfo = useAppSelector(s =>\n        s.circuitsState.circuitsInfo.find(x => x._key === currentCircuit?._key),\n    );\n    const change = circuitInfo?.daily_change;\n\n    const name = useMemo(() => {\n        if (!currentCircuit) {\n            return '';\n        }\n\n        const { name, inputDescription } = currentCircuit;\n        return `${name.toUpperCase()}${\n            inputDescription ? ` (${inputDescription?.toUpperCase()})` : ''\n        }/USD`;\n    }, [currentCircuit]);\n\n    return (\n        <DashboardCard className={styles.panel}>\n            <div className={styles.container}>\n                {currentCircuit && <div>{name}</div>}\n                <div>\n                    <div className={`text-muted ${styles.title}`}>Current cost</div>\n                    <div>{renderDashOnEmptyValue(circuitInfo?.current)}</div>\n                </div>\n                <div>\n                    <div className={`text-muted ${styles.title}`}>24h Change</div>\n                    <div>\n                        {!!change ? (\n                            <PriceChangeIndicator change={change} />\n                        ) : (\n                            renderDashOnEmptyValue(undefined)\n                        )}\n                    </div>\n                </div>\n                <div>\n                    <div className={`text-muted ${styles.title}`}>24h High</div>\n                    <div>{renderDashOnEmptyValue(circuitInfo?.max)}</div>\n                </div>\n                <div>\n                    <div className={`text-muted ${styles.title}`}>24h Low</div>\n                    <div>{renderDashOnEmptyValue(circuitInfo?.min)}</div>\n                </div>\n                <div>\n                    <div className={`text-muted ${styles.title}`}>24h Volume</div>\n                    <div>{renderDashOnEmptyValue(circuitInfo?.volume, 0)}</div>\n                </div>\n            </div>\n        </DashboardCard>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useState } from 'react';\nimport { ChartType } from 'src/enums';\nimport { selectCurrentCircuit, useAppSelector } from 'src/redux';\nimport { DashboardCard, FullScreenView } from '../../common';\nimport { ChartTypeSelect } from './ChartTypeSelect';\nimport { DataRangeSelect } from './DataRangeSelect';\nimport { ProofCostChart, ProofTimeGenChart } from '../CircuitCharts';\nimport { ChartSettingsProvider } from './ChartSettingsProvider';\nimport { DashboardToolbar } from './DashboardToolbar';\nimport { CircuitInfoPanel } from '../CircuitInfoPanel';\nimport './CircuitDashboard.scss';\n\n/**\n * Circuit dashboard.\n *\n * @returns React component.\n */\nexport const CircuitDashboard = (): ReactElement => {\n    const currentCircuit = useAppSelector(selectCurrentCircuit);\n    const [chartType, setChartType] = useState(ChartType.proofCostChart);\n    const [fullScreen, setFullScreen] = useState(false);\n\n    return (\n        <DashboardCard>\n            <div className=\"circuitDashboard\">\n                <ChartSettingsProvider>\n                    <ChartTypeSelect\n                        chartType={chartType}\n                        onSelectChartType={setChartType}\n                        disabled={!currentCircuit}\n                    />\n                    <FullScreenView\n                        showFullScreen={fullScreen}\n                        className=\"fullScreenChartContainer\"\n                    >\n                        {fullScreen && <CircuitInfoPanel />}\n                        <div className=\"circuitDashboard__toolbar\">\n                            <DataRangeSelect disabled={!currentCircuit} />\n                            <DashboardToolbar\n                                disabled={!currentCircuit}\n                                isFullscreen={fullScreen}\n                                setFullScreen={setFullScreen}\n                            />\n                        </div>\n                        <ChartFactory chartType={chartType} />\n                    </FullScreenView>\n                </ChartSettingsProvider>\n            </div>\n        </DashboardCard>\n    );\n};\n\n/**\n * Renders chart depending on its type.\n *\n * @param {{chartType: ChartType}} props Props.\n * @returns Chart.\n */\nconst ChartFactory = ({ chartType }: { chartType: ChartType }) => {\n    switch (chartType) {\n        case ChartType.proofCostChart:\n            return <ProofCostChart />;\n        case ChartType.proofGetTimeChart:\n            return <ProofTimeGenChart />;\n        default:\n            return <></>;\n    }\n};\n","/**\n * @file React context.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createContext } from 'react';\nimport { CostAndEvalTime } from 'src/models';\n\n/**\n * Context type.\n */\ntype OrderManagementContextModel = {\n    processing: boolean;\n    setProcessing: (processing: boolean) => void;\n    selectedValues?: CostAndEvalTime;\n    setSelectedValues: (costAndEvalTime?: CostAndEvalTime) => void;\n};\n\n/**\n * Order management context.\n */\nexport const OrderManagementContext = createContext<OrderManagementContextModel>(\n    {} as OrderManagementContextModel,\n);\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode, useState } from 'react';\nimport { CostAndEvalTime } from 'src/models';\nimport { OrderManagementContext } from './OrderManagementContext';\n\n/**\n * Props.\n */\ntype OrderManagementContextProviderProps = {\n    children?: ReactNode;\n};\n\n/**\n * Order management context provider.\n *\n * @param {OrderManagementContextProviderProps} props Props.\n * @returns React component.\n */\nexport const OrderManagementContextProvider = ({\n    children,\n}: OrderManagementContextProviderProps): ReactElement => {\n    const [processing, setProcessing] = useState(false);\n    const [selectedValues, setSelectedValues] = useState<CostAndEvalTime>();\n\n    return (\n        <OrderManagementContext.Provider\n            value={{ processing, setProcessing, selectedValues, setSelectedValues }}\n        >\n            {children}\n        </OrderManagementContext.Provider>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Label } from '@nilfoundation/react-components';\nimport { Cell } from 'react-table';\nimport { OrderBookTableData } from 'src/models';\nimport { TCell } from 'src/components';\nimport { renderDashOnEmptyValue } from 'src/utils';\n\n/**\n * Props.\n */\ntype OrderBookTableCellProps = {\n    cell: Cell<OrderBookTableData>;\n    userOrdersAmount?: number;\n};\n\n/**\n * Order book table cell.\n *\n * @param {OrderBookTableCellProps} props Props.\n * @returns React component.\n */\nexport const OrderBookTableCell = ({\n    cell,\n    userOrdersAmount,\n}: OrderBookTableCellProps): ReactElement => {\n    const { column, value, getCellProps } = cell;\n\n    return (\n        <TCell {...getCellProps()}>\n            <span>{column.id === 'ordersAmount' ? value : renderDashOnEmptyValue(value)}</span>\n            {!!userOrdersAmount && (\n                <Label>\n                    <span>{userOrdersAmount}</span>\n                </Label>\n            )}\n        </TCell>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { CSSProperties, KeyboardEventHandler, ReactElement, useContext } from 'react';\nimport { Row } from 'react-table';\nimport { TRow } from 'src/components';\nimport { OrderBookTableData } from 'src/models';\nimport { OrderManagementContext } from '../OrderManagementContextProvider';\nimport { OrderBookTableCell } from './OrderBookTableCell';\n\n/**\n * Props.\n */\ntype OrderBookTableRowProps = {\n    row: Row<OrderBookTableData>;\n    volume: number;\n    className?: string;\n};\n\n/**\n * Order book table row.\n *\n * @param {OrderBookTableRowProps} props Props.\n * @returns React component.\n */\nexport const OrderBookTableRow = ({\n    row,\n    volume,\n    className: propsClassName,\n}: OrderBookTableRowProps): ReactElement => {\n    const { setSelectedValues } = useContext(OrderManagementContext);\n    const onClickRow = () => {\n        setSelectedValues({\n            cost: row.values.cost,\n            eval_time: row.values.eval_time,\n        });\n    };\n\n    const onKeyDownHandler: KeyboardEventHandler = e => {\n        if (e.key !== 'Enter' && e.key !== ' ') {\n            return;\n        }\n\n        e.preventDefault();\n        onClickRow();\n    };\n\n    const { className, style, ...rest } = row.getRowProps();\n    const combinedStyle = { ...style, '--bar-width': `${volume}%` } as CSSProperties;\n    const combinedClassName = `${className ?? ''} ${propsClassName ?? ''}`;\n\n    return (\n        <TRow\n            {...rest}\n            onClick={onClickRow}\n            onKeyDown={onKeyDownHandler}\n            tabIndex={0}\n            style={combinedStyle}\n            className={combinedClassName}\n        >\n            {row.cells.map(cell => {\n                const { key } = cell.getCellProps();\n                return (\n                    <OrderBookTableCell\n                        key={key}\n                        cell={cell}\n                        userOrdersAmount={\n                            cell.column.id !== 'ordersAmount'\n                                ? undefined\n                                : row.values.userOrdersAmount\n                        }\n                    />\n                );\n            })}\n        </TRow>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, memo, useCallback } from 'react';\nimport { Row, TableInstance, TableState } from 'react-table';\nimport { LastOrderData, OrderBookTableColumn, OrderBookTableData } from 'src/models';\nimport { ReactTable, ReactTableHeader } from 'src/components';\nimport { OrderBookTableRow } from './OrderBookTableRow';\nimport styles from './OrderBook.module.scss';\n\n/**\n * Props.\n */\ntype OrderBookTableProps = {\n    columns: OrderBookTableColumn[];\n    data: OrderBookTableData[];\n    lastOrderData?: LastOrderData;\n    maxVolume: number;\n};\n\ntype RowWithVolume = Row<OrderBookTableData> & { volume: number };\n\n/**\n * Initial table state without user interactions.\n */\nconst defaultOrderBookState: Partial<TableState<OrderBookTableData>> = {\n    sortBy: [\n        {\n            id: 'cost',\n            desc: true,\n        },\n    ],\n    hiddenColumns: ['type', 'userOrdersAmount'],\n};\n\n/**\n * Order book table.\n *\n * @param {OrderBookTableProps} props Props.\n * @returns React component.\n */\nexport const OrderBookTable = memo(function OrderBookTable({\n    columns,\n    data,\n    lastOrderData,\n    maxVolume,\n}: OrderBookTableProps): ReactElement {\n    const renderRows = useCallback(\n        ({ rows, prepareRow }: TableInstance<OrderBookTableData>) => {\n            return (\n                <>\n                    <div className={styles.rowsContainer}>\n                        {getDataWithVolumes(\n                            rows.filter(x => x.values.type === 'ask'),\n                            maxVolume,\n                        ).map(row => renderRow(row, prepareRow, styles.ask))}\n                    </div>\n                    {lastOrderData && (\n                        <div className={styles.lastOrderDataContainer}>\n                            {lastOrderData.cost && (\n                                <div className={lastOrderData.type}>{`${lastOrderData.cost.toFixed(\n                                    4,\n                                )} $`}</div>\n                            )}\n                            {lastOrderData.eval_time && (\n                                <div className=\"text-muted\">{`${lastOrderData.eval_time.toFixed(\n                                    4,\n                                )} min`}</div>\n                            )}\n                        </div>\n                    )}\n                    <div className={styles.rowsContainer}>\n                        {getDataWithVolumes(\n                            rows.reverse().filter(x => x.values.type === 'bid'),\n                            maxVolume,\n                        ).map(row => renderRow(row, prepareRow, styles.bid))}\n                    </div>\n                </>\n            );\n        },\n        [lastOrderData, maxVolume],\n    );\n\n    const renderHeaders = useCallback(({ visibleColumns }: TableInstance<OrderBookTableData>) => {\n        return (\n            <>\n                {visibleColumns.map(column => (\n                    <ReactTableHeader\n                        key={column.id}\n                        column={column}\n                        onlySortBy=\"desc\"\n                    />\n                ))}\n            </>\n        );\n    }, []);\n\n    return (\n        <ReactTable\n            name=\"orderBookTable\"\n            className={styles.orderBookTable}\n            renderRows={renderRows}\n            renderHeaders={renderHeaders}\n            data={data}\n            columns={columns}\n            disableSortRemove={true}\n            initialState={defaultOrderBookState}\n        />\n    );\n});\n\n/**\n * Render row.\n *\n * @param row Row instance.\n * @param prepareRow Prepare row callback.\n * @param className HTML Class.\n * @returns Row.\n */\nconst renderRow = (\n    row: RowWithVolume,\n    prepareRow: (r: Row<OrderBookTableData>) => void,\n    className: string,\n): ReactElement => {\n    prepareRow(row);\n    return (\n        <OrderBookTableRow\n            key={row.id}\n            row={row}\n            volume={row.volume}\n            className={className}\n        />\n    );\n};\n\n/**\n * Adds volume data to each order book data item.\n *\n * @param data Data.\n * @param maxVolume Max volume.\n * @returns Data with voulmes.\n */\nconst getDataWithVolumes = (\n    data: Row<OrderBookTableData>[],\n    maxVolume: number,\n): RowWithVolume[] => {\n    let count = 0;\n\n    const finalData = data.map(x => {\n        count = count + x.values.ordersAmount;\n\n        return {\n            ...x,\n            volume: 100 - ((maxVolume - count) / maxVolume) * 100,\n        };\n    });\n\n    return finalData;\n};\n","/**\n * @file React context.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createContext } from 'react';\nimport { OrderBookPriceStep } from 'src/enums';\n\n/**\n * Context type.\n */\ntype OrderBookSettingsContectModel = {\n    priceStep: keyof typeof OrderBookPriceStep;\n    setPriceStep: (s: keyof typeof OrderBookPriceStep) => void;\n};\n\n/**\n * Order book settings context.\n */\nexport const OrderBookSettingsContext = createContext<OrderBookSettingsContectModel>(\n    {} as OrderBookSettingsContectModel,\n);\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useContext } from 'react';\nimport { Dropdown } from '@nilfoundation/react-components';\nimport { OrderBookPriceStep } from 'src/enums';\nimport { OrderBookSettingsContext } from './OrderBookSettingsContext';\nimport styles from './OrderBook.module.scss';\n\n/**\n * Props.\n */\ntype OrderBookToolbarProps = {\n    disabled: boolean;\n};\n\n/**\n * OrderBook toolbar.\n *\n * @param {OrderBookToolbarProps} props Props.\n * @returns React component.\n */\nexport const OrderBookToolbar = ({ disabled }: OrderBookToolbarProps): ReactElement => {\n    const { priceStep, setPriceStep } = useContext(OrderBookSettingsContext);\n\n    return (\n        <Dropdown>\n            <Dropdown.Button\n                className={styles.changePriceStepButton}\n                disabled={disabled}\n            >\n                {priceStep}\n            </Dropdown.Button>\n            <Dropdown.Menu align=\"right\">\n                {Object.keys(OrderBookPriceStep)\n                    .sort()\n                    .map(x => (\n                        <Dropdown.Item\n                            key={x}\n                            onSelect={() => setPriceStep(x as keyof typeof OrderBookPriceStep)}\n                            active={x === priceStep}\n                        >\n                            <span>{x}</span>\n                        </Dropdown.Item>\n                    ))}\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Spinner } from '@nilfoundation/react-components';\nimport { useGetOrderBookData, UseGetOrderBookDataReturnType, useLocalStorage } from 'src/hooks';\nimport { OrderBookPriceStep } from 'src/enums';\nimport { OrderBookTable } from './OrderBookTable';\nimport { OrderBookSettingsContext } from './OrderBookSettingsContext';\nimport { DashboardCard } from '../../common';\nimport { OrderBookToolbar } from './OrderBookToolbar';\nimport styles from './OrderBook.module.scss';\n\n/**\n * Order book.\n *\n * @returns React component.\n */\nexport const OrderBook = (): ReactElement => {\n    const [priceStep, setPriceStep] = useLocalStorage<keyof typeof OrderBookPriceStep>(\n        'orderBookPriceStep',\n        '0.001',\n    );\n    const orderBookData = useGetOrderBookData({ priceStep });\n\n    return (\n        <DashboardCard>\n            <OrderBookSettingsContext.Provider value={{ priceStep, setPriceStep }}>\n                <div className={styles.header}>\n                    <h4>Order book</h4>\n                    <OrderBookToolbar\n                        disabled={!orderBookData.data.length && orderBookData.loadingData}\n                    />\n                </div>\n                <div className={styles.orderBook}>{OrderBookViewFactory(orderBookData)}</div>\n            </OrderBookSettingsContext.Provider>\n        </DashboardCard>\n    );\n};\n\n/**\n * Renders order book view.\n *\n * @param {UseGetOrderBookDataReturnType} props Props.\n * @returns React element.\n */\nconst OrderBookViewFactory = ({\n    data,\n    columns,\n    loadingData,\n    isError,\n    lastOrderData,\n    maxVolume,\n}: UseGetOrderBookDataReturnType) => {\n    switch (true) {\n        case loadingData && !data.length:\n            return <Spinner grow />;\n        case isError:\n            return <h5>Error while loading data.</h5>;\n        case !!data.length:\n            return (\n                <OrderBookTable\n                    data={data}\n                    columns={columns}\n                    lastOrderData={lastOrderData}\n                    maxVolume={maxVolume}\n                />\n            );\n        default:\n            return <h5>No orders.</h5>;\n    }\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode, useRef } from 'react';\nimport { Form, uniqueId } from '@nilfoundation/react-components';\n\n/**\n * Props.\n */\ntype BaseFormGroupProps = {\n    hasError: boolean;\n    children: ({ placeholder, id }: { placeholder?: string; id?: string }) => ReactNode;\n    hintText?: string;\n    labelText?: string;\n    className?: string;\n};\n\n/**\n * Base form group with label and hint.\n *\n * @param {BaseFormGroupProps} props Props.\n * @returns React component.\n */\nexport const BaseFormGroup = ({\n    hasError,\n    children,\n    hintText,\n    labelText,\n    className,\n}: BaseFormGroupProps): ReactElement => {\n    const { current } = useRef(uniqueId(labelText));\n\n    return (\n        <Form.Group\n            hasError={hasError}\n            className={className}\n        >\n            {labelText && <Form.Label htmlFor={current}>{labelText}</Form.Label>}\n            {children({\n                placeholder: hintText,\n                id: current,\n            })}\n        </Form.Group>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode, useContext, useEffect, useRef } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { CSSTransition } from 'react-transition-group';\nimport {\n    Button,\n    Input,\n    Size,\n    Spinner,\n    Variant,\n    Form,\n    InputGroup,\n} from '@nilfoundation/react-components';\nimport { CreateTradeOrder } from 'src/models';\nimport { useAuth } from 'src/hooks';\nimport { Details } from '../../common';\nimport { OrderManagementContext } from '../OrderManagementContextProvider';\nimport { BaseFormGroup } from './BaseFormGroup';\nimport styles from './CreateTradeOrderForm.module.scss';\n\n/**\n * Props.\n */\ntype CreateTradeOrderFormProps = {\n    onSubmit: () => Promise<void>;\n    errorMessage: string;\n    children?: ReactNode;\n};\n\n/**\n * Validates input value.\n *\n * @param v Value.\n * @returns Validation result.\n */\nconst validateFn = (v?: number) => v !== undefined && (v >= 0 || isNaN(v));\n\n/**\n * Create trade order form.\n *\n * @param {CreateTradeOrderFormProps} props Props.\n * @returns React component.\n */\nexport const CreateTradeOrderForm = ({\n    onSubmit,\n    errorMessage,\n    children,\n}: CreateTradeOrderFormProps): ReactElement => {\n    const nodeRef = useRef(null);\n    const { selectedValues, setSelectedValues } = useContext(OrderManagementContext);\n    const {\n        register,\n        setValue,\n        formState: { isSubmitting, isValid, errors },\n    } = useFormContext<CreateTradeOrder>();\n    const { user, isReadonly } = useAuth();\n\n    useEffect(() => {\n        if (!selectedValues) {\n            return;\n        }\n\n        const setValueOpts = { shouldDirty: true, shouldValidate: true };\n        setValue('cost', selectedValues.cost, setValueOpts);\n        setValue('eval_time', selectedValues.eval_time, setValueOpts);\n        setSelectedValues(undefined);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedValues]);\n\n    return (\n        <Form>\n            <div className=\"formContent\">\n                <BaseFormGroup\n                    hasError={!!errors['cost']}\n                    labelText=\"Cost\"\n                    hintText=\"Proof cost\"\n                >\n                    {props => (\n                        <InputGroup className={styles.control}>\n                            <Input\n                                type=\"number\"\n                                {...props}\n                                {...register('cost', {\n                                    required: true,\n                                    min: 0,\n                                    valueAsNumber: true,\n                                })}\n                            />\n                            <InputGroup.Addon>USD</InputGroup.Addon>\n                        </InputGroup>\n                    )}\n                </BaseFormGroup>\n                <Details\n                    title={\n                        <div className={`${styles.detailsTitle} text-muted`}>\n                            Additional parameters\n                        </div>\n                    }\n                    bottomIndent={false}\n                    defaultOpen={false}\n                >\n                    <BaseFormGroup\n                        hasError={!!errors['eval_time']}\n                        labelText=\"Generation time\"\n                        hintText=\"Proof generation time\"\n                    >\n                        {props => (\n                            <InputGroup className={styles.control}>\n                                <Input\n                                    type=\"number\"\n                                    {...props}\n                                    {...register('eval_time', {\n                                        required: false,\n                                        validate: validateFn,\n                                        valueAsNumber: true,\n                                    })}\n                                />\n                                <InputGroup.Addon>Mins</InputGroup.Addon>\n                            </InputGroup>\n                        )}\n                    </BaseFormGroup>\n                    <BaseFormGroup\n                        hasError={!!errors['wait_period']}\n                        labelText=\"Order timeout\"\n                        hintText=\"Order cancellation time\"\n                    >\n                        {props => (\n                            <InputGroup className={styles.control}>\n                                <Input\n                                    type=\"number\"\n                                    {...props}\n                                    {...register('wait_period', {\n                                        required: false,\n                                        validate: validateFn,\n                                        valueAsNumber: true,\n                                    })}\n                                />\n                                <InputGroup.Addon>Mins</InputGroup.Addon>\n                            </InputGroup>\n                        )}\n                    </BaseFormGroup>\n                </Details>\n                {children}\n            </div>\n            <Button\n                variant={Variant.success}\n                onClick={onSubmit}\n                size={Size.lg}\n                disabled={!isValid || isSubmitting || !user || isReadonly}\n            >\n                Submit\n                {isSubmitting && <Spinner />}\n            </Button>\n            <CSSTransition\n                classNames=\"fade\"\n                timeout={300}\n                in={!!errorMessage}\n                nodeRef={nodeRef}\n            >\n                <div\n                    ref={nodeRef}\n                    className=\"errorMessage\"\n                >\n                    {errorMessage}\n                </div>\n            </CSSTransition>\n        </Form>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useCallback, useContext } from 'react';\nimport { Controller, ControllerRenderProps, useFormContext } from 'react-hook-form';\nimport { FileRejection } from 'react-dropzone';\nimport { CreateBid } from 'src/models';\nimport { FileUploader as FileUploaderTemplate } from 'src/components';\nimport { OrderManagementContext } from '../OrderManagementContextProvider';\nimport { BaseFormGroup } from '../CreateTradeOrderForm';\nimport './PublicInput.scss';\n\n/**\n * Public_input filed input.\n *\n * @returns React component.\n */\nexport const PublicInput = (): ReactElement => {\n    const { processing } = useContext(OrderManagementContext);\n    const {\n        control,\n        formState: { errors },\n    } = useFormContext<CreateBid>();\n\n    return (\n        <BaseFormGroup\n            hasError={!!errors['public_input']}\n            labelText=\"Public Input\"\n            className=\"publicInput\"\n        >\n            {() => (\n                <Controller<CreateBid, 'public_input'>\n                    name=\"public_input\"\n                    control={control}\n                    rules={{\n                        validate: val => val !== null && !!val,\n                    }}\n                    render={({ field: { ref: _, ...rest } }) => (\n                        <FileUploader\n                            {...rest}\n                            disabled={processing}\n                        />\n                    )}\n                />\n            )}\n        </BaseFormGroup>\n    );\n};\n\n/**\n * Props.\n */\ntype FileUploaderProps = {\n    disabled?: boolean;\n} & Omit<ControllerRenderProps<CreateBid, 'public_input'>, 'ref'>;\n\n/**\n * Renders file uploader.\n *\n * @param {FileUploaderProps} props Props.\n * @returns Recat component.\n */\nconst FileUploader = ({ onChange, disabled }: FileUploaderProps): ReactElement => {\n    const handleJsonFile = useCallback(\n        (acceptedFiles: File[], fileRejections: FileRejection[]) => {\n            if (fileRejections.length !== 0) {\n                onChange(null);\n            }\n\n            const reader = new FileReader();\n\n            reader.onload = ({ target }) => {\n                if (!target || !target.result) {\n                    return;\n                }\n\n                const obj = JSON.parse(target.result as string);\n                onChange(obj);\n            };\n\n            reader.onerror = () => {\n                /*Do nothing*/\n            };\n            reader.onabort = () => {\n                /*Do nothing*/\n            };\n\n            const file = acceptedFiles.at(0);\n            file && reader.readAsText(file);\n        },\n        [onChange],\n    );\n\n    return (\n        <FileUploaderTemplate\n            multiple={false}\n            disabled={disabled}\n            accept={{\n                'application/json': ['.json'],\n            }}\n            onDrop={handleJsonFile}\n        />\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useContext, useState } from 'react';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { notificationActions, Variant } from '@nilfoundation/react-components';\nimport { CreateBid } from 'src/models';\nimport { AddBid, useAppSelector } from 'src/redux';\nimport { createBid } from 'src/api/market/BidsApi';\nimport { OrderManagementContext } from '../OrderManagementContextProvider';\nimport { CreateTradeOrderForm } from '../CreateTradeOrderForm';\nimport { PublicInput } from './PublicInput';\n\n/**\n * Create bid form.\n *\n * @returns React component.\n */\nexport const CreateBidForm = (): ReactElement => {\n    const { setProcessing } = useContext(OrderManagementContext);\n    const user = useAppSelector(s => s.userState.name)!;\n    const selectedCircuitId = useAppSelector(s => s.circuitsState.selectedid);\n    const dispatch = useDispatch();\n    const [errorMessage, setErrorMessage] = useState('');\n    const form = useForm<CreateBid>({\n        mode: 'onChange',\n        defaultValues: {\n            sender: user,\n            statement_key: selectedCircuitId,\n        },\n    });\n\n    const onSubmitBid = form.handleSubmit(async (data: CreateBid): Promise<void> => {\n        setErrorMessage('');\n        setProcessing(true);\n        try {\n            const bid = await createBid(data);\n            dispatch(AddBid(bid));\n\n            const { cost, eval_time } = data;\n\n            notificationActions?.create({\n                title: 'Order successfully created',\n                message: `Cost: ${cost}${eval_time ? `, eval_time: ${eval_time}` : ''}`,\n                variant: Variant.success,\n            });\n            form.reset();\n        } catch (e) {\n            setErrorMessage('Create order error');\n        } finally {\n            setProcessing(false);\n        }\n    });\n\n    return (\n        <FormProvider {...form}>\n            <CreateTradeOrderForm\n                onSubmit={onSubmitBid}\n                errorMessage={errorMessage}\n            >\n                <PublicInput />\n            </CreateTradeOrderForm>\n        </FormProvider>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useState, useContext } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { notificationActions, Variant } from '@nilfoundation/react-components';\nimport { CreateAsk } from 'src/models';\nimport { AddAsk, useAppSelector } from 'src/redux';\nimport { createAsk } from 'src/api/market/AsksApi';\nimport { OrderManagementContext } from '../OrderManagementContextProvider';\nimport { CreateTradeOrderForm } from '../CreateTradeOrderForm';\n\n/**\n * Create ask form.\n *\n * @returns React component.\n */\nexport const CreateAskForm = (): ReactElement => {\n    const { setProcessing } = useContext(OrderManagementContext);\n    const user = useAppSelector(s => s.userState.name)!;\n    const selectedCircuitId = useAppSelector(s => s.circuitsState.selectedid);\n    const dispatch = useDispatch();\n    const [errorMessage, setErrorMessage] = useState('');\n    const form = useForm<CreateAsk>({\n        mode: 'onChange',\n        defaultValues: {\n            sender: user,\n            statement_key: selectedCircuitId,\n        },\n    });\n\n    const onSubmitAsk = form.handleSubmit(async (data: CreateAsk): Promise<void> => {\n        setErrorMessage('');\n        setProcessing(true);\n        try {\n            const ask = await createAsk(data);\n            dispatch(AddAsk(ask));\n\n            const { cost, eval_time } = data;\n\n            notificationActions?.create({\n                title: 'Order successfully created',\n                message: `Cost: ${cost}${eval_time ? `, eval_time: ${eval_time}` : ''}`,\n                variant: Variant.success,\n            });\n            form.reset();\n        } catch (e) {\n            setErrorMessage(`Create order error`);\n        } finally {\n            setProcessing(false);\n        }\n    });\n\n    return (\n        <FormProvider {...form}>\n            <CreateTradeOrderForm\n                onSubmit={onSubmitAsk}\n                errorMessage={errorMessage}\n            />\n        </FormProvider>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useContext } from 'react';\nimport { Nav } from '@nilfoundation/react-components';\nimport { TradeOrderType } from 'src/models';\nimport { OrderManagementContext } from '../OrderManagementContextProvider';\n\n/**\n * Props.\n */\ntype OrderManagementTabsProps = {\n    currentTab: TradeOrderType;\n    onSetTab: (t: TradeOrderType) => void;\n};\n\n/**\n * Order management panel.\n *\n * @param {OrderManagementTabsProps} props Props.\n * @returns React component.\n */\nexport const CreateOrdersTabs = ({\n    currentTab,\n    onSetTab,\n}: OrderManagementTabsProps): ReactElement => {\n    const { processing } = useContext(OrderManagementContext);\n\n    return (\n        <Nav justified>\n            {Object.values(TradeOrderType).map(t => (\n                <Nav.Item\n                    key={t}\n                    onClick={() => onSetTab(t)}\n                    active={t === currentTab}\n                    disabled={processing}\n                >\n                    {t}\n                </Nav.Item>\n            ))}\n        </Nav>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useState } from 'react';\nimport { useAppSelector } from 'src/redux';\nimport { TradeOrderType } from 'src/models';\nimport { DashboardCard, Details } from '../../common';\nimport { ProtectedContent } from '../../login';\nimport { CreateBidForm } from '../CreateBidForm';\nimport { CreateAskForm } from '../CreateAskForm';\nimport { CreateOrdersTabs } from './CreateOrdersTabs';\nimport './CreateOrdersPanel.scss';\n\n/**\n * Create orders panel.\n *\n * @returns React component.\n */\nexport const CreateOrdersPanel = (): ReactElement => {\n    const [tab, setTab] = useState<TradeOrderType>(TradeOrderType.buy);\n    const selectedCircuitId = useAppSelector(s => s.circuitsState.selectedid);\n\n    return (\n        <DashboardCard>\n            <Details title={<h4>Create orders</h4>}>\n                <div className=\"cerateOrdersPanel\">\n                    <ProtectedContent overlayTitle=\"Authorization is required to create orders\">\n                        <CreateOrdersTabs\n                            currentTab={tab}\n                            onSetTab={setTab}\n                        />\n                        {tabFactory(tab, selectedCircuitId)}\n                    </ProtectedContent>\n                </div>\n            </Details>\n        </DashboardCard>\n    );\n};\n\n/**\n * Renders tab content conditionally.\n *\n * @param tab Selected tab.\n * @param selectedCircuitId Selected circuit id.\n * @returns React Element.\n */\nconst tabFactory = (tab: TradeOrderType, selectedCircuitId?: string) => {\n    if (selectedCircuitId === undefined) {\n        return <h5>Please, select circuit to create orders.</h5>;\n    }\n\n    switch (tab) {\n        case TradeOrderType.buy:\n            return <CreateBidForm />;\n        case TradeOrderType.sell:\n            return <CreateAskForm />;\n        default:\n            return <></>;\n    }\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, memo, useCallback } from 'react';\nimport { Row, TableInstance, TableState } from 'react-table';\nimport { TradeHistoryData, TradeHistoryTableColumn } from 'src/models';\nimport { ReactTable, TRow, TCell } from 'src/components';\nimport { renderDashOnEmptyValue } from 'src/utils';\nimport styles from './TradeHistory.module.scss';\n\n/**\n * Props.\n */\ntype TradeHistoryTableProps = {\n    columns: TradeHistoryTableColumn[];\n    data: TradeHistoryData[];\n};\n\n/**\n * Initial table state without user interactions.\n */\nconst defaultTableState: Partial<TableState<TradeHistoryData>> = {\n    sortBy: [\n        {\n            id: 'timestamp',\n            desc: true,\n        },\n    ],\n    hiddenColumns: ['type'],\n};\n\n/**\n * Order book table.\n *\n * @param {TradeHistoryTableProps} props Props.\n * @returns React component.\n */\nexport const TradeHistoryTable = memo(function TradeHistoryTable({\n    columns,\n    data,\n}: TradeHistoryTableProps): ReactElement {\n    const renderRows = useCallback(\n        ({ rows, prepareRow }: TableInstance<TradeHistoryData>) =>\n            rows.map(row => {\n                prepareRow(row);\n                return (\n                    <TRow\n                        {...row.getRowProps()}\n                        key={row.id}\n                    >\n                        {row.cells.map(cell => {\n                            const { value, column, getCellProps } = cell;\n                            const { key, ...rest } = getCellProps();\n\n                            return (\n                                <TCell\n                                    className={getCellClassName(row)}\n                                    key={key}\n                                    {...rest}\n                                >\n                                    {column.id !== 'timestamp'\n                                        ? renderDashOnEmptyValue(value)\n                                        : value}\n                                </TCell>\n                            );\n                        })}\n                    </TRow>\n                );\n            }),\n        [],\n    );\n\n    return (\n        <ReactTable\n            name=\"tradeHistoryTable\"\n            className={styles.table}\n            data={data}\n            columns={columns}\n            disableSortRemove={true}\n            renderRows={renderRows}\n            initialState={defaultTableState}\n        />\n    );\n});\n\n/**\n * Generate className to table cell.\n *\n * @param row Row.\n * @returns Class name.\n */\nconst getCellClassName = (row: Row<TradeHistoryData>) => {\n    if (row.values.type === undefined) {\n        return undefined;\n    }\n\n    return `${row.values.type}TextColor`;\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Spinner } from '@nilfoundation/react-components';\nimport { useGetTradeHistoryData, UseGetTradeHistoryDataReturnType } from 'src/hooks';\nimport { Details, DashboardCard } from '../../common';\nimport { TradeHistoryTable } from './TradeHistoryTable';\nimport styles from './TradeHistory.module.scss';\n\n/**\n * Trade history component.\n *\n * @returns React component.\n */\nexport const TradeHistory = (): ReactElement => {\n    const data = useGetTradeHistoryData();\n\n    return (\n        <DashboardCard>\n            <Details title={<h4>Trades</h4>}>\n                <div className={styles.container}>{TradeHistoryViewFactory({ ...data })}</div>\n            </Details>\n        </DashboardCard>\n    );\n};\n\n/**\n * Renders trade history view.\n *\n * @param {UseGetTradeHistoryDataReturnType} props Props.\n * @returns React element.\n */\nconst TradeHistoryViewFactory = ({\n    data,\n    columns,\n    loadingData,\n    isError,\n}: UseGetTradeHistoryDataReturnType) => {\n    switch (true) {\n        case loadingData && !data.length:\n            return <Spinner grow />;\n        case isError:\n            return <h5>Error while loading data.</h5>;\n        case !!data.length:\n            return (\n                <TradeHistoryTable\n                    data={data}\n                    columns={columns}\n                />\n            );\n        default:\n            return <h5>Empty history.</h5>;\n    }\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Nav } from '@nilfoundation/react-components';\nimport { ManageOrdersTab } from './ManageOrdersTab';\n\n/**\n * Props.\n */\ntype ManageOrdersPanelTabsProps = {\n    currentTab: ManageOrdersTab;\n    onSetTab: (t: ManageOrdersTab) => void;\n};\n\n/**\n * Manage orders panel tabs.\n *\n * @param {ManageOrdersPanelTabsProps} props Props.\n * @returns React component.\n */\nexport const ManageOrdersPanelTabs = ({\n    currentTab,\n    onSetTab,\n}: ManageOrdersPanelTabsProps): ReactElement => {\n    return (\n        <Nav justified>\n            {Object.values(ManageOrdersTab).map(t => (\n                <Nav.Item\n                    key={t}\n                    onClick={() => onSetTab(t)}\n                    active={t === currentTab}\n                >\n                    {t}\n                </Nav.Item>\n            ))}\n        </Nav>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Button, Size, Variant, Spinner } from '@nilfoundation/react-components';\n\n/**\n * Props.\n */\ntype ToolbarPanelProps = {\n    onAccept: () => void;\n    onDecline: () => void;\n    processing: boolean;\n    message?: string;\n};\n\n/**\n * Toolbar panel.\n *\n * @param {ToolbarPanelProps} props Props.\n * @returns React component.\n */\nexport const ToolbarPanel = ({\n    onAccept,\n    onDecline,\n    processing,\n    message,\n}: ToolbarPanelProps): ReactElement => {\n    return (\n        <div className=\"toolbarPanel\">\n            {message && <div className=\"message\">{message}</div>}\n            <div className=\"buttons\">\n                <Button\n                    onClick={onAccept}\n                    variant={Variant.success}\n                    size={Size.lg}\n                    disabled={processing}\n                    block\n                >\n                    Yes\n                    {processing && <Spinner />}\n                </Button>\n                <Button\n                    onClick={onDecline}\n                    variant={Variant.danger}\n                    size={Size.lg}\n                    disabled={processing}\n                    block\n                >\n                    No\n                </Button>\n            </div>\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, memo, useCallback, useState } from 'react';\nimport { Cell, Column, Row, TableInstance, TableState } from 'react-table';\nimport { Icon } from '@nilfoundation/react-components';\nimport { useDispatch } from 'react-redux';\nimport { ManageOrdersData, TradeOrderType } from 'src/models';\nimport { ReactTable, TRow, TCell, ClicableIcon } from 'src/components';\nimport { removeAsk, removeBid } from 'src/api';\nimport { RemoveAsk, RemoveBid } from 'src/redux';\nimport { renderDashOnEmptyValue } from 'src/utils';\nimport { useAuth } from 'src/hooks';\nimport { ToolbarPanel } from './ToolbarPanel';\n\n/**\n * Props.\n */\ntype ActiveOrdersTableProps = {\n    data: ManageOrdersData[];\n};\n\n/**\n * Table columns.\n */\nconst columns: Column<ManageOrdersData>[] = [\n    {\n        accessor: 'status',\n        disableSortBy: true,\n    },\n    {\n        Header: 'Time',\n        accessor: 'init_time',\n    },\n    {\n        Header: 'Type',\n        accessor: 'type',\n    },\n    {\n        Header: 'Cost',\n        accessor: 'cost',\n    },\n    {\n        Header: 'Gen time',\n        accessor: 'eval_time',\n    },\n    {\n        accessor: 'orderId',\n        disableSortBy: true,\n    },\n];\n\n/**\n * Initial table state without user interactions.\n */\nconst defaultTableState: Partial<TableState<ManageOrdersData>> = {\n    sortBy: [\n        {\n            id: 'init_time',\n            desc: true,\n        },\n    ],\n};\n\n/**\n * Active orders table.\n *\n * @param {ActiveOrdersTableProps} props Props.\n * @returns React component.\n */\nexport const ActiveOrdersTable = memo(function ActiveOrdersTable({\n    data,\n}: ActiveOrdersTableProps): ReactElement {\n    const [selectedRow, setSelectedRow] = useState<Row<ManageOrdersData> | null>(null);\n    const [processing, setProcessing] = useState(false);\n    const dispatch = useDispatch();\n    const { isReadonly } = useAuth();\n\n    const onAcceptRemoveOrder = useCallback(async () => {\n        setProcessing(true);\n\n        if (!selectedRow) {\n            return;\n        }\n\n        try {\n            const { orderId, type } = selectedRow.values;\n            const fetcher = type === TradeOrderType.buy ? removeBid : removeAsk;\n            const action = type === TradeOrderType.buy ? RemoveBid : RemoveAsk;\n\n            await fetcher(orderId);\n            dispatch(action(orderId));\n            setSelectedRow(null);\n        } catch (e) {\n            // TODO Handle error\n        } finally {\n            setProcessing(false);\n        }\n    }, [setProcessing, selectedRow, setSelectedRow, dispatch]);\n\n    const onDecline = useCallback(() => {\n        setSelectedRow(null);\n    }, [setSelectedRow]);\n\n    const renderRow = useCallback(\n        (\n            row: Row<ManageOrdersData>,\n            prepareRow: (r: Row<ManageOrdersData>) => void,\n            canRemove = false,\n        ) => {\n            prepareRow(row);\n\n            return (\n                <TRow\n                    {...row.getRowProps()}\n                    key={row.id}\n                >\n                    {row.cells.map(cell => {\n                        const { value, column, getCellProps } = cell;\n                        const { key, ...rest } = getCellProps();\n\n                        if (column.id === 'status') {\n                            const icon = `fa-solid fa-${\n                                value === 'created' ? 'circle-plus' : 'spinner'\n                            }`;\n\n                            return (\n                                <TCell\n                                    key={key}\n                                    {...rest}\n                                >\n                                    <Icon\n                                        title={value}\n                                        iconName={icon}\n                                    />\n                                </TCell>\n                            );\n                        }\n\n                        if (column.id === 'orderId') {\n                            return canRemove ? (\n                                <TCell\n                                    key={key}\n                                    {...rest}\n                                >\n                                    <ClicableIcon\n                                        iconName=\"fa-solid fa-ban\"\n                                        disabled={isReadonly || processing}\n                                        onClick={() => setSelectedRow(cell.row)}\n                                    />\n                                </TCell>\n                            ) : (\n                                <></>\n                            );\n                        }\n\n                        const shouldUseToFixed = column.id === 'eval_time' || column.id === 'cost';\n\n                        return (\n                            <TCell\n                                className={getCellClassName(cell)}\n                                key={key}\n                                {...rest}\n                            >\n                                <span>\n                                    {shouldUseToFixed ? renderDashOnEmptyValue(value) : value}\n                                </span>\n                            </TCell>\n                        );\n                    })}\n                </TRow>\n            );\n        },\n        [processing, setSelectedRow, isReadonly],\n    );\n\n    const renderRows = useCallback(\n        ({ rows, prepareRow }: TableInstance<ManageOrdersData>) => {\n            const activeOrders = rows.filter(x => x.values.status === 'created');\n            const inProgressOrders = rows.filter(x => x.values.status === 'processing');\n\n            return (\n                <>\n                    {activeOrders.length !== 0 &&\n                        activeOrders.map(x => renderRow(x, prepareRow, true))}\n                    {inProgressOrders.length !== 0 &&\n                        inProgressOrders.map(x => renderRow(x, prepareRow))}\n                </>\n            );\n        },\n        [renderRow],\n    );\n\n    return (\n        <>\n            <ReactTable\n                name=\"activeOrdersTable\"\n                className=\"activeOrdersTable\"\n                data={data}\n                columns={columns}\n                renderRows={renderRows}\n                disableSortRemove={true}\n                initialState={defaultTableState}\n            />\n            {selectedRow !== null && (\n                <ToolbarPanel\n                    onAccept={onAcceptRemoveOrder}\n                    onDecline={onDecline}\n                    processing={processing}\n                    message=\"Proceed removing order?\"\n                />\n            )}\n        </>\n    );\n});\n\n/**\n * Generate className to table cell.\n *\n * @param cell Cell.\n * @returns Class name.\n */\nconst getCellClassName = (cell: Cell<ManageOrdersData>) => {\n    if (cell.column.id !== 'type') {\n        return undefined;\n    }\n\n    return `${cell.value === TradeOrderType.buy ? 'grow' : 'loss'}TextColor`;\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, memo, useCallback } from 'react';\nimport { Cell, Column, TableInstance, TableState } from 'react-table';\nimport { ManageOrdersData, TradeOrderType } from 'src/models';\nimport { ReactTable, TRow, TCell } from 'src/components';\nimport { renderDashOnEmptyValue } from 'src/utils';\n\n/**\n * Props.\n */\ntype HistoryOrdersTableProps = {\n    data: ManageOrdersData[];\n};\n\n/**\n * Table columns.\n */\nconst columns: Column<ManageOrdersData>[] = [\n    {\n        Header: 'Time',\n        accessor: 'timestamp',\n    },\n    {\n        Header: 'Type',\n        accessor: 'type',\n    },\n    {\n        Header: 'Cost',\n        accessor: 'cost',\n    },\n    {\n        Header: 'Generation time',\n        accessor: 'eval_time',\n    },\n];\n\n/**\n * Initial table state without user interactions.\n */\nconst defaultTableState: Partial<TableState<ManageOrdersData>> = {\n    sortBy: [\n        {\n            id: 'timestamp',\n            desc: true,\n        },\n    ],\n};\n\n/**\n * History orders table.\n *\n * @param {HistoryOrdersTableProps} props Props.\n * @returns React component.\n */\nexport const HistoryOrdersTable = memo(function ActiveOrdersTable({\n    data,\n}: HistoryOrdersTableProps): ReactElement {\n    const renderRows = useCallback(\n        ({ rows, prepareRow }: TableInstance<ManageOrdersData>) =>\n            rows.map(row => {\n                prepareRow(row);\n                return (\n                    <TRow\n                        {...row.getRowProps()}\n                        key={row.id}\n                    >\n                        {row.cells.map(cell => {\n                            const { value, column, getCellProps } = cell;\n                            const { key, ...rest } = getCellProps();\n                            const shouldUseToFixed =\n                                column.id === 'eval_time' || column.id === 'cost';\n\n                            return (\n                                <TCell\n                                    className={getCellClassName(cell)}\n                                    key={key}\n                                    {...rest}\n                                >\n                                    <span>\n                                        {shouldUseToFixed ? renderDashOnEmptyValue(value) : value}\n                                    </span>\n                                </TCell>\n                            );\n                        })}\n                    </TRow>\n                );\n            }),\n        [],\n    );\n\n    return (\n        <ReactTable\n            name=\"historyOrdersTable\"\n            className=\"historyOrdersTable\"\n            data={data}\n            columns={columns}\n            disableSortRemove={true}\n            renderRows={renderRows}\n            initialState={defaultTableState}\n        />\n    );\n});\n\n/**\n * Generate className to table cell.\n *\n * @param cell Cell.\n * @returns Class name.\n */\nconst getCellClassName = (cell: Cell<ManageOrdersData>) => {\n    if (cell.column.id !== 'type') {\n        return undefined;\n    }\n\n    return `${cell.value === TradeOrderType.buy ? 'grow' : 'loss'}TextColor`;\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useState } from 'react';\nimport { Spinner } from '@nilfoundation/react-components';\nimport { useAppSelector } from 'src/redux';\nimport { useGetManageOrdersData } from 'src/hooks';\nimport { ManageOrdersData } from 'src/models';\nimport { DashboardCard, Details } from '../../common';\nimport { ProtectedContent } from '../../login';\nimport { ManageOrdersTab } from './ManageOrdersTab';\nimport { ManageOrdersPanelTabs } from './ManageOrdersPanelTabs';\nimport { ActiveOrdersTable } from './ActiveOrdersTable';\nimport { HistoryOrdersTable } from './HistoryOrdersTable';\nimport './ManageOrdersPanel.scss';\n\n/**\n * Manage orders panel.\n *\n * @returns React component.\n */\nexport const ManageOrdersPanel = (): ReactElement => {\n    const [tab, setTab] = useState<ManageOrdersTab>(ManageOrdersTab.active);\n    const selectedCircuitId = useAppSelector(s => s.circuitsState.selectedid);\n    const { isError, loadingData, activeOrdersData, historyOrdersData } = useGetManageOrdersData();\n\n    return (\n        <DashboardCard>\n            <Details title={<h4>Manage orders</h4>}>\n                <div className=\"manageOrdersPanel\">\n                    <ProtectedContent overlayTitle=\"Authorization is required to manage orders\">\n                        <ManageOrdersPanelTabs\n                            currentTab={tab}\n                            onSetTab={setTab}\n                        />\n                        {selectedCircuitId !== undefined ? (\n                            tabFactory(\n                                tab,\n                                isError,\n                                loadingData,\n                                tab === ManageOrdersTab.active\n                                    ? activeOrdersData\n                                    : historyOrdersData,\n                            )\n                        ) : (\n                            <h5>Please, select circuit to display orders.</h5>\n                        )}\n                    </ProtectedContent>\n                </div>\n            </Details>\n        </DashboardCard>\n    );\n};\n\n/**\n * Renders tab content conditionally.\n *\n * @param tab - Tab.\n * @param error - Error.\n * @param loading - Loading.\n * @param data - Data.\n * @returns React Element.\n */\nconst tabFactory = (\n    tab: ManageOrdersTab,\n    error: boolean,\n    loading: boolean,\n    data: ManageOrdersData[],\n) => {\n    if (error) {\n        return <h5>Error while loading data.</h5>;\n    }\n\n    if (data.length === 0) {\n        return loading ? <Spinner grow /> : <h5>No orders.</h5>;\n    }\n\n    switch (tab) {\n        case ManageOrdersTab.active:\n            return <ActiveOrdersTable data={data} />;\n        case ManageOrdersTab.history:\n            return <HistoryOrdersTable data={data} />;\n        default:\n            return <></>;\n    }\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { ListGroup, Media } from '@nilfoundation/react-components';\nimport { Link } from 'react-router-dom';\nimport { Path } from 'src/routing';\nimport { Proof } from 'src/models';\nimport { selectSelectedProofId, useAppSelector } from 'src/redux';\nimport styles from './ProofList.module.scss';\n\n/**\n * Props.\n */\ntype ProofListItemProps = {\n    proof: Proof;\n};\n\n/**\n * Proof list item.\n *\n * @param {ProofListItemProps} props Props.\n * @returns React component.\n */\nexport const ProofListItem = ({ proof: { _key } }: ProofListItemProps): ReactElement => {\n    const selectedProofId = useAppSelector(selectSelectedProofId);\n    const isSelected = _key === selectedProofId;\n\n    return (\n        <ListGroup.Item active={isSelected}>\n            <Link to={`${Path.portfolio}/${_key}`}>\n                <Media className={isSelected ? styles.selected : ''}>\n                    <Media.Body className={styles.itemBody}>{`id: ${_key}`}</Media.Body>\n                </Media>\n            </Link>\n        </ListGroup.Item>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { ListGroup, Spinner } from '@nilfoundation/react-components';\nimport { selectProofList, useAppSelector } from 'src/redux';\nimport { useSelectedProofId } from 'src/hooks';\nimport { DashboardCard } from 'src/components';\nimport { ProofListItem } from './ProofListItem';\nimport styles from './ProofList.module.scss';\n\n/**\n * Proof list.\n *\n * @returns React component.\n */\nexport const ProofList = (): ReactElement => {\n    const proofList = useAppSelector(selectProofList);\n    const loadingProofs = useAppSelector(s => s.proofState.isLoadingProofs);\n    const getProofsError = useAppSelector(s => s.proofState.error);\n    useSelectedProofId();\n\n    return (\n        <DashboardCard>\n            <h4>Proof list</h4>\n            <div className={styles.container}>\n                {ProofListViewFactory(proofList, loadingProofs, getProofsError)}\n            </div>\n        </DashboardCard>\n    );\n};\n\n/**\n * Conditionally renders proof data. First true case renders.\n *\n * @param proofList Proof list.\n * @param loadingProofs Proofs loading state.\n * @param getProofsError Proofs loading error.\n * @returns View, based on proof data state.\n */\nconst ProofListViewFactory = (\n    proofList: ReturnType<typeof selectProofList>,\n    loadingProofs: boolean,\n    getProofsError: boolean,\n) => {\n    switch (true) {\n        case loadingProofs && !proofList.length:\n            return <Spinner grow />;\n        case getProofsError:\n            return <h5>Error while getting proofs.</h5>;\n        case proofList.length === 0:\n            return <h5>No proofs.</h5>;\n        case !!proofList.length:\n            return (\n                <ListGroup className={styles.proofList}>\n                    {proofList.map(x => (\n                        <ProofListItem\n                            proof={x}\n                            key={x._key}\n                        />\n                    ))}\n                </ListGroup>\n            );\n    }\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { KeyboardEventHandler, ReactElement, useMemo } from 'react';\nimport { Button, Icon, Spinner, Variant } from '@nilfoundation/react-components';\nimport { Proof } from 'src/models';\nimport { getProofById } from 'src/api';\nimport { useDownloadJson } from 'src/hooks';\nimport styles from './ProofContentCard.module.scss';\n\n/**\n * Props.\n */\ntype ProofViewHeaderProps = {\n    proof?: Proof;\n};\n\n/**\n * Proof content card header.\n *\n * @param {ProofViewHeaderProps} props Props.\n * @returns React component.\n */\nexport const ProofContentCardToolbar = ({ proof }: ProofViewHeaderProps): ReactElement => {\n    const fetcher = useMemo(\n        () => (proof?._key !== undefined ? () => getProofById(proof._key) : undefined),\n        [proof?._key],\n    );\n    const { downloadJson, loading } = useDownloadJson({\n        fileName: `proof-${proof?._key}`,\n        fetcher,\n    });\n\n    const keyDownHandler: KeyboardEventHandler = e => {\n        if (e.key !== 'Enter' && e.key !== ' ') {\n            return;\n        }\n\n        downloadJson();\n    };\n\n    return (\n        <div className={styles.toolbar}>\n            <Button\n                variant={Variant.primary}\n                disabled={proof === undefined || loading}\n                onClick={downloadJson}\n                onKeyDown={keyDownHandler}\n                aria-label=\"Download proof as JSON file\"\n            >\n                <Icon iconName=\"fa-solid fa-download\" />\n                JSON\n                {loading && <Spinner />}\n            </Button>\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Spinner } from '@nilfoundation/react-components';\nimport { selectSelectedProofId, useAppSelector } from 'src/redux';\nimport { DashboardCard, ObjectAsPlainTextViewer } from 'src/components';\nimport { Proof } from 'src/models';\nimport { ProofContentCardToolbar } from './ProofContentCardToolbar';\nimport styles from './ProofContentCard.module.scss';\n\n/**\n * Proof content card.\n *\n * @returns React component.\n */\nexport const ProofContentCard = (): ReactElement => {\n    const selectedProofId = useAppSelector(selectSelectedProofId);\n    const isLoadingProofs = useAppSelector(s => s.proofState.isLoadingProofs);\n    const proofData = useAppSelector(s =>\n        s.proofState.proofs.find(x => x._key === selectedProofId),\n    );\n\n    return (\n        <DashboardCard>\n            <h4>Proof detailed info</h4>\n            <div className={styles.container}>{ProofViewFactory(isLoadingProofs, proofData)}</div>\n        </DashboardCard>\n    );\n};\n\n/**\n * Conditionally renders proof data. First true case renders.\n *\n * @param loadingProofs Loading proof data from dbms.\n * @param proof Proof data.\n * @returns View, based on proof data state.\n */\nconst ProofViewFactory = (loadingProofs: boolean, proof?: Proof) => {\n    switch (true) {\n        case loadingProofs && !proof:\n            return <Spinner grow />;\n        case proof !== undefined:\n            return (\n                <>\n                    <ObjectAsPlainTextViewer data={proof!} />\n                    <ProofContentCardToolbar proof={proof} />\n                </>\n            );\n        case proof === undefined:\n            return <h5>No proof data was found.</h5>;\n    }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CircuitDetailedInfo_container__YIX53\",\"content\":\"CircuitDetailedInfo_content__GjHOu\",\"jsonView\":\"CircuitDetailedInfo_jsonView__2TlZR\",\"description\":\"CircuitDetailedInfo_description__2DJ1s\",\"imageContainer\":\"CircuitDetailedInfo_imageContainer__1_OWD\",\"toolbar\":\"CircuitDetailedInfo_toolbar__36p_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"RegisterForm_title__2dkIs\",\"description\":\"RegisterForm_description__1yOmq\",\"social\":\"RegisterForm_social__3q7C8\",\"control\":\"RegisterForm_control__11GP7\",\"form\":\"RegisterForm_form__35kd2\",\"successMessage\":\"RegisterForm_successMessage__PK7f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"UserMenu_menu__3fDVN\",\"balanceContainer\":\"UserMenu_balanceContainer__3sbAV\",\"balanceTitle\":\"UserMenu_balanceTitle__2iyh-\",\"balance\":\"UserMenu_balance__TiCOC\",\"dropdown\":\"UserMenu_dropdown__1lDHS\",\"button\":\"UserMenu_button__1HAKP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"CircuitInfoPanel_panel__1wG2C\",\"container\":\"CircuitInfoPanel_container__2Tz7U\",\"title\":\"CircuitInfoPanel_title__3PHJ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoImage\":\"LoginForm_logoImage__1IRVH\",\"icon\":\"LoginForm_icon__TLw57\",\"control\":\"LoginForm_control__1eG7g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"UserBalance_balance__nG0Df\",\"text\":\"UserBalance_text__r0g0-\",\"hiddenText\":\"UserBalance_hiddenText__1cXDh\",\"currency\":\"UserBalance_currency__2H9b3\",\"label\":\"UserBalance_label__16UIV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__3FziC\",\"tableHead\":\"Table_tableHead__2OCzy\",\"footerHead\":\"Table_footerHead__1TW8b\",\"stickyHead\":\"Table_stickyHead__3xNZn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProofList_container__2bTFD\",\"proofList\":\"ProofList_proofList__3R50A\",\"itemBody\":\"ProofList_itemBody__13ca8\",\"selected\":\"ProofList_selected__3jQV1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailsTitle\":\"CreateTradeOrderForm_detailsTitle__75pkC\",\"control\":\"CreateTradeOrderForm_control__3Wls7\"};","/**\n * @file Enum declaration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Currency type.\n */\nexport enum Currency {\n    Solana = 'Solana',\n    Mina = 'Mina',\n    Ethereum = 'Ethereum',\n}\n\n/**\n *\n * @param currency Currency.\n * @returns Path to currency image.\n */\nexport const getCurrencyImage = (currency: Currency): string | null => {\n    if (!Object.keys(Currency).includes(currency)) {\n        return null;\n    }\n\n    return `${process.env.PUBLIC_URL}currencies/${currency}-icon.svg`;\n};\n","/**\n * @file Enum declaration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Chart type.\n */\nexport enum ChartType {\n    proofCostChart = 'Proof Cost',\n    proofGetTimeChart = 'Proof Generation Time',\n}\n","/**\n * @file Enum declaration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Date range variant.\n */\nexport enum DateUnit {\n    minute = '1m',\n    quaterMinute = '15m',\n    halfHour = '30m',\n    hour = '1h',\n    day = 'D',\n}\n\n/**\n * Returns time scale date format based on provided date unit.\n *\n * @param unit Date unit.\n * @returns Date format.\n */\nexport const getDateFormatBasedOnDateUnit = (unit: DateUnit): string => {\n    switch (unit) {\n        case DateUnit.minute:\n        case DateUnit.quaterMinute:\n        case DateUnit.halfHour:\n        case DateUnit.hour:\n            return 'DD.MM HH:mm';\n        case DateUnit.day:\n            return 'DD.MM';\n        default:\n            return '';\n    }\n};\n","/**\n * @file Enum declaration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Url query param.\n */\nexport const enum UrlQueryParam {\n    /**\n     * Used for saving in url previous page pathname.\n     */\n    ref = 'ref',\n}\n","/**\n * @file Enum declaration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * React router param.\n */\nexport const enum RouterParam {\n    proofId = 'proofId',\n    circuitId = 'circuitId',\n}\n","/**\n * @file Enum declaration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Order book price step.\n */\nexport const OrderBookPriceStep = {\n    '0.001': 3,\n    '0.01': 2,\n    '0.1': 1,\n    '1': 0,\n};\n","/**\n * @file Api.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { Bid, CreateBid } from 'src/models';\nimport { createBearerHttpClient } from '../common';\n\nconst databaseUrl = `_db/${process.env.REACT_APP_DBMS_DEFAULT_DATABASE}`;\nconst apiUrl = `${databaseUrl}/_api/`;\nconst httpFetcher = createBearerHttpClient(apiUrl);\n\nconst createFetcher = createBearerHttpClient('/market/bid');\n\n/**\n * Get bids.\n *\n * @param circuitId Circuit id.\n * @returns Bids.\n */\nexport const getBidsByCircuitId = (circuitId: string): Promise<Bid[]> =>\n    httpFetcher\n        .post('cursor', {\n            query: `\n                FOR x IN @@relation\n                    FILTER x.statement_key == '${circuitId}'\n                    RETURN x`,\n            bindVars: {\n                '@relation': 'bid',\n            },\n            batchSize: 10000,\n        })\n        .then((x: any) => x.result);\n\n/**\n * Create Bid.\n *\n * @param data - Bid dto.\n * @returns Bid.\n */\nexport const createBid = (data: CreateBid): Promise<Bid> =>\n    createFetcher.post('', data).then((x: any) => x);\n\n/**\n * Remove Bid.\n *\n * @param bidToRemoveId Bid to remove id.\n * @returns Ask.\n */\nexport const removeBid = (bidToRemoveId: Bid['_key']): Promise<void> =>\n    httpFetcher\n        .post('cursor', {\n            query: `\n            FOR x IN @@relation\n                FILTER x._key == ${bidToRemoveId}\n                REMOVE { _key: x._key } IN @@relation\n            `,\n            bindVars: {\n                '@relation': 'bid',\n            },\n        })\n        .then((x: any) => x.result);\n","/**\n * @file Api.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { Ask, CreateAsk } from '../../models';\nimport { createBearerHttpClient } from '../common';\n\nconst databaseUrl = `_db/${process.env.REACT_APP_DBMS_DEFAULT_DATABASE}`;\nconst apiUrl = `${databaseUrl}/_api/`;\nconst httpFetcher = createBearerHttpClient(apiUrl);\nconst createFetcher = createBearerHttpClient('/market/ask');\n\n/**\n * Get asks.\n *\n * @param circuitId Circuit id.\n * @returns Asks.\n */\nexport const getAsksByCircuitId = (circuitId: string): Promise<Ask[]> =>\n    httpFetcher\n        .post('cursor', {\n            query: `\n                FOR x IN @@relation\n                FILTER x.statement_key == '${circuitId}'\n                RETURN x`,\n            bindVars: {\n                '@relation': 'ask',\n            },\n            batchSize: 10000,\n        })\n        .then((x: any) => x.result);\n\n/**\n * Create Ask.\n *\n * @param data Ask dto.\n * @returns Ask.\n */\nexport const createAsk = (data: CreateAsk): Promise<Ask> => createFetcher.post('', data);\n\n/**\n * Remove Ask.\n *\n * @param askToRemoveId Ask to remove id.\n * @returns Ask.\n */\nexport const removeAsk = (askToRemoveId: Ask['_key']): Promise<void> =>\n    httpFetcher.post('cursor', {\n        query: `\n            FOR x IN @@relation\n                FILTER x._key == ${askToRemoveId}\n                REMOVE { _key: x._key } IN @@relation\n            `,\n        bindVars: {\n            '@relation': 'ask',\n        },\n    });\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TradeHistory_container__1JvuS\",\"table\":\"TradeHistory_table__3qP19\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProofContentCard_container__11UKR\",\"toolbar\":\"ProofContentCard_toolbar__iUq4W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"AuthContainer_loginContainer__3AkV9\",\"copyright\":\"AuthContainer_copyright__2DGTy\",\"back\":\"AuthContainer_back__2ygtP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumbs\":\"Breadcrumbs_breadcrumbs__1_0bQ\",\"item\":\"Breadcrumbs_item__wXuDg\",\"active\":\"Breadcrumbs_active__2ubF0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__2uQq1\",\"nav\":\"Header_nav__hD99J\",\"navbar\":\"Header_navbar__25ekV\"};","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useCallback, useMemo } from 'react';\nimport { notificationActions, Variant } from '@nilfoundation/react-components';\nimport { useDispatch } from 'react-redux';\nimport { useSearchParams, useNavigate } from 'react-router-dom';\nimport { removeItemFromLocalStorage, setItemIntoLocalStorage } from 'src/packages/LocalStorage';\nimport { selectUserName, UpdateUserName, useAppSelector } from 'src/redux';\nimport { Path } from 'src/routing';\nimport { getUserFromJwt } from 'src/utils';\nimport { UrlQueryParam } from 'src/enums';\n\nconst readonlyUser = process.env.REACT_APP_READONLY_USER;\n\n/**\n * Provides access to auth state.\n *\n * @returns Auth state.\n */\nexport const useAuth = (): {\n    user: string | null;\n    isAuthentificated: boolean;\n    isReadonly: boolean;\n} => {\n    const user = useAppSelector(selectUserName);\n    const isAuthentificated = useMemo(() => {\n        return !!user;\n    }, [user]);\n    const isReadonly = useMemo(() => {\n        return user === readonlyUser;\n    }, [user]);\n\n    return {\n        user,\n        isAuthentificated,\n        isReadonly,\n    };\n};\n\n/**\n * Returns callback to process login with jwt token.\n *\n * @returns Login callback.\n */\nexport const useLogin = (): ((jwt: string) => void) => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const [searchParams] = useSearchParams();\n    const refUrlParam = searchParams.get(UrlQueryParam.ref);\n\n    const processLogin = useCallback(\n        (jwt: string) => {\n            setItemIntoLocalStorage('jwt', jwt);\n\n            const user = getUserFromJwt(jwt);\n            user && dispatch(UpdateUserName(user));\n\n            const navigateTo = refUrlParam || Path.root;\n            navigate(navigateTo, { replace: true });\n\n            if (user === readonlyUser) {\n                return;\n            }\n\n            notificationActions?.create({\n                title: 'Login success',\n                message: `Successfully login as ${user}`,\n                variant: Variant.success,\n            });\n        },\n        [dispatch, navigate, refUrlParam],\n    );\n\n    return processLogin;\n};\n\n/**\n * Returns callback to logout with existed user.\n *\n * @returns Logout callback.\n */\nexport const useLogout = (): (() => void) => {\n    const dispatch = useDispatch();\n\n    const processLogout = useCallback(() => {\n        dispatch(UpdateUserName(null));\n        removeItemFromLocalStorage('jwt');\n    }, [dispatch]);\n\n    return processLogout;\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { RefObject, useEffect, useState } from 'react';\nimport { createChart, ColorType, IChartApi, DeepPartial, ChartOptions } from 'lightweight-charts';\nimport colors from 'src/styles/export.module.scss';\n\n/**\n * Return type.\n */\ntype UseChartsReturnType = {\n    /**\n     * Chart instance.\n     */\n    chart?: IChartApi;\n};\n\n/**\n * Use chart params.\n */\ntype UseChartParams<T extends HTMLElement> = {\n    ref: RefObject<T>;\n    options?: DeepPartial<ChartOptions>; // Don't forget to memoize options object.\n};\n\n/**\n * Hook to create and manage charts.\n *\n * @param {UseChartParams} params Parameters.\n * @returns Chart.\n */\nexport const useChart = <T extends HTMLElement>({\n    ref,\n    options,\n}: UseChartParams<T>): UseChartsReturnType => {\n    const [chart, setChart] = useState<IChartApi>();\n\n    useEffect(() => {\n        const { current: htmlElement } = ref;\n        if (!htmlElement) {\n            return;\n        }\n\n        const chart = createChart(htmlElement, {\n            width: htmlElement.clientWidth,\n            height: htmlElement.clientHeight,\n            ...chartDefaultOptions,\n        });\n        chart.timeScale().fitContent();\n        setChart(chart);\n\n        const handleResize = () => {\n            chart.applyOptions({ width: htmlElement.clientWidth });\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, [ref]);\n\n    useEffect(() => {\n        chart && options && chart.applyOptions(options);\n    }, [options, chart]);\n\n    useEffect(() => {\n        return () => {\n            chart && chart.remove();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return { chart };\n};\n\n/**\n * Default charts theme.\n */\nconst chartDefaultTheme = {\n    background: colors.baseDarkerColor,\n    fontFamily: 'inherit',\n    layoutTextColor: colors.secondaryDarkerColor,\n    gridLineColor: colors.baseLightColor,\n};\n\n/**\n * Chart constant options.\n */\nconst chartDefaultOptions = {\n    layout: {\n        background: { type: ColorType.Solid, color: chartDefaultTheme.background },\n        fontFamily: chartDefaultTheme.fontFamily,\n        textColor: chartDefaultTheme.layoutTextColor,\n    },\n    grid: {\n        vertLines: { color: chartDefaultTheme.gridLineColor },\n        horzLines: { color: chartDefaultTheme.gridLineColor },\n    },\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useMemo } from 'react';\nimport {\n    CandlestickData,\n    HistogramData,\n    LineData,\n    UTCTimestamp,\n    WhitespaceData,\n} from 'lightweight-charts';\nimport { useSelector } from 'react-redux';\nimport { dequal as deepEqual } from 'dequal';\nimport sum from 'lodash/sum';\nimport { useAppSelector, selectCompletedAsks } from 'src/redux';\nimport { Ask, Bid } from 'src/models';\nimport { getUTCTimestamp } from 'src/utils';\nimport { DateUnit } from 'src/enums';\nimport colors from 'src/styles/export.module.scss';\n\n/**\n * Hook return type.\n */\ntype UseGetCircuitDashboardDataReturnType = {\n    chartData: {\n        candlestickChartData: CandlestickData[];\n        proofGenTimeData: LineData[];\n        volumesData?: Array<WhitespaceData | HistogramData>;\n    };\n    loadingData: boolean;\n};\n\n/**\n * Get data to draw circuit chart.\n *\n * @param [withVolumes] Should calculate volumes data.\n * @param [dataRange] Data range.\n * @returns Data to draw circuit chart.\n */\nexport const useGetCircuitDashboardData = (\n    withVolumes = false,\n    dataRange = DateUnit.day,\n): UseGetCircuitDashboardDataReturnType => {\n    const loadingData = useAppSelector(s => s.circuitsState.isLoading || s.asksState.isLoading);\n    const asks = useSelector(selectCompletedAsks, deepEqual);\n    const grouppedOrders = useMemo(() => {\n        return reduceOrdersByDate(asks, dataRange);\n    }, [asks, dataRange]);\n\n    const chartData = useMemo(\n        () => ({\n            candlestickChartData: getCandlestickData(grouppedOrders),\n            proofGenTimeData: getProofGenTimeData(grouppedOrders),\n            volumesData: withVolumes ? getVolumesData(grouppedOrders) : undefined,\n        }),\n        [grouppedOrders, withVolumes],\n    );\n\n    return { chartData, loadingData };\n};\n\n/**\n * Takes orders array and returns dict, where keys are dates, and values are arrays of orders.\n *\n * @param asks Asks.\n * @param dataRange Data range.\n * @returns Orders, grouped by date.\n */\nconst reduceOrdersByDate = <T extends Bid | Ask>(asks: T[], dataRange: DateUnit) => {\n    return asks.reduce((previousValue: Record<string, T[]>, currentValue: T) => {\n        const date = getUTCTimestamp(currentValue.updatedOn!, dataRange);\n\n        if (!previousValue[date]) previousValue[date] = [];\n\n        previousValue[date].push(currentValue);\n\n        return previousValue;\n    }, {});\n};\n\n/**\n * Creates candleStick data {@link CandlestickData} array from orders, groupped by date.\n *\n * @param ordersGrouppedByDate Orders array.\n * @returns Array of candleStick data.\n */\nconst getCandlestickData = <T extends Bid | Ask>(\n    ordersGrouppedByDate: Record<string, T[]>,\n): CandlestickData[] => {\n    const keys = Object.keys(ordersGrouppedByDate);\n\n    return keys.map((x, index) => {\n        const ordersCosts = ordersGrouppedByDate[x].map(x => x.cost);\n\n        const high = Math.max(...ordersCosts);\n        const low = Math.min(...ordersCosts);\n        const open =\n            index === 0 ? ordersCosts[0] : ordersGrouppedByDate[keys[index - 1]].at(-1)!.cost;\n        const close = ordersCosts[ordersCosts.length - 1];\n\n        return {\n            time: Number(x) as UTCTimestamp,\n            high,\n            low,\n            open,\n            close,\n        };\n    });\n};\n\n/**\n * Creates line data {@link LineData} array from orders, groupped by date.\n *\n * @param ordersGrouppedByDate Orders array.\n * @returns Array of line data.\n */\nconst getProofGenTimeData = <T extends Bid | Ask>(\n    ordersGrouppedByDate: Record<string, T[]>,\n): LineData[] => {\n    return Object.keys(ordersGrouppedByDate).map(x => {\n        const ordersEvalTime = ordersGrouppedByDate[x].map(x => x.eval_time);\n        const averageEvalTime = sum(ordersEvalTime) / ordersEvalTime.length;\n\n        return { time: Number(x) as UTCTimestamp, value: averageEvalTime };\n    });\n};\n\n/**\n * Generates volume data.\n *\n * @param ordersGrouppedByDate Orders array.\n * @returns Volume data.\n */\nconst getVolumesData = <T extends Bid | Ask>(\n    ordersGrouppedByDate: Record<string, T[]>,\n): Array<WhitespaceData | HistogramData> => {\n    const keys = Object.keys(ordersGrouppedByDate);\n\n    return keys.map((x, index) => {\n        const costs = ordersGrouppedByDate[x].map(x => x.cost);\n\n        const open = index === 0 ? costs[0] : ordersGrouppedByDate[keys[index - 1]].at(-1)!.cost;\n        const close = costs[costs.length - 1];\n\n        return {\n            time: Number(x) as UTCTimestamp,\n            value: ordersGrouppedByDate[x].length,\n            color: open < close ? colors.transparentSuccessColor : colors.transparentDangerColor,\n        };\n    });\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useEffect, useState } from 'react';\nimport {\n    IChartApi,\n    BarPrice,\n    BarPrices,\n    LineData,\n    CandlestickData,\n    MouseEventHandler,\n    DeepPartial,\n    CandlestickStyleOptions,\n    SeriesOptionsCommon,\n    LineStyleOptions,\n    Range,\n    SeriesMarker,\n    UTCTimestamp,\n    WhitespaceData,\n    HistogramData,\n    HistogramStyleOptions,\n} from 'lightweight-charts';\nimport { DateUnit } from 'src/enums';\nimport colors from 'src/styles/export.module.scss';\n\n/**\n * Return type.\n */\ntype UseRenderChartDataReturnType = {\n    /**\n     * Current price value (when user hovers chart).\n     */\n    price?: BarPrice | BarPrices;\n};\n\n/**\n * Hook parameters.\n */\ntype UseRenderChartDataProps<T extends 'Line' | 'Candlestick'> = {\n    seriesType: T;\n    seriesData: T extends 'Line' ? LineData[] : CandlestickData[];\n    chart?: IChartApi;\n    options?: DeepPartial<\n        (T extends 'Line' ? LineStyleOptions : CandlestickStyleOptions) & SeriesOptionsCommon\n    >;\n    visibleRange?: DateUnit;\n    markers?: SeriesMarker<UTCTimestamp>[];\n    volumes?: (WhitespaceData | HistogramData)[];\n};\n\n/**\n * Hook to manage rendering chart data.\n *\n * @param {UseRenderChartDataProps} parameters Parameters.\n * @returns Current price.\n */\nexport const useRenderChartData = <T extends 'Line' | 'Candlestick'>({\n    seriesType,\n    seriesData,\n    chart,\n    options,\n    visibleRange,\n    markers,\n    volumes,\n}: UseRenderChartDataProps<T>): UseRenderChartDataReturnType => {\n    const [price, setPrice] = useState<BarPrice | BarPrices>();\n\n    useEffect(() => {\n        if (!chart) {\n            return;\n        }\n\n        const addSeriesMethod =\n            seriesType === 'Line'\n                ? chart.addLineSeries.bind(chart, {\n                      ...seriesDefaultOptions,\n                      ...options,\n                  } as DeepPartial<LineStyleOptions & SeriesOptionsCommon>)\n                : chart.addCandlestickSeries.bind(chart, {\n                      ...seriesDefaultOptions,\n                      ...options,\n                  } as DeepPartial<CandlestickStyleOptions & SeriesOptionsCommon>);\n\n        const series = addSeriesMethod();\n        series.setData(seriesData);\n        markers && series.setMarkers(markers);\n\n        const volumeSeries = chart.addHistogramSeries(volumeSeriesDefaultOptions);\n        volumes && volumeSeries.setData(volumes);\n\n        const crosshairMoveHandler: MouseEventHandler = param => {\n            if (!param.time) {\n                setPrice(undefined);\n                return;\n            }\n\n            const price = param.seriesPrices.get(series);\n            price && setPrice(price);\n        };\n\n        chart.subscribeCrosshairMove(crosshairMoveHandler);\n\n        return () => {\n            chart.removeSeries(series);\n            chart.removeSeries(volumeSeries);\n            chart.unsubscribeCrosshairMove(crosshairMoveHandler);\n            setPrice(undefined);\n        };\n    }, [seriesData, chart, seriesType, options, markers, volumes]);\n\n    useEffect(() => {\n        if (!chart || !seriesData.length) {\n            return;\n        }\n\n        if (!visibleRange) {\n            chart.timeScale().fitContent();\n            return;\n        }\n\n        chart.timeScale().setVisibleLogicalRange(getDataRange(seriesData.length, visibleRange));\n    }, [chart, visibleRange, seriesData]);\n\n    return { price };\n};\n\n/**\n * Series default options.\n */\nconst seriesDefaultOptions: Partial<SeriesOptionsCommon> = {\n    priceFormat: {\n        type: 'price',\n        precision: 4,\n        minMove: 0.0001,\n    },\n};\n\n/**\n * Volume series default options.\n */\nconst volumeSeriesDefaultOptions: DeepPartial<HistogramStyleOptions & SeriesOptionsCommon> = {\n    color: colors.transparentBaseLightColor,\n    priceFormat: {\n        type: 'volume',\n    },\n    priceScaleId: '',\n    scaleMargins: {\n        top: 0.8,\n        bottom: 0,\n    },\n};\n\n/**\n * Creates chart data Range {@link Range} object, subtracting distance from provided right edge date.\n *\n * @param rightEdge Last date in range.\n * @param visibleRange Visible range.\n * @returns Range.\n */\nconst getDataRange = (rightEdge: number, visibleRange: DateUnit): Range<number> => {\n    let distance = 0;\n\n    switch (visibleRange) {\n        case DateUnit.minute:\n            distance = 60;\n            break;\n        case DateUnit.hour:\n            distance = 24;\n            break;\n        case DateUnit.day:\n        case DateUnit.quaterMinute:\n        case DateUnit.halfHour:\n            distance = 30;\n    }\n\n    return {\n        from: rightEdge - distance,\n        to: rightEdge,\n    };\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useMemo, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { SortByFn } from 'react-table';\nimport { dequal as deepEqual } from 'dequal';\nimport sum from 'lodash/sum';\nimport round from 'lodash/round';\nimport {\n    Ask,\n    Bid,\n    CostAndEvalTime,\n    LastOrderData,\n    OrderBookTableColumn,\n    OrderBookTableData,\n} from 'src/models';\nimport {\n    selectBidsList,\n    selectAsksList,\n    useAppSelector,\n    selectCurrentUserAsks,\n    selectCurrentUserBids,\n} from 'src/redux';\nimport { OrderBookPriceStep } from 'src/enums';\n\n/**\n * Hook props.\n */\nexport type UseGetOrderBookDataProps = {\n    priceStep: keyof typeof OrderBookPriceStep;\n    itemsLimit?: number;\n};\n\n/**\n * Hook return type.\n */\nexport type UseGetOrderBookDataReturnType = {\n    columns: OrderBookTableColumn[];\n    data: OrderBookTableData[];\n    loadingData: boolean;\n    isError: boolean;\n    lastOrderData?: LastOrderData;\n    maxVolume: number;\n};\n\n/**\n * Groupped orders map.\n */\ntype GrouppedOrdersMap = Map<string, Array<Bid | Ask>>;\n\n/**\n * Hook to get order book data structured for rendering table.\n *\n * @param {UseGetOrderBookDataProps} props - Orderbook props.\n * @returns Data to render order book table.\n */\nexport const useGetOrderBookData = ({\n    priceStep,\n    itemsLimit = 25,\n}: UseGetOrderBookDataProps): UseGetOrderBookDataReturnType => {\n    const loadingData = useAppSelector(s => s.bidsState.isLoading || s.asksState.isLoading);\n    const asks = useSelector(selectAsksList, deepEqual);\n    const bids = useSelector(selectBidsList, deepEqual);\n    const userAsks = useSelector(selectCurrentUserAsks, deepEqual);\n    const userBids = useSelector(selectCurrentUserBids, deepEqual);\n    const isError = useAppSelector(s => s.asksState.error || s.bidsState.error);\n\n    const lastOrderData: LastOrderData = useMemo(() => getLastOrderData(asks), [asks]);\n\n    const columns = useMemo(\n        (): OrderBookTableColumn[] => [\n            {\n                Header: 'Orders',\n                accessor: 'ordersAmount',\n                disableSortBy: true,\n            },\n            {\n                Header: 'Cost',\n                accessor: 'cost',\n                sortType: customSortFunction,\n                sortDescFirst: true,\n            },\n            {\n                Header: 'Generation time',\n                accessor: 'eval_time',\n                sortType: customSortFunction,\n                sortDescFirst: true,\n            },\n            {\n                accessor: 'type',\n            },\n            {\n                accessor: 'userOrdersAmount',\n            },\n        ],\n        [],\n    );\n\n    /**\n     * Takes orders array and returns dict, where keys are costs, and values are arrays of orders.\n     *\n     * @param previousValue Initial value.\n     * @param currentValue Current value.\n     * @returns Orders, grouped by date.\n     */\n    const reduceOrdersByCostAndEvalTime = useCallback(\n        (previousValue: GrouppedOrdersMap, currentValue: Ask | Bid) => {\n            const precision = OrderBookPriceStep[priceStep];\n            const mapKey = JSON.stringify({\n                cost: round(currentValue.cost, precision),\n                eval_time: currentValue.eval_time\n                    ? round(currentValue.eval_time, precision)\n                    : undefined,\n            });\n\n            const value = previousValue.get(mapKey);\n\n            if (!value) {\n                previousValue.set(mapKey, [currentValue]);\n            } else {\n                previousValue.set(mapKey, [...value, currentValue]);\n            }\n\n            return previousValue;\n        },\n        [priceStep],\n    );\n\n    const asksData = useMemo(() => {\n        return createOrderBookData(\n            asks\n                .filter(x => x.status === 'created')\n                .reduce(reduceOrdersByCostAndEvalTime, new Map()),\n            'ask',\n            userAsks,\n        ).slice(-itemsLimit);\n    }, [asks, userAsks, itemsLimit, reduceOrdersByCostAndEvalTime]);\n\n    const bidsData = useMemo(() => {\n        return createOrderBookData(\n            bids\n                .filter(x => x.status === 'created')\n                .reduce(reduceOrdersByCostAndEvalTime, new Map()),\n            'bid',\n            userBids,\n        ).slice(0, itemsLimit);\n    }, [bids, userBids, itemsLimit, reduceOrdersByCostAndEvalTime]);\n\n    const data = useMemo(\n        (): OrderBookTableData[] => asksData.concat(bidsData),\n        [asksData, bidsData],\n    );\n\n    const maxVolume = useMemo(\n        () =>\n            Math.max(\n                sum(asksData.map(x => x.ordersAmount)) ?? 0,\n                sum(bidsData.map(x => x.ordersAmount)) ?? 0,\n            ),\n        [asksData, bidsData],\n    );\n\n    return { columns, data, loadingData, isError, lastOrderData, maxVolume };\n};\n\n/**\n * Map groupped trade orders to order book data.\n *\n * @param grouppedOrders Trade orders.\n * @param orderType Bid or Ask.\n * @param userOrders - Orders, created by user.\n * @returns Order book data.\n */\nconst createOrderBookData = <T extends Bid | Ask>(\n    grouppedOrders: GrouppedOrdersMap,\n    orderType: 'bid' | 'ask',\n    userOrders: T[],\n): OrderBookTableData[] => {\n    const result: OrderBookTableData[] = [];\n\n    grouppedOrders.forEach((value, key) => {\n        const parsedKey: CostAndEvalTime = JSON.parse(key);\n\n        result.push({\n            cost: parsedKey?.cost,\n            eval_time: parsedKey?.eval_time,\n            ordersAmount: value.length,\n            type: orderType,\n            userOrdersAmount: value.filter(x => userOrders.some(y => y._key === x._key)).length,\n        });\n    });\n\n    return result;\n};\n\n/**\n * Counts current price value and price changing direction.\n *\n * @param currentAsks Current ask list.\n * @see {CurrentPrice}\n * @returns Current price.\n */\nconst getLastOrderData = (currentAsks: Ask[]): LastOrderData => {\n    const completedAsks = currentAsks.filter(x => x.status === 'completed');\n\n    const latestCost = completedAsks.at(-1)?.cost;\n    const prevCost = completedAsks.at(-2)?.cost;\n\n    const getType = () => (latestCost! > prevCost! ? 'grow' : 'loss');\n    const type = latestCost && prevCost ? getType() : undefined;\n\n    return {\n        cost: latestCost,\n        eval_time: completedAsks.at(-1)?.eval_time,\n        type,\n    };\n};\n\n/**\n * Creates react table sort by provided field fucntion.\n *\n * @param firstRow First row.\n * @param  secondRow Second row.\n * @param columnId Sorted column id.\n * @returns Sort function.\n */\nconst customSortFunction: SortByFn<OrderBookTableData> = (firstRow, secondRow, columnId) => {\n    const firstValue = firstRow.values[columnId];\n    const secondValue = secondRow.values[columnId];\n\n    if (firstValue === secondValue) {\n        return 0;\n    }\n\n    return firstValue - secondValue > 0 ? -1 : 1;\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { dequal as deepEqual } from 'dequal';\nimport { useAppSelector, selectCompletedAsks } from 'src/redux';\nimport { Ask, TradeHistoryData, TradeHistoryTableColumn, TradeOrderChange } from 'src/models';\nimport { formatDate } from 'src/utils';\n\n/**\n * UseGetTradeHistoryData hook return type.\n */\nexport type UseGetTradeHistoryDataReturnType = {\n    data: TradeHistoryData[];\n    columns: TradeHistoryTableColumn[];\n    loadingData: boolean;\n    isError: boolean;\n};\n\n/**\n * Get data to render trade history table.\n *\n * @param itemsLimit - Limit items to display.\n * @returns Data to render trade history table.\n */\nexport const useGetTradeHistoryData = (itemsLimit = 25): UseGetTradeHistoryDataReturnType => {\n    const loadingData = useAppSelector(s => s.circuitsState.isLoading || s.asksState.isLoading);\n    const asks = useSelector(selectCompletedAsks, deepEqual);\n    const isError = useAppSelector(s => s.asksState.error || s.bidsState.error);\n\n    const columns = useMemo(\n        (): TradeHistoryTableColumn[] => [\n            {\n                Header: 'Time',\n                accessor: 'timestamp',\n            },\n            {\n                Header: 'Cost',\n                accessor: 'cost',\n                disableSortBy: true,\n            },\n            {\n                Header: 'Generation time',\n                accessor: 'eval_time',\n                disableSortBy: true,\n            },\n            {\n                accessor: 'type',\n            },\n        ],\n        [],\n    );\n\n    const data = useMemo(\n        () => asks.map(mapToTradeHistoryData).slice(-itemsLimit),\n        [asks, itemsLimit],\n    );\n\n    return { data, columns, loadingData, isError };\n};\n\n/**\n * Maps asks list to trade history table data list.\n *\n * @param {Ask} ask - Current ask.\n * @param i Current index.\n * @param asks Asks array.\n * @returns Trade history table data list.\n */\nconst mapToTradeHistoryData = (\n    { matched_time, cost, eval_time }: Ask,\n    i: number,\n    asks: Ask[],\n): TradeHistoryData => ({\n    timestamp: formatDate(matched_time!, 'DD.MM HH:mm'),\n    cost,\n    eval_time,\n    type: i !== 0 ? getType(asks.at(i - 1)!.cost, cost) : undefined,\n});\n\n/**\n * Returns trade order change type.\n *\n * @param costA Prev cost.\n * @param costB Current cost.\n * @returns Trade order type.\n */\nconst getType = (costA: number, costB: number): TradeOrderChange => {\n    if (costA === costB) {\n        return undefined;\n    }\n\n    return costA > costB ? 'loss' : 'grow';\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { dequal as deepEqual } from 'dequal';\nimport {\n    useAppSelector,\n    selectCurrentUserCreatedBids,\n    selectCurrentUserCompletedBids,\n    selectCurrentUserActiveAsks,\n    selectCurrentUserCompletedAsks,\n} from 'src/redux';\nimport { Ask, Bid, ManageOrdersData, TradeOrderType } from 'src/models';\nimport { formatDate } from 'src/utils';\n\n/**\n * UseGetManageOrdersData hook return type.\n */\nexport type UseGetManageOrdersDataReturnType = {\n    loadingData: boolean;\n    isError: boolean;\n    activeOrdersData: ManageOrdersData[];\n    historyOrdersData: ManageOrdersData[];\n};\n\n/**\n * Get data to render manage orders panel.\n *\n * @returns Data to render manage orders panel.\n */\nexport const useGetManageOrdersData = (): UseGetManageOrdersDataReturnType => {\n    const loadingData = useAppSelector(s => s.bidsState.isLoading || s.asksState.isLoading);\n    const createdBids = useSelector(selectCurrentUserCreatedBids, deepEqual);\n    const completedBids = useSelector(selectCurrentUserCompletedBids, deepEqual);\n    const createdAsks = useSelector(selectCurrentUserActiveAsks, deepEqual);\n    const completedAsks = useSelector(selectCurrentUserCompletedAsks, deepEqual);\n    const isError = useAppSelector(s => s.asksState.error || s.bidsState.error);\n\n    const activeOrdersData = useMemo(() => {\n        const mappedAsks = createdAsks.map(x => mapToManageOrdersData(x, TradeOrderType.sell));\n        const mappedBids = createdBids.map(x => mapToManageOrdersData(x, TradeOrderType.buy));\n\n        return [...mappedAsks, ...mappedBids];\n    }, [createdAsks, createdBids]);\n\n    const historyOrdersData = useMemo(() => {\n        const mappedAsks = completedAsks.map(x => mapToManageOrdersData(x, TradeOrderType.sell));\n        const mappedBids = completedBids.map(x => mapToManageOrdersData(x, TradeOrderType.buy));\n\n        return [...mappedAsks, ...mappedBids];\n    }, [completedAsks, completedBids]);\n\n    return { loadingData, isError, activeOrdersData, historyOrdersData };\n};\n\n/**\n * Maps trade orders list to manage orders table data list.\n *\n * @param {Ask | Bid} order - Current order.\n * @param type Type.\n * @returns Manage orders table data list.\n */\nconst mapToManageOrdersData = <T extends Ask | Bid>(\n    { createdOn, matched_time, cost, eval_time, _key, status }: T,\n    type: TradeOrderType,\n): ManageOrdersData => ({\n    init_time: formatDate(createdOn, 'DD.MM HH:mm'),\n    timestamp: formatDate(matched_time!, 'DD.MM HH:mm'),\n    cost,\n    eval_time,\n    type,\n    orderId: _key,\n    status,\n});\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { selectCurrentCircuitId, UpdateSelectedCircuitId, useAppSelector } from 'src/redux';\nimport { RouterParam } from 'src/enums';\n\n/**\n * Hook to manage selected circuit id state.\n */\nexport const useSelectedCircuitId = (): void => {\n    const selectedCircuitId = useAppSelector(selectCurrentCircuitId);\n    const circuitId = useParams()[RouterParam.circuitId];\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (selectedCircuitId === circuitId) {\n            return;\n        }\n\n        if (circuitId !== undefined) {\n            dispatch(UpdateSelectedCircuitId(circuitId));\n            return;\n        }\n\n        selectedCircuitId !== undefined && navigate(`${selectedCircuitId}`);\n    }, [circuitId, dispatch, selectedCircuitId, navigate]);\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { selectSelectedProofId, UpdateSelectedProofId, useAppSelector } from 'src/redux';\nimport { RouterParam } from 'src/enums';\n\n/**\n * Hook to manage selected proof id state.\n */\nexport const useSelectedProofId = (): void => {\n    const dispatch = useDispatch();\n    const selectedProofId = useAppSelector(selectSelectedProofId);\n    const proofId = useParams()[RouterParam.proofId];\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        if (selectedProofId === proofId) {\n            return;\n        }\n\n        if (proofId !== undefined) {\n            dispatch(UpdateSelectedProofId(proofId));\n            return;\n        }\n\n        selectedProofId !== undefined && navigate(`${selectedProofId}`);\n    }, [proofId, dispatch, selectedProofId, navigate]);\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useCallback, useState } from 'react';\n\n/**\n * Hook params.\n */\ntype UseDownloadJsonParams<T extends Record<string, unknown>> = {\n    fileName: string;\n    source?: T;\n    fetcher?: () => Promise<T>;\n};\n\n/**\n * Hook return type.\n */\ntype UseDownloadJsonReturnType = {\n    downloadJson: () => void;\n    loading: boolean;\n};\n\n/**\n * Hook to download data as json.\n *\n * @param {UseDownloadJsonParams} params Hook params.\n * @returns Callback to download data as json file and loading data state.\n */\nexport const useDownloadJson = <T extends Record<string, unknown>>({\n    fileName,\n    source,\n    fetcher,\n}: UseDownloadJsonParams<T>): UseDownloadJsonReturnType => {\n    const [loading, setLoading] = useState(false);\n\n    const downloadJson = useCallback(async () => {\n        switch (true) {\n            case !!source: {\n                processDownload(fileName, source!);\n                return;\n            }\n            case !!fetcher: {\n                setLoading(true);\n                const remoteData = await fetcher!();\n                processDownload(fileName, remoteData);\n                setLoading(false);\n                return;\n            }\n        }\n    }, [source, fileName, setLoading, fetcher]);\n\n    return { downloadJson, loading };\n};\n\n/**\n * Creates invisible anchor element to process downloading.\n *\n * @param fileName Name of file to save.\n * @param data Data.\n */\nconst processDownload = <T extends Record<string, unknown>>(fileName: string, data: T) => {\n    const a = document.createElement('a');\n\n    a.download = `${fileName}.json`;\n    a.href = window.URL.createObjectURL(new Blob([JSON.stringify(data)], { type: 'text/json' }));\n\n    const clickEvt = new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true,\n    });\n\n    a.dispatchEvent(clickEvt);\n    a.remove();\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n *\n * Credits to https://usehooks.com/useLocalStorage/\n */\n\nimport { useCallback, useState } from 'react';\nimport { dequal as deepEqual } from 'dequal';\nimport { getItemFromLocalStorage, setItemIntoLocalStorage } from 'src/packages/LocalStorage';\n\n/**\n * Hook to use localStorage in a useState() hook way.\n *\n * @param key LocalStorage key.\n * @param initialValue Inital value. Used when localStorage is empty.\n * @returns Persisited state.\n */\nexport const useLocalStorage = <T extends unknown>(\n    key: string,\n    initialValue: T,\n): [T, (value: T) => void] => {\n    const [storedValue, setStoredValue] = useState<T>(\n        () => getItemFromLocalStorage(key) || initialValue,\n    );\n\n    const setValue = useCallback(\n        (value: T) => {\n            if (deepEqual(storedValue, value)) {\n                return;\n            }\n\n            setStoredValue(value);\n            setItemIntoLocalStorage(key, value);\n        },\n        [key, storedValue],\n    );\n\n    return [storedValue, setValue];\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useEffect, useState } from 'react';\n\n/**\n * Hook to use debounce inside react component.\n * Debounces set state, preventing unnecessary rerender.\n *\n * @param value Value.\n * @param delay Delay.\n * @returns Debounced value.\n */\nexport const useDebounce = <T extends unknown>(value: T, delay: number): T => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value, delay]);\n\n    return debouncedValue;\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useCallback } from 'react';\nimport { dequal as deepEqual } from 'dequal';\nimport { TableState } from 'react-table';\nimport { useLocalStorage } from '../useLocalStorage';\n\n/**\n * Partial table state.\n */\ntype PartalState<T extends Record<string, unknown>> = Partial<TableState<T>>;\n\n/**\n * Hook to keep persisited react-table state between data updates.\n *\n * @param name Table name.\n * @param [defaultState] Default table state.\n * @returns Table state handlers.\n * InitialState is taken from localStorage and can be rewrited with setInitialState.\n */\nexport const useInitialTableState = <T extends Record<string, unknown>>(\n    name: string,\n    defaultState: PartalState<T> = {},\n): [PartalState<T>, (newState: PartalState<T>) => void] => {\n    const [initialState, setInitialState] = useLocalStorage(name, defaultState);\n\n    const setNewState = useCallback(\n        (input: PartalState<T>) => {\n            const { sortBy, filters, hiddenColumns, columnOrder, groupBy } = input;\n            setInitialState({\n                columnOrder,\n                filters,\n                hiddenColumns,\n                sortBy,\n                groupBy,\n            });\n        },\n        [setInitialState],\n    );\n\n    const value = deepEqual(initialState, defaultState) ? defaultState : initialState;\n\n    return [value, setNewState];\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"socialLinks\":\"SocialLinks_socialLinks__j4XIK\",\"bottomIndent\":\"SocialLinks_bottomIndent__2OAp6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"MobileMenu_menu__3eb25\",\"button\":\"MobileMenu_button__2Cjo_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Details_title__7XfVG\",\"bottomIndent\":\"Details_bottomIndent__1rV3q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewer\":\"ObjectAsPlainTextViewer_viewer__1Sq3u\",\"item\":\"ObjectAsPlainTextViewer_item__1Ao-_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chartLegend\":\"ChartLegend_chartLegend__3J6ik\",\"chartName\":\"ChartLegend_chartName__12Pfj\"};","/**\n * @file Utility function.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport jwt_decode from 'jwt-decode';\n\n/**\n * Parse jwt to get username.\n *\n * @param jwt - Jwt.\n * @throws Will throw an error if can't get user from token.\n * @returns Username or null.\n */\nexport const getUserFromJwt = (jwt: string): string => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const decoded: any = jwt_decode(jwt);\n\n    if (!decoded || !decoded.preferred_username) {\n        throw new Error('Invalid token!');\n    }\n\n    return decoded.preferred_username as string;\n};\n","/**\n * @file Utility function.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport dayjs from 'dayjs';\n\n/**\n * Format UTCTimestamp.\n *\n * @param timestamp - Timestamp.\n * @param format Format.\n * @returns Formatted timestamp string.\n */\nexport const formatUTCTimestamp = (timestamp: number, format: string): string =>\n    dayjs(timestamp * 1000).format(format);\n","/**\n * @file Utility function.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { DateUnit } from 'src/enums';\n\n/**\n * Round date string to provided time value. Always rounds down.\n *\n * @param dateString Date string.\n * @param floorTo Round date to.\n * @returns Date.\n */\nexport const floorDateTo = (dateString: string, floorTo: DateUnit): Date => {\n    const date = new Date(dateString);\n\n    switch (floorTo) {\n        case DateUnit.minute:\n            date.setSeconds(0, 0);\n            break;\n        case DateUnit.quaterMinute:\n            floorToQuaterMinute(date);\n            break;\n        case DateUnit.halfHour:\n            date.setMinutes(date.getMinutes() >= 30 ? 30 : 0, 0, 0);\n            break;\n        case DateUnit.hour:\n            date.setMinutes(0, 0, 0);\n            break;\n        case DateUnit.day:\n            date.setHours(0, 0, 0, 0);\n            break;\n    }\n\n    return date;\n};\n\nconst floorToQuaterMinute = (date: Date): void => {\n    const minutes = date.getMinutes();\n    let minutesToSet = 0;\n\n    if (minutes >= 15 && minutes < 30) {\n        minutesToSet = 15;\n    }\n\n    if (minutes >= 30 && minutes < 45) {\n        minutesToSet = 30;\n    }\n\n    if (minutes >= 45) {\n        minutesToSet = 45;\n    }\n\n    date.setMinutes(minutesToSet, 0, 0);\n};\n","/**\n * @file Utility function.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { UTCTimestamp } from 'lightweight-charts';\nimport { DateUnit } from 'src/enums';\nimport { floorDateTo } from './floorDateTo';\n\n/**\n * Get UTCTimestamp from date string.\n *\n * @param dateString - Date string.\n * @param floorTo - Date unit floor to.\n * @returns UTCTimestamp.\n */\nexport const getUTCTimestamp = (dateString: string, floorTo?: DateUnit): UTCTimestamp => {\n    const date = floorTo ? floorDateTo(dateString, floorTo) : new Date(dateString);\n\n    return Math.trunc(date.getTime() / 1000) as UTCTimestamp;\n};\n","/**\n * @file Utility function.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport dayjs from 'dayjs';\n\n/**\n * Formats date string.\n *\n * @param dateString - Date string.\n * @param format - Format.\n * @returns Formatted date string representation.\n */\nexport const formatDate = (dateString: string, format: string): string =>\n    dayjs(dateString).format(format);\n","/**\n * @file Utility function.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Drops all nullable values from array in a type safe manner.\n *\n * @param value Any value.\n * @returns True if value is not nullable.\n */\nexport const notEmpty = <T>(value: T): value is NonNullable<T> => {\n    return value !== null && value !== undefined;\n};\n","/**\n * @file Symbol.\n * @copyright Yury Korotovskikh <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Long dash HTML symbol.\n */\nexport const longDash = '—';\n","/**\n * @file Utility function.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { longDash } from './longDashSymbol';\n\n/**\n * Renders value or long dash symbol if value is empty.\n *\n * @param value Numeric value.\n * @param [fractionDigits] Number of digits after the value decimal point.\n * @returns Value or long dash symbol.\n */\nexport const renderDashOnEmptyValue = (value?: number | null, fractionDigits = 4): string =>\n    value ? value?.toFixed(fractionDigits) : longDash;\n","/**\n * @file Regexp.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Regexp to validate emails.\n */\nexport const emailRegExp = /^(.+)@(.+)\\.(.{2,})$/i;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__PzL7i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authCard\":\"AuthCard_authCard__aQdMN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProtectedContent_container__w-v9m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboardCard\":\"DashboardCard_dashboardCard__fXvxj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sortableColumnHeader\":\"ReactTable_sortableColumnHeader__1IJqY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullScreenView\":\"FullScreenView_fullScreenView__3q9rV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClicableIcon_button__qhkwu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Overlay_overlay__3RcD2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"priceChangeIndicator\":\"PriceChangeIndicator_priceChangeIndicator__1WYpS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"#776475\",\"dangerColor\":\"#f44336\",\"successColor\":\"#57965a\",\"baseColor\":\"#222\",\"infoColor\":\"#2677f0\",\"baseDarkerColor\":\"#151515\",\"baseLightColor\":\"#3c3c3c\",\"secondaryColor\":\"#f5f2f1\",\"secondaryDarkerColor\":\"#d3d3d3\",\"transparentSuccessColor\":\"rgba(87,150,90,.3)\",\"transparentDangerColor\":\"rgba(244,67,54,.3)\",\"transparentBaseLightColor\":\"rgba(60,60,60,.4)\"};","/**\n * @file Enum declaration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Paths.\n */\nexport enum Path {\n    root = '/',\n    any = '*',\n    login = '/login',\n    portfolio = '/portfolio',\n    register = '/register',\n    market = '/market',\n}\n","/**\n * @file React functional component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useCallback } from 'react';\nimport { Navigate, Outlet, useLocation } from 'react-router-dom';\nimport { Path } from 'src/routing';\nimport { useAuth } from 'src/hooks';\nimport { UrlQueryParam } from 'src/enums';\n\n/**\n * Props.\n */\ntype ProtectedRouteProps = {\n    readonlyAccess?: boolean;\n    redirectPath?: Path;\n};\n\n/**\n * Component to restrict non-authorized users access.\n *\n * @param {ProtectedRouteProps} props - Props.\n * @returns React component.\n */\nconst ProtectedRoute = ({\n    readonlyAccess = false,\n    redirectPath = Path.login,\n}: ProtectedRouteProps): ReactElement => {\n    const { isAuthentificated, isReadonly } = useAuth();\n    const { pathname } = useLocation();\n\n    const getNavigateTo = useCallback(\n        () => `${redirectPath}/?${UrlQueryParam.ref}=${pathname}`,\n        [pathname, redirectPath],\n    );\n\n    return (\n        <>\n            {isAuthentificated && (readonlyAccess ? true : !isReadonly) ? (\n                <Outlet />\n            ) : (\n                <Navigate\n                    replace\n                    to={getNavigateTo()}\n                />\n            )}\n        </>\n    );\n};\n\nexport default ProtectedRoute;\n","/**\n * @file App.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { AuthContainer } from 'src/components';\n\n/**\n * Auth layout.\n *\n * @returns React element.\n */\nconst AuthLayout = (): ReactElement => {\n    return (\n        <AuthContainer>\n            <Outlet />\n        </AuthContainer>\n    );\n};\n\nexport default AuthLayout;\n","/**\n * @file App.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Layout, Spinner } from '@nilfoundation/react-components';\nimport { Outlet } from 'react-router-dom';\nimport { Header, Footer, ReadonlyAccessProvider } from '../components';\n\n/**\n * Main app layout.\n *\n * @returns React element.\n */\nconst MainLayout = (): ReactElement => {\n    return (\n        <Layout\n            header={<Header />}\n            footer={<Footer />}\n            stickyHeader\n        >\n            <ReadonlyAccessProvider fallback={<Spinner grow />}>\n                <Outlet />\n            </ReadonlyAccessProvider>\n        </Layout>\n    );\n};\n\nexport default MainLayout;\n","/**\n * @file React routing.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { lazy } from 'react';\nimport { Navigate, RouteObject } from 'react-router-dom';\nimport { RouterParam } from 'src/enums';\nimport ProtectedRoute from 'src/components/login/ProtectedRoute/ProtectedRoute';\nimport { Path } from './Paths';\nimport AuthLayout from '../layouts/AuthLayout';\nimport MainLayout from '../layouts/MainLayout';\n\nconst MarketView = lazy(() => import('../views/MarketView'));\nconst LoginView = lazy(() => import('../views/LoginView'));\nconst PortfolioView = lazy(() => import('../views/PortfolioView'));\nconst Page404 = lazy(() => import('../views/404'));\nconst RegisterView = lazy(() => import('../views/RegisterView'));\n\n/**\n * App routes.\n */\nexport const routesConfig: RouteObject[] = [\n    {\n        path: Path.root,\n        element: (\n            <Navigate\n                to={Path.market}\n                replace\n            />\n        ),\n    },\n    {\n        element: <AuthLayout />,\n        children: [\n            {\n                path: Path.login,\n                element: <LoginView />,\n            },\n            {\n                path: Path.register,\n                element: <RegisterView />,\n            },\n        ],\n    },\n    {\n        element: <MainLayout />,\n        children: [\n            {\n                element: <ProtectedRoute readonlyAccess />,\n                children: [\n                    {\n                        path: Path.market,\n                        element: <MarketView />,\n                        children: [\n                            {\n                                path: `:${RouterParam.circuitId}`,\n                                element: <MarketView />,\n                            },\n                        ],\n                    },\n                ],\n            },\n            {\n                element: <ProtectedRoute />,\n                children: [\n                    {\n                        path: Path.portfolio,\n                        element: <PortfolioView />,\n                        children: [\n                            {\n                                path: `:${RouterParam.proofId}`,\n                                element: <PortfolioView />,\n                            },\n                        ],\n                    },\n                ],\n            },\n            {\n                path: Path.any, // This should always be the last\n                element: <Page404 />,\n            },\n        ],\n    },\n];\n","/**\n * @file React routing.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useRoutes } from 'react-router-dom';\nimport { routesConfig } from './routesConfig';\n\n/**\n * Returns React element you can use to render the route tree.\n *\n * @returns Routes.\n */\nexport const Router = (): ReturnType<typeof useRoutes> => {\n    const routes = useRoutes(routesConfig);\n\n    return routes;\n};\n","/**\n * @file Api.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createBearerHttpClient } from '../common';\nimport { LoginData, LoginDto } from '../../models';\n\nconst httpFetcher = createBearerHttpClient();\nconst databaseUrl = `_db/${process.env.REACT_APP_DBMS_DEFAULT_DATABASE}`;\n\n/**\n * Login.\n *\n * @param loginData - Login data.\n * @returns .\n */\nexport const login = (loginData: LoginData): Promise<LoginDto> =>\n    httpFetcher.post<LoginDto, LoginData>(`${databaseUrl}/_open/auth`, loginData);\n\n/**\n * Renew jtw tocken.\n *\n * @deprecated\n * @returns .\n */\nexport const renewJwt = (): Promise<LoginDto> =>\n    httpFetcher.post<LoginDto>(`${databaseUrl}/_open/auth/renew`);\n","/**\n * @file Api.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createBearerHttpClient } from '../common';\n\nconst db = process.env.REACT_APP_DBMS_DEFAULT_DATABASE;\nconst apiUrl = `_db/${db}/${db}/user/`;\nconst httpFetcher = createBearerHttpClient(apiUrl);\n\n/**\n * Get user balance.\n *\n * @param user - User to get balance.\n * @returns .\n */\nexport const getUserBalance = (user: string): Promise<number | undefined> =>\n    httpFetcher.get(`${user}/balance`);\n","/**\n * @file Api.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { Circuit, CircuitInfo, CircuitStats } from 'src/models';\nimport { createBearerHttpClient } from '../common';\n\nconst dbName = process.env.REACT_APP_DBMS_DEFAULT_DATABASE;\n\nconst apiUrl = `_db/${dbName}/${dbName}`;\nconst httpFetcher = createBearerHttpClient(apiUrl);\n\n/**\n * Get circuits.\n *\n * @returns Circuit list.\n */\nexport const getCircuits = (): Promise<Circuit> => httpFetcher.get('/statement');\n\n/**\n * Get circuits info.\n *\n * @returns .\n */\nexport const getCircuitsInfo = (): Promise<CircuitInfo> => httpFetcher.get(`/statement/?info`);\n\n/**\n * Get circuits stats.\n *\n * @returns .\n */\nexport const getCircuitsStats = (): Promise<CircuitStats> =>\n    httpFetcher.get(`/statement/?statistics`);\n","/**\n * @file Api.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { Proof } from '../../models';\nimport { createBearerHttpClient } from '../common';\n\nconst databaseUrl = `_db/${process.env.REACT_APP_DBMS_DEFAULT_DATABASE}`;\nconst apiUrl = `${databaseUrl}/_api/`;\nconst httpFetcher = createBearerHttpClient(apiUrl);\n\n/**\n * Get proofs.\n *\n * @param currentUser Current user.\n * @returns Proofs.\n */\nexport const getProofs = (currentUser: string): Promise<Proof> =>\n    httpFetcher\n        .post('cursor', {\n            query: `\n                FOR x IN @@relation\n                    RETURN UNSET(x, 'proof')\n            `,\n            bindVars: {\n                '@relation': 'proof',\n            },\n        })\n        .then((x: any) => x.result);\n\n/**\n * Get proof by its id.\n *\n * @param proofId Proof id.\n * @returns Proofs.\n */\nexport const getProofById = (proofId: string): Promise<Proof> =>\n    httpFetcher\n        .post('cursor', {\n            query: `\n                FOR x IN @@relation\n                    FILTER x.id == '${proofId}'\n                    RETURN x\n            `,\n            bindVars: {\n                '@relation': 'proof',\n            },\n        })\n        .then((x: any) => x.result);\n","/**\n * @file Enum declaration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Trade order type.\n */\nexport enum TradeOrderType {\n    buy = 'BUY',\n    sell = 'SELL',\n}\n","/**\n * @file Http client.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\n\n/**\n * Http client.\n *\n * @class HttpClient\n */\nexport class HttpClient {\n    protected readonly client: AxiosInstance;\n\n    /**\n     * Constructor.\n     *\n     * @param requestConfig - Config.\n     * @param configureClient - Configuration callback.\n     */\n    constructor(\n        requestConfig?: AxiosRequestConfig,\n        configureClient?: (client: AxiosInstance) => void,\n    ) {\n        this.client = axios.create(requestConfig);\n        configureClient && configureClient(this.client);\n    }\n\n    /**\n     * GET.\n     *\n     * @param url - Url.\n     * @param config - Config.\n     * @memberof HttpClient\n     */\n    public async get<TResponse>(url: string, config?: AxiosRequestConfig): Promise<TResponse> {\n        const response = await this.client.get<TResponse>(url, config);\n        return response.data;\n    }\n\n    /**\n     * POST.\n     *\n     * @param url - Url.\n     * @param data - Data.\n     * @param config - Config.\n     * @memberof HttpClient\n     */\n    public async post<TResponse, TRequest = undefined>(\n        url: string,\n        data?: TRequest,\n        config?: AxiosRequestConfig,\n    ): Promise<TResponse> {\n        const response = await this.client.post<TResponse>(url, data, config);\n        return response.data;\n    }\n\n    /**\n     * PUT.\n     *\n     * @param url - Url.\n     * @param payload - Payload.\n     * @param config - Config.\n     * @memberof HttpClient\n     */\n    public async put<TResponse, TRequest = undefined>(\n        url: string,\n        payload?: TRequest,\n        config?: AxiosRequestConfig,\n    ): Promise<TResponse> {\n        const response = await this.client.put(url, payload, config);\n        return response.data;\n    }\n\n    /**\n     * DELETE.\n     *\n     * @param url - Url.\n     * @param config - Config.\n     * @memberof HttpClient\n     */\n    public async delete<TResponse>(url: string, config?: AxiosRequestConfig): Promise<TResponse> {\n        const response = await this.client.delete(url, config);\n        return response.data;\n    }\n}\n","/**\n * @file Bearer http client.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { AxiosRequestConfig } from 'axios';\nimport { HttpClient } from './HttpClient';\nimport { getItemFromLocalStorage } from '../../packages/LocalStorage';\n\nconst { REACT_APP_BASE_API_URL } = process.env;\n\n/**\n * Creates HTTP client with authorization.\n *\n * @param baseUrl - Base api url.\n * @param withCredentials - Include credentials.\n * @param injectToken - Should inject token.\n * @returns Bearer http client.\n */\nexport const createBearerHttpClient = (\n    baseUrl?: string,\n    withCredentials?: boolean,\n    injectToken = true,\n): HttpClient =>\n    new HttpClient(\n        {\n            baseURL: baseUrl ? `${REACT_APP_BASE_API_URL}/${baseUrl}` : `${REACT_APP_BASE_API_URL}`,\n            withCredentials,\n        },\n        injectToken ? client => client.interceptors.request.use(injectJwtToken) : undefined,\n    );\n\nconst getJwtToken = (): string | undefined => {\n    const tokenStorageKey = 'jwt';\n    return getItemFromLocalStorage<string>(tokenStorageKey);\n};\n\nconst injectJwtToken = (config: AxiosRequestConfig): AxiosRequestConfig => {\n    const jwtToken = getJwtToken();\n    if (jwtToken && config.headers) {\n        config.headers.Authorization = `Bearer ${jwtToken}`;\n    }\n    return config;\n};\n","/**\n * @file Constant data.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nexport const socialLinks = [\n    {\n        icon: 'twitter',\n        url: 'https://twitter.com/nil_foundation',\n    },\n    {\n        icon: 'linkedin',\n        url: 'https://www.linkedin.com/company/nil-foundation',\n    },\n    {\n        icon: 'github',\n        url: 'http://github.com/nilfoundation',\n    },\n    {\n        icon: 'telegram',\n        url: 'https://t.me/nilfoundation',\n    },\n    {\n        icon: 'discord',\n        url: 'https://discord.gg/KmTAEjbmM3',\n    },\n];\n","/**\n * @file Constant data.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { Path } from 'src/routing';\n\n/**\n * App navigation links.\n */\nexport const navigationLinks = [\n    {\n        title: 'Market',\n        path: Path.market,\n    },\n    {\n        title: 'Portfolio',\n        path: Path.portfolio,\n    },\n];\n","/**\n * @file Constant data.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport colors from 'src/styles/export.module.scss';\n\n/**\n * Json viewer custom theme.\n */\nexport const jsonViewerTheme = {\n    base00: 'transparent', // background\n    base01: colors.secondaryDarkerColor,\n    base02: colors.baseLightColor, // left vertical bar color\n    base03: colors.secondaryDarkerColor,\n    base04: colors.primaryColor, // helpers text color\n    base05: colors.secondaryDarkerColor,\n    base06: colors.secondaryDarkerColor,\n    base07: colors.secondaryDarkerColor,\n    base08: colors.secondaryDarkerColor,\n    base09: colors.secondaryDarkerColor,\n    base0A: colors.secondaryColor,\n    base0B: colors.secondaryColor,\n    base0C: colors.secondaryColor,\n    base0D: colors.primaryColor,\n    base0E: colors.primaryColor,\n    base0F: colors.secondaryDarkerColor, // copy icons color\n};\n","/**\n * @file Constant data.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Main site url.\n */\nexport const mainSiteAddress = 'https://nil.foundation';\n","/**\n * @file Polyfills entrypoint.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport 'react-app-polyfill/ie11';\n/**\n * Injects core-js polyfills into bundle to provide old browsers support.\n *\n * @see {@link https://stackoverflow.com/questions/73194573/why-does-babel-in-create-react-app-not-polyfill-array-prototype-at-properly}.\n */\n// eslint-disable-next-line\nconst r = require('core-js/stable');\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Container, Row, Col } from '@nilfoundation/react-components';\nimport { mainSiteAddress } from 'src/constants';\n\n/**\n * App Error view.\n *\n * @returns React component.\n */\nconst ErrorView = (): ReactElement => (\n    <Container\n        as=\"main\"\n        fluid\n    >\n        <Row>\n            <Col\n                xs={12}\n                className=\"text-center\"\n            >\n                <h4>Sorry, unknown error occured.</h4>\n                <p className=\"text-muted\">\n                    Please, try to reload page or leave message to support.\n                </p>\n                <p>\n                    <a href={mainSiteAddress}>{mainSiteAddress}</a>\n                </p>\n            </Col>\n        </Row>\n    </Container>\n);\n\nexport default ErrorView;\n","/**\n * @file App.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, Suspense } from 'react';\nimport { NotificationProvider, Spinner } from '@nilfoundation/react-components';\nimport { ErrorBoundary, withProfiler } from '@sentry/react';\nimport { Helmet } from 'react-helmet-async';\nimport { GALocationTracker, NetConnectionHandler } from './components';\nimport { Router } from './routing';\nimport ErrorView from './views/ErrorView';\n\nconst baseDocumentTitle = process.env.REACT_APP_SITE_DEFAULT_TITLE;\n\n/**\n * @returns App.\n */\nfunction App(): ReactElement {\n    return (\n        <ErrorBoundary fallback={<ErrorView />}>\n            <NotificationProvider>\n                <Helmet\n                    titleTemplate={`${baseDocumentTitle} | %s`}\n                    defaultTitle={baseDocumentTitle}\n                />\n                <NetConnectionHandler>\n                    <Suspense fallback={<Spinner grow />}>\n                        <Router />\n                    </Suspense>\n                </NetConnectionHandler>\n            </NotificationProvider>\n            <GALocationTracker />\n        </ErrorBoundary>\n    );\n}\n\nexport default withProfiler(App);\n","/**\n * @file Env variables checker.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nconst requiredEnv = [\n    process.env.REACT_APP_BASE_API_URL,\n    process.env.REACT_APP_DBMS_DEFAULT_DATABASE,\n    process.env.REACT_APP_READONLY_USER,\n    process.env.REACT_APP_FORMSPREE_FORM_ID,\n    process.env.REACT_APP_SITE_DEFAULT_TITLE,\n];\n\n/**\n * Checks env variables definition.\n *\n * @throws An error if any required env is not defined.\n * @returns .\n */\nexport const checkEnvVariablesAreDefined = (): void =>\n    requiredEnv.forEach(x => {\n        if (!x) {\n            throw new Error(\n                'All required environment variables should be defined before running this app',\n            );\n        }\n    });\n","/**\n * @file Google analytics setup.\n * @copyright Yury Korotovskikh 2023 <u.korotovskiy@nil.foundation>\n */\n\nimport ReactGa from 'react-ga4';\n\n/**\n * Ga initialize options.\n */\nconst gaInitOptions = {\n    testMode: process.env.NODE_ENV !== 'production',\n};\n\n/**\n * Configures ga for the app. Should be called before any other tracking functions will record any data.\n */\nexport default function configureGA(): void {\n    const measurementId = process.env.REACT_APP_GA_TRACKING_ID;\n\n    if (!measurementId) {\n        return;\n    }\n\n    ReactGa.initialize(measurementId, gaInitOptions);\n}\n","/**\n * @file Web vitals.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReportHandler } from 'web-vitals';\n\n// eslint-disable-next-line jsdoc/require-jsdoc\nexport const reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n","/**\n * @file Sentry configuration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport * as Sentry from '@sentry/react';\nimport { BrowserTracing } from '@sentry/tracing';\n\n/**\n * Configures sentry for app.\n *\n * @see {@link https://docs.sentry.io/platforms/javascript/guides/react/}\n */\nexport const configureSentry = (): void => {\n    if (process.env.NODE_ENV !== 'production') {\n        return;\n    }\n\n    const dsn = process.env.REACT_APP_SENTRY_DSN;\n\n    if (!dsn) {\n        return;\n    }\n\n    Sentry.init({\n        dsn,\n        integrations: [new BrowserTracing()],\n        tracesSampleRate: 0.2,\n    });\n};\n","/**\n * @file Root index.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n// eslint-disable-next-line import/order\nimport './polyfills';\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\n// TODO - replace HashRouter with BrowserRouter after migrating from gh pages\nimport { HashRouter } from 'react-router-dom';\nimport { HelmetProvider } from 'react-helmet-async';\nimport App from './App';\nimport { store } from './redux';\nimport { configureSentry } from './sentry';\nimport { reportWebVitals } from './reportWebVitals';\nimport { checkEnvVariablesAreDefined } from './checkEnv';\nimport configureGA from './ga';\nimport './index.scss';\n\ncheckEnvVariablesAreDefined();\nconfigureSentry();\nconfigureGA();\n\nrender(\n    <React.StrictMode>\n        <HelmetProvider>\n            <Provider store={store}>\n                <HashRouter>\n                    <App />\n                </HashRouter>\n            </Provider>\n        </HelmetProvider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\nreportWebVitals();\n","/**\n * @file Selectors.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { UserBalance } from 'src/models';\nimport { RootStateType } from 'src/redux';\n\n/**\n * Select current user name.\n *\n * @param s State.\n * @returns User name.\n */\nexport const selectUserName = (s: RootStateType): string | null => s.userState.name;\n\n/**\n * Select current user balance.\n *\n * @param s State.\n * @returns User balance.\n */\nexport const selectUserBalance = (s: RootStateType): UserBalance | undefined => s.userState.balance;\n","/**\n * @file Redux action creators.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createAction } from '@reduxjs/toolkit';\nimport { UserBalance } from 'src/models';\n\n/**\n * Update current user name.\n */\nexport const UpdateUserName = createAction<string | null>('@user/UPDATE_NAME');\n\n/**\n * Update current user balance.\n */\nexport const UpdateUserBalance = createAction<UserBalance | undefined>('@user/UPDATE_BALANCE');\n\n/**\n * Update user balance loading status.\n */\nexport const UpdateUserBalanceIsLoading = createAction<boolean>('@user/UPDATE_BALANCE_IS_LOADING');\n\n/**\n * Update user balance error status.\n */\nexport const UpdateUserBalanceIsLoadingError = createAction<boolean>(\n    '@user/UPDATE_BALANCE_IS_LOADING_ERROR',\n);\n","/**\n * @file Reducer.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport { UserBalance } from 'src/models';\nimport {\n    UpdateUserBalance,\n    UpdateUserBalanceIsLoading,\n    UpdateUserBalanceIsLoadingError,\n    UpdateUserName,\n} from '../actions';\n\n/**\n * State.\n */\nexport type UserReducerState = {\n    name: string | null;\n    balance?: UserBalance;\n    balanceIsLoading: boolean;\n    loadingBalanceError: boolean;\n};\n\n/**\n * Initial state.\n */\nconst initialState: UserReducerState = {\n    name: null,\n    balance: undefined,\n    balanceIsLoading: false,\n    loadingBalanceError: false,\n};\n\n/**\n * Reducer of user info.\n */\nexport const UserReducer = createReducer(initialState, builder =>\n    builder\n        .addCase(UpdateUserName, (state, { payload }) => {\n            state.name = payload;\n        })\n        .addCase(UpdateUserBalance, (state, { payload }) => {\n            state.balance = payload;\n        })\n        .addCase(UpdateUserBalanceIsLoading, (state, { payload }) => {\n            state.balanceIsLoading = payload;\n        })\n        .addCase(UpdateUserBalanceIsLoadingError, (state, { payload }) => {\n            state.loadingBalanceError = payload;\n        }),\n);\n","/**\n * @file Redux saga.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { SagaIterator } from '@redux-saga/core';\nimport { fork, put } from 'redux-saga/effects';\nimport { getItemFromLocalStorage } from 'src/packages/LocalStorage';\nimport { getUserFromJwt } from 'src/utils';\nimport { UpdateUserName } from '../actions';\n\n/**\n * Auth main saga.\n *\n * @yields\n */\nexport function* AuthSaga(): SagaIterator<void> {\n    yield fork(TryGetUserFromLocalStorageTokenSaga);\n}\n\n/**\n * Tries to get user from localStorage token.\n *\n * @yields\n */\nfunction* TryGetUserFromLocalStorageTokenSaga(): SagaIterator<void> {\n    const jwt = getItemFromLocalStorage<string>('jwt');\n\n    if (!jwt) {\n        return;\n    }\n\n    const user = getUserFromJwt(jwt);\n\n    if (user) {\n        yield put(UpdateUserName(user));\n    }\n}\n","/**\n * @file Redux saga.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { call, put, StrictEffect } from 'redux-saga/effects';\nimport { UpdateUserName } from '../actions';\n\n/**\n * Removes current user if api call response returns 401 error.\n * Consider to wrap all significant api calls into this.\n *\n * @param fn Api call.\n * @param args - Api call arguments.\n * @returns Api call result or throws error.\n * @throws Api call error.\n * @yields\n * @example\n * ```ts\n * const result = yield call(ProtectedCall, callMethod, callArguments);\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function* ProtectedCall<T extends (...args: any[]) => any>(\n    fn: T,\n    ...args: Parameters<T>\n): Generator<StrictEffect, unknown, unknown> {\n    try {\n        const result: unknown = yield call(fn, ...args);\n\n        return result;\n    } catch (e) {\n        if (e.response.data.code === 401) {\n            yield put(UpdateUserName(null));\n        }\n\n        throw e;\n    }\n}\n","/**\n * @file Redux action creators.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createAction } from '@reduxjs/toolkit';\nimport { Circuit, CircuitInfo, CircuitStats } from 'src/models';\n\n/**\n * Update circuits list.\n */\nexport const UpdateCircuitsList = createAction<Circuit[]>('@circuits/UPDATE_CIRCUITS_LIST');\n\n/**\n * Update selected circuit id.\n */\nexport const UpdateSelectedCircuitId = createAction<string>('@circuits/UPDATE_SELECTED_CIRCUIT_ID');\n\n/**\n * Update circuits loading state.\n */\nexport const UpdateIsLoadingCircuits = createAction<boolean>('@circuits/UPDATE_IS_LOADING');\n\n/**\n * Update circuits error state.\n */\nexport const UpdateCircuitsError = createAction<boolean>('@circuits/UPDATE_ERROR');\n\n/**\n * Update circuit info list.\n */\nexport const UpdateCircuitsInfoList = createAction<CircuitInfo[]>('@circuits/UPDATE_CIRCUITS_INFO');\n\n/**\n * Update circuit info loading state.\n */\nexport const UpdateIsLoadingCircuitsInfo = createAction<boolean>(\n    '@circuits/UPDATE_IS_LOADING_CIRCUITS_INFO',\n);\n\n/**\n * Update circuit stats.\n */\nexport const UpdateCircuitsStats = createAction<CircuitStats[]>('@circuits/UPDATE_STATS');\n\n/**\n * Update circuit stats loading state.\n */\nexport const UpdateIsLoadingCircuitsStats = createAction<boolean>(\n    '@circuits/UPDATE_IS_LOADING_CIRCUITS_STATS',\n);\n","/**\n * @file Redux action creators.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createAction } from '@reduxjs/toolkit';\nimport { Bid } from 'src/models';\n\n/**\n * Update bids list.\n */\nexport const UpdateBidsList = createAction<Bid[]>('@bids/UPDATE_BIDS_LIST');\n\n/**\n * Add bid.\n */\nexport const AddBid = createAction<Bid>('@bids/ADD_BID');\n\n/**\n * Update bids loading state.\n */\nexport const UpdateIsLoadingBids = createAction<boolean>('@bids/UPDATE_IS_LOADING');\n\n/**\n * Update bids error state.\n */\nexport const UpdateBidsError = createAction<boolean>('@bids/UPDATE_ERROR');\n\n/**\n * Remove bid.\n */\nexport const RemoveBid = createAction<Bid['_key']>('@bids/REMOVE_BID');\n","/**\n * @file Redux action creators.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createAction } from '@reduxjs/toolkit';\nimport { Ask } from 'src/models';\n\n/**\n * Update asks list.\n */\nexport const UpdateAsksList = createAction<Ask[]>('@asks/UPDATE_ASKS_LIST');\n\n/**\n * Add ask.\n */\nexport const AddAsk = createAction<Ask>('@asks/ADD_ASK');\n\n/**\n * Update asks loading state.\n */\nexport const UpdateIsLoadingAsks = createAction<boolean>('@asks/UPDATE_IS_LOADING');\n\n/**\n * Update asks error state.\n */\nexport const UpdateAsksError = createAction<boolean>('@asks/UPDATE_ERROR');\n\n/**\n * Remove ask.\n */\nexport const RemoveAsk = createAction<Ask['_key']>('@asks/REMOVE_ASK');\n","/**\n * @file Reducer.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport { Circuit, CircuitInfo, CircuitStats } from 'src/models';\nimport {\n    UpdateCircuitsList,\n    UpdateSelectedCircuitId,\n    UpdateIsLoadingCircuits,\n    UpdateCircuitsError,\n    UpdateCircuitsInfoList,\n    UpdateIsLoadingCircuitsInfo,\n    UpdateCircuitsStats,\n    UpdateIsLoadingCircuitsStats,\n} from '../actions';\n\n/**\n * State.\n */\nexport type CircuitsReducerState = {\n    circuits: Circuit[];\n    selectedid?: string;\n    isLoading: boolean;\n    error?: boolean;\n    circuitsInfo: CircuitInfo[];\n    isLoadingCircuitsInfo: boolean;\n    circuitsStats: CircuitStats[];\n    isLoadingCircuitsStats: boolean;\n};\n\n/**\n * Initial state.\n */\nconst initialState: CircuitsReducerState = {\n    circuits: [],\n    selectedid: undefined,\n    isLoading: false,\n    error: false,\n    circuitsInfo: [],\n    isLoadingCircuitsInfo: false,\n    circuitsStats: [],\n    isLoadingCircuitsStats: false,\n};\n\n/**\n * Reducer of circuits.\n */\nexport const CircuitsReducer = createReducer(initialState, builder =>\n    builder\n        .addCase(UpdateCircuitsList, (state, { payload }) => ({\n            ...state,\n            circuits: payload,\n        }))\n        .addCase(UpdateSelectedCircuitId, (state, { payload }) => ({\n            ...state,\n            selectedid: payload,\n        }))\n        .addCase(UpdateIsLoadingCircuits, (state, { payload }) => ({\n            ...state,\n            isLoading: payload,\n        }))\n        .addCase(UpdateCircuitsError, (state, { payload }) => ({\n            ...state,\n            error: payload,\n        }))\n        .addCase(UpdateCircuitsInfoList, (state, { payload }) => ({\n            ...state,\n            circuitsInfo: payload,\n        }))\n        .addCase(UpdateIsLoadingCircuitsInfo, (state, { payload }) => ({\n            ...state,\n            isLoadingCircuitsInfo: payload,\n        }))\n        .addCase(UpdateCircuitsStats, (state, { payload }) => ({\n            ...state,\n            circuitsStats: payload,\n        }))\n        .addCase(UpdateIsLoadingCircuitsStats, (state, { payload }) => ({\n            ...state,\n            isLoadingCircuitsStats: payload,\n        })),\n);\n","/**\n * @file Reducer.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport { Ask } from 'src/models';\nimport {\n    UpdateAsksList,\n    AddAsk,\n    UpdateAsksError,\n    UpdateIsLoadingAsks,\n    RemoveAsk,\n} from '../actions';\n\n/**\n * State.\n */\nexport type AsksReducerState = {\n    asks: Ask[];\n    isLoading: boolean;\n    error: boolean;\n};\n\n/**\n * Initial state.\n */\nconst initialState: AsksReducerState = {\n    asks: [],\n    isLoading: false,\n    error: false,\n};\n\n/**\n * Reducer of asks.\n */\nexport const AsksReducer = createReducer(initialState, builder =>\n    builder\n        .addCase(UpdateAsksList, (state, { payload }) => ({\n            ...state,\n            asks: payload,\n        }))\n        .addCase(AddAsk, (state, { payload }) => {\n            state.asks.push(payload);\n        })\n        .addCase(UpdateIsLoadingAsks, (state, { payload }) => ({\n            ...state,\n            isLoading: payload,\n        }))\n        .addCase(UpdateAsksError, (state, { payload }) => ({\n            ...state,\n            error: payload,\n        }))\n        .addCase(RemoveAsk, (state, { payload }) => ({\n            ...state,\n            asks: state.asks.filter(x => payload !== x._key),\n        })),\n);\n","/**\n * @file Reducer.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport { Bid } from 'src/models';\nimport {\n    UpdateBidsList,\n    AddBid,\n    UpdateBidsError,\n    UpdateIsLoadingBids,\n    RemoveBid,\n} from '../actions';\n\n/**\n * State.\n */\nexport type BidsReducerState = {\n    bids: Bid[];\n    isLoading: boolean;\n    error: boolean;\n};\n\n/**\n * Initial state.\n */\nconst initialState: BidsReducerState = {\n    bids: [],\n    isLoading: false,\n    error: false,\n};\n\n/**\n * Reducer of bids.\n */\nexport const BidsReducer = createReducer(initialState, builder =>\n    builder\n        .addCase(UpdateBidsList, (state, { payload }) => ({\n            ...state,\n            bids: payload,\n        }))\n        .addCase(AddBid, (state, { payload }) => {\n            state.bids.push(payload);\n        })\n        .addCase(UpdateIsLoadingBids, (state, { payload }) => ({\n            ...state,\n            isLoading: payload,\n        }))\n        .addCase(UpdateBidsError, (state, { payload }) => ({\n            ...state,\n            error: payload,\n        }))\n        .addCase(RemoveBid, (state, { payload }) => ({\n            ...state,\n            asks: state.bids.filter(x => payload !== x._key),\n        })),\n);\n","/**\n * @file Selectors.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createSelector } from '@reduxjs/toolkit';\nimport { RootStateType } from '../../RootStateType';\n\nconst selectCircuitsList = (s: RootStateType) => s.circuitsState.circuits;\n\n/**\n * Selects current circuit id.\n *\n * @param s State.\n * @returns Current selected circuit id.\n */\nexport const selectCurrentCircuitId = (s: RootStateType): string | undefined =>\n    s.circuitsState.selectedid;\n\n/**\n * Sorted and filtered circuits selector.\n */\nexport const selectCircuits = createSelector(selectCircuitsList, circuits => circuits);\n\n/**\n * Selected circuit selector.\n */\nexport const selectCurrentCircuit = createSelector(\n    selectCircuits,\n    selectCurrentCircuitId,\n    (circuits, selectedid) => circuits.find(x => x._key === selectedid),\n);\n","/**\n * @file Selectors.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createSelector } from '@reduxjs/toolkit';\nimport { Bid } from 'src/models';\nimport { RootStateType } from 'src/redux';\nimport { selectUserName } from '../../login';\n\n/**\n * Select all bids.\n *\n * @param s State.\n * @returns All bids.\n */\nexport const selectBidsList = (s: RootStateType): Bid[] => s.bidsState.bids;\n\n/**\n * Select bids, created by current user.\n */\nexport const selectCurrentUserBids = createSelector(selectBidsList, selectUserName, (bids, user) =>\n    bids.filter(x => x.sender === user),\n);\n\n/**\n * Select bids, created by current user with 'created' status.\n */\nexport const selectCurrentUserCreatedBids = createSelector(selectCurrentUserBids, asks =>\n    asks.filter(x => x.status === 'created'),\n);\n\n/**\n * Select bids, created by current user with 'compelted' status.\n */\nexport const selectCurrentUserCompletedBids = createSelector(selectCurrentUserBids, asks =>\n    asks.filter(x => x.status === 'completed'),\n);\n","/**\n * @file Selectors.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createSelector } from '@reduxjs/toolkit';\nimport { Ask } from 'src/models';\nimport { RootStateType } from 'src/redux';\nimport { selectUserName } from '../../login';\n\n/**\n * Select all asks from state.\n *\n * @param s State.\n * @returns All asks.\n */\nexport const selectAsksList = (s: RootStateType): Ask[] => s.asksState.asks;\n\n/**\n * Select all completed asks.\n */\nexport const selectCompletedAsks = createSelector(selectAsksList, asks =>\n    asks.filter(x => x.status === 'completed'),\n);\n\n/**\n * Select asks, created by current user.\n */\nexport const selectCurrentUserAsks = createSelector(selectAsksList, selectUserName, (asks, user) =>\n    asks.filter(x => x.sender === user),\n);\n\n/**\n * Select asks, created by current user with 'created' status.\n */\nexport const selectCurrentUserActiveAsks = createSelector(selectCurrentUserAsks, asks =>\n    asks.filter(x => x.status === 'created' || x.status === 'processing'),\n);\n\n/**\n * Select asks, created by current user with 'compelted' status.\n */\nexport const selectCurrentUserCompletedAsks = createSelector(selectCurrentUserAsks, asks =>\n    asks.filter(x => x.status === 'completed'),\n);\n","/**\n * @file Redux saga.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { SagaIterator } from 'redux-saga';\nimport { delay, call, take, fork, cancel } from 'redux-saga/effects';\nimport { UpdateUserName } from '../../login';\n\n/**\n * Helps to revalidate data on interval. Revalidation starts when auth completes.\n * Stops data revalidation when user logs out.\n *\n * TODO - implement pause revalidation when user leaves tab (but doesn't close it).\n *\n * @param fnToRevalidate - Function to revalidate data. Can be Generator or common function.\n * @param revalidateInterval - Interval between calling fn.\n * @param args - Any arguments to pass into fn.\n * @returns Revalidation saga.\n * @yields\n */\nexport function* RevalidateSaga<T extends (...args: unknown[]) => unknown>(\n    fnToRevalidate: T,\n    revalidateInterval: number,\n    ...args: Parameters<T>\n): SagaIterator {\n    while (true) {\n        const { payload: user } = yield take(UpdateUserName);\n\n        if (user) {\n            yield call(Revalidate, fnToRevalidate, revalidateInterval, ...args);\n        }\n    }\n}\n\n// eslint-disable-next-line jsdoc/require-jsdoc\nexport function* Revalidate<T extends (...args: unknown[]) => unknown>(\n    fnToRevalidate: T,\n    revalidateInterval: number,\n    ...args: Parameters<T>\n): SagaIterator {\n    const task = yield fork(function* () {\n        while (true) {\n            yield call(fnToRevalidate, ...args);\n            yield delay(revalidateInterval);\n        }\n    });\n\n    const { payload: user } = yield take(UpdateUserName);\n\n    if (!user) {\n        yield cancel(task);\n    }\n}\n","/**\n * @file Redux saga.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { call, put, select, takeLatest, fork, all } from 'redux-saga/effects';\nimport { SagaIterator } from '@redux-saga/core';\nimport { getCircuits, getCircuitsInfo, getCircuitsStats } from 'src/api';\nimport { Circuit, CircuitInfo, CircuitStats } from 'src/models';\nimport {\n    UpdateCircuitsError,\n    UpdateCircuitsInfoList,\n    UpdateCircuitsList,\n    UpdateCircuitsStats,\n    UpdateIsLoadingCircuits,\n    UpdateIsLoadingCircuitsInfo,\n    UpdateIsLoadingCircuitsStats,\n    UpdateSelectedCircuitId,\n} from '../actions';\nimport { ProtectedCall, UpdateUserName } from '../../login';\nimport { selectCurrentCircuitId } from '../selectors';\nimport { RevalidateSaga } from '../../common';\n\nconst revalidateCircuitsInfoInterval =\n    Number(process.env.REACT_APP_REVALIDATE_DATA_INTERVAL) || 3000;\n\n/**\n * Circuits main saga.\n *\n * @yields\n */\nexport function* CircuitsSaga(): SagaIterator<void> {\n    yield takeLatest(UpdateUserName, GetCircuitsSaga);\n    yield takeLatest(UpdateCircuitsList, SelectCircuitSaga);\n    yield fork(RevalidateSaga, GetCircuitsAdditionalData, revalidateCircuitsInfoInterval);\n}\n\n/**\n * Get circuits saga.\n *\n * @param {ReturnType<typeof UpdateUserName>} action Action return type.\n * @yields\n */\nfunction* GetCircuitsSaga({\n    payload: user,\n}: ReturnType<typeof UpdateUserName>): SagaIterator<void> {\n    if (!user) {\n        return;\n    }\n\n    try {\n        yield put(UpdateIsLoadingCircuits(true));\n        yield put(UpdateCircuitsError(false));\n\n        const circuitsList: Circuit[] = yield call(ProtectedCall, getCircuits);\n\n        if (circuitsList !== undefined) {\n            yield put(UpdateCircuitsList(circuitsList));\n        }\n    } catch {\n        yield put(UpdateCircuitsError(true));\n    } finally {\n        yield put(UpdateIsLoadingCircuits(false));\n    }\n}\n\n/**\n * Selects first circuit in list after circuits list update (if none is selected).\n *\n * @param {ReturnType<typeof UpdateCircuitsList>} action - Action.\n * @yields\n */\nfunction* SelectCircuitSaga({\n    payload,\n}: ReturnType<typeof UpdateCircuitsList>): SagaIterator<void> {\n    const currentCircuitId = yield select(selectCurrentCircuitId);\n\n    if (currentCircuitId) {\n        return;\n    }\n\n    if (!payload.length) {\n        return;\n    }\n\n    yield put(UpdateSelectedCircuitId(payload[0]._key));\n}\n\n/**\n * Revalidate circuits info.\n *\n * @yields\n */\nfunction* GetCircuitsInfoSaga() {\n    try {\n        yield put(UpdateIsLoadingCircuitsInfo(true));\n        const circutsInfo: CircuitInfo[] = yield call(ProtectedCall, getCircuitsInfo);\n        yield put(UpdateCircuitsInfoList(circutsInfo));\n    } catch {\n        // Do nothing\n    } finally {\n        yield put(UpdateIsLoadingCircuitsInfo(false));\n    }\n}\n\n/**\n * Revalidate circuits stats.\n *\n * @yields\n */\nfunction* GetCircuitsStatsSaga() {\n    try {\n        yield put(UpdateIsLoadingCircuitsStats(true));\n        const circutsStats: CircuitStats[] = yield call(ProtectedCall, getCircuitsStats);\n        yield put(UpdateCircuitsStats(circutsStats));\n    } catch {\n        // Do nothing\n    } finally {\n        yield put(UpdateIsLoadingCircuitsStats(false));\n    }\n}\n\n/**\n * Revalidate circuit additional data (info and statistics).\n *\n * @yields\n */\nfunction* GetCircuitsAdditionalData() {\n    yield all([fork(GetCircuitsInfoSaga), fork(GetCircuitsStatsSaga)]);\n}\n","/**\n * @file Redux saga.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { call, fork, put, select, takeLatest } from 'redux-saga/effects';\nimport { SagaIterator } from '@redux-saga/core';\nimport { getBidsByCircuitId } from 'src/api';\nimport { Bid } from 'src/models';\nimport { ProtectedCall } from 'src/redux';\nimport {\n    UpdateSelectedCircuitId,\n    UpdateBidsList,\n    UpdateIsLoadingBids,\n    UpdateBidsError,\n} from '../actions';\nimport { selectCurrentCircuitId } from '../selectors';\nimport { RevalidateSaga } from '../../common';\n\nconst revalidateBidsDelay = Number(process.env.REACT_APP_REVALIDATE_DATA_INTERVAL) || 3000;\n\n/**\n * Bids main saga.\n *\n * @yields\n */\nexport function* BidsSaga(): SagaIterator<void> {\n    yield takeLatest(UpdateSelectedCircuitId, function* () {\n        yield put(UpdateBidsList([]));\n        yield fork(GetBidsSaga);\n    });\n    yield fork(RevalidateSaga, GetBidsSaga, revalidateBidsDelay);\n}\n\n/**\n * Get bids saga.\n *\n * @yields\n */\nfunction* GetBidsSaga(): SagaIterator<void> {\n    const circuitId: string | undefined = yield select(selectCurrentCircuitId);\n\n    if (circuitId === undefined) {\n        return;\n    }\n\n    try {\n        yield put(UpdateBidsError(false));\n        yield put(UpdateIsLoadingBids(true));\n\n        const bids: Bid[] = yield call(ProtectedCall, getBidsByCircuitId, circuitId);\n\n        if (bids !== undefined) {\n            yield put(UpdateBidsList(bids));\n        }\n    } catch (e) {\n        yield put(UpdateBidsError(true));\n    } finally {\n        yield put(UpdateIsLoadingBids(false));\n    }\n}\n","/**\n * @file Redux saga.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { call, fork, put, takeLatest, select } from 'redux-saga/effects';\nimport { SagaIterator } from '@redux-saga/core';\nimport { getAsksByCircuitId } from 'src/api';\nimport { Ask } from 'src/models';\nimport { ProtectedCall } from 'src/redux';\nimport {\n    UpdateSelectedCircuitId,\n    UpdateAsksList,\n    UpdateIsLoadingAsks,\n    UpdateAsksError,\n} from '../actions';\nimport { selectCurrentCircuitId } from '../selectors';\nimport { RevalidateSaga } from '../../common';\n\nconst revalidateAsksDelay = Number(process.env.REACT_APP_REVALIDATE_DATA_INTERVAL) || 3000;\n\n/**\n * Asks main saga.\n *\n * @yields\n */\nexport function* AsksSaga(): SagaIterator<void> {\n    yield takeLatest(UpdateSelectedCircuitId, function* () {\n        yield put(UpdateAsksList([]));\n        yield fork(GetAsksSaga);\n    });\n    yield fork(RevalidateSaga, GetAsksSaga, revalidateAsksDelay);\n}\n\n/**\n * Get asks saga.\n *\n * @yields\n */\nfunction* GetAsksSaga(): SagaIterator<void> {\n    const circuitId: string | undefined = yield select(selectCurrentCircuitId);\n\n    if (circuitId === undefined) {\n        return;\n    }\n\n    try {\n        yield put(UpdateAsksError(false));\n        yield put(UpdateIsLoadingAsks(true));\n\n        const asks: Ask[] = yield call(ProtectedCall, getAsksByCircuitId, circuitId);\n\n        if (asks !== undefined) {\n            yield put(UpdateAsksList(asks));\n        }\n    } catch (e) {\n        yield put(UpdateAsksError(true));\n    } finally {\n        yield put(UpdateIsLoadingAsks(false));\n    }\n}\n","/**\n * @file Redux saga.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { SagaIterator } from '@redux-saga/core';\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { getUserBalance } from 'src/api';\nimport { UserBalance } from 'src/models';\nimport {\n    UpdateUserBalance,\n    UpdateUserBalanceIsLoading,\n    UpdateUserBalanceIsLoadingError,\n    UpdateUserName,\n} from '../actions';\nimport { ProtectedCall } from './ProtectedCall';\nimport { AddAsk, AddBid } from '../../market';\n\n/**\n * User main saga.\n *\n * @yields\n */\nexport function* UserSaga(): SagaIterator<void> {\n    yield takeLatest([UpdateUserName, AddAsk, AddBid], GetUserInfoSaga);\n}\n\n/**\n * Gets user info after updating user.\n *\n * @param {ReturnType<typeof UpdateUserName>} action Action return type.\n * @yields\n */\nfunction* GetUserInfoSaga({\n    payload: user,\n}: ReturnType<typeof UpdateUserName>): SagaIterator<void> {\n    const isReadonly = user === process.env.REACT_APP_READONLY_USER;\n    if (isReadonly || !user) {\n        return;\n    }\n\n    try {\n        yield put(UpdateUserBalanceIsLoading(true));\n        yield put(UpdateUserBalanceIsLoadingError(false));\n\n        const balance: UserBalance | undefined = yield call(ProtectedCall, getUserBalance, user);\n        yield put(UpdateUserBalance(balance));\n    } catch {\n        yield put(UpdateUserBalanceIsLoadingError(true));\n    } finally {\n        yield put(UpdateUserBalanceIsLoading(false));\n    }\n}\n","/**\n * @file Redux action creators.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createAction } from '@reduxjs/toolkit';\nimport { Proof } from 'src/models';\n\n/**\n * Update proof list.\n */\nexport const UpdateProofList = createAction<Proof[]>('@proof/UPDATE_PROOF_LIST');\n\n/**\n * Update proofs loading state.\n */\nexport const UpdateIsLoadingProofs = createAction<boolean>('@proof/UPDATE_IS_LOADING');\n\n/**\n * Update proof error state.\n */\nexport const UpdateProofsError = createAction<boolean>('@proof/UPDATE_ERROR');\n\n/**\n * Update selected circuit id.\n */\nexport const UpdateSelectedProofId = createAction<string>('@proof/UPDATE_SELECTED_PROOF_ID');\n","/**\n * @file Reducer.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport { Proof } from 'src/models';\nimport {\n    UpdateIsLoadingProofs,\n    UpdateProofList,\n    UpdateProofsError,\n    UpdateSelectedProofId,\n} from '../actions';\n\n/**\n * State.\n */\nexport type ProofReducerState = {\n    proofs: Proof[];\n    isLoadingProofs: boolean;\n    error: boolean;\n    selectedProofId?: string;\n};\n\n/**\n * Initial state.\n */\nconst initialState: ProofReducerState = {\n    proofs: [],\n    isLoadingProofs: false,\n    error: false,\n    selectedProofId: undefined,\n};\n\n/**\n * Reducer of proofs.\n */\nexport const ProofReducer = createReducer(initialState, builder =>\n    builder\n        .addCase(UpdateProofList, (state, { payload }) => ({\n            ...state,\n            proofs: payload,\n        }))\n        .addCase(UpdateIsLoadingProofs, (state, { payload }) => ({\n            ...state,\n            isLoadingProofs: payload,\n        }))\n        .addCase(UpdateProofsError, (state, { payload }) => ({\n            ...state,\n            error: payload,\n        }))\n        .addCase(UpdateSelectedProofId, (s, { payload }) => {\n            s.selectedProofId = payload;\n        }),\n);\n","/**\n * @file Selectors.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createSelector } from '@reduxjs/toolkit';\nimport { Proof } from 'src/models';\nimport { RootStateType } from 'src/redux';\n\n/**\n * Select all proofs from state.\n *\n * @param s State.\n * @returns All proofs.\n */\nexport const selectProofList = (s: RootStateType): Proof[] => s.proofState.proofs;\n\n/**\n * Select selected proof id.\n *\n * @param s State.\n * @returns Selected proof id.\n */\nexport const selectSelectedProofId = (s: RootStateType): string | undefined =>\n    s.proofState.selectedProofId;\n\n/**\n * Select current selected proof.\n */\nexport const selectSelectedProof = createSelector(\n    selectProofList,\n    selectSelectedProofId,\n    (proofs, id) => proofs.find(p => p._key === id),\n);\n","/**\n * @file Redux saga.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { call, put, select, takeLatest } from 'redux-saga/effects';\nimport { SagaIterator } from '@redux-saga/core';\nimport { getProofs } from 'src/api';\nimport { Proof } from 'src/models';\nimport {\n    UpdateProofList,\n    UpdateIsLoadingProofs,\n    UpdateProofsError,\n    UpdateSelectedProofId,\n} from '../actions';\nimport { RootStateType } from '../../RootStateType';\nimport { ProtectedCall, UpdateUserName } from '../../login';\nimport { selectSelectedProofId } from '../selectors';\n\nconst selectUser = (s: RootStateType) => s.userState.name;\n\n/**\n * Proof main saga.\n *\n * @yields\n */\nexport function* ProofSaga(): SagaIterator<void> {\n    yield takeLatest(UpdateUserName, GetProofSaga);\n    yield takeLatest(UpdateProofList, SelectProofSaga);\n}\n\n/**\n * Get proof saga.\n *\n * @yields\n */\nfunction* GetProofSaga(): SagaIterator<void> {\n    const user: ReturnType<typeof selectUser> = yield select(selectUser);\n\n    if (!user) {\n        return;\n    }\n\n    try {\n        yield put(UpdateProofsError(false));\n        yield put(UpdateIsLoadingProofs(true));\n\n        const proofList: Proof[] = yield call(ProtectedCall, getProofs, user);\n\n        if (proofList !== undefined) {\n            yield put(UpdateProofList(proofList));\n        }\n    } catch (e) {\n        yield put(UpdateProofsError(true));\n    } finally {\n        yield put(UpdateIsLoadingProofs(false));\n    }\n}\n\n/**\n * Selects first circuit in list after circuits list update (if none is selected).\n *\n * @param {ReturnType<typeof UpdateProofList>} action - Action.\n * @yields\n */\nfunction* SelectProofSaga({ payload }: ReturnType<typeof UpdateProofList>): SagaIterator<void> {\n    const currentCircuitId = yield select(selectSelectedProofId);\n\n    if (currentCircuitId) {\n        return;\n    }\n\n    if (!payload.length) {\n        return;\n    }\n\n    yield put(UpdateSelectedProofId(payload[0]._key));\n}\n","/**\n * @file Root reducer.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { combineReducers } from 'redux';\nimport { UserReducer } from './login';\nimport { CircuitsReducer, BidsReducer, AsksReducer } from './market';\nimport { ProofReducer } from './portfolio';\nimport { RootStateType } from './RootStateType';\n\n/**\n * Root reducer.\n */\nexport const RootReducer = combineReducers<RootStateType>({\n    circuitsState: CircuitsReducer,\n    asksState: AsksReducer,\n    bidsState: BidsReducer,\n    proofState: ProofReducer,\n    userState: UserReducer,\n});\n","/**\n * @file Root saga.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { all, AllEffect, fork, ForkEffect } from 'redux-saga/effects';\nimport { CircuitsSaga, AsksSaga, BidsSaga } from './market';\nimport { AuthSaga, UserSaga } from './login';\nimport { ProofSaga } from './portfolio';\n\n/**\n * RootSaga.\n *\n * @yields\n */\nexport default function* RootSaga(): Iterator<AllEffect<ForkEffect>> {\n    yield all([\n        fork(AuthSaga),\n        fork(UserSaga),\n        fork(CircuitsSaga),\n        fork(AsksSaga),\n        fork(BidsSaga),\n        fork(ProofSaga),\n    ]);\n}\n","/**\n * @file State.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { configureStore, Middleware } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport { RootReducer } from './rootReducer';\nimport RootSaga from './RootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares: Middleware[] = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n    middlewares.push(logger);\n}\n\nexport const store = configureStore({\n    reducer: RootReducer,\n    middleware: getDefaultMiddleware => [...getDefaultMiddleware({ thunk: false }), ...middlewares],\n    devTools: process.env.NODE_ENV !== 'production',\n});\n\nsagaMiddleware.run(RootSaga);\n","/**\n * @file Hooks helpers.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { RootStateType } from '../RootStateType';\n\n/**\n * Typed use selector.\n */\nexport const useAppSelector: TypedUseSelectorHook<RootStateType> = useSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderBook\":\"OrderBook_orderBook__2unJV\",\"header\":\"OrderBook_header__xa3Di\",\"orderBookTable\":\"OrderBook_orderBookTable__2siIb\",\"rowsContainer\":\"OrderBook_rowsContainer__3Lv0E\",\"ask\":\"OrderBook_ask__3fnXa\",\"bid\":\"OrderBook_bid__2G52c\",\"lastOrderDataContainer\":\"OrderBook_lastOrderDataContainer__3tzRt\",\"grow\":\"OrderBook_grow__i1wx2\",\"loss\":\"OrderBook_loss__a8PaE\",\"changePriceStepButton\":\"OrderBook_changePriceStepButton__3F1jr\"};"],"sourceRoot":""}