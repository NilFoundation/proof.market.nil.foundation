{"version":3,"sources":["redux/login/selectors/UserSelectors.ts","redux/login/actions/UserActions.ts","redux/login/reducers/UserReducer.ts","redux/login/sagas/AuthSaga.ts","redux/login/sagas/ProtectedCall.ts","redux/market/actions/CircuitsActions.ts","redux/market/actions/BidActions.ts","redux/market/actions/AskActions.ts","redux/market/reducers/CircuitsReducer.ts","redux/market/reducers/AsksReducer.ts","redux/market/reducers/BidsReducer.ts","redux/market/selectors/CircuitsSelectors.ts","redux/market/selectors/BidsSelectors.ts","redux/market/selectors/AsksSelectors.ts","redux/common/sagas/RevalidateSaga.tsx","redux/market/sagas/CircuitsSaga.ts","redux/market/sagas/BidsSaga.ts","redux/market/sagas/AsksSaga.ts","redux/login/sagas/UserSaga.ts","redux/portfolio/actions/ProofActions.ts","redux/portfolio/reducers/ProofReducer.ts","redux/portfolio/selectors/ProofSelectors.ts","redux/portfolio/sagas/ProofSaga.ts","redux/rootReducer.ts","redux/RootSaga.ts","redux/store.ts","redux/reduxHooks/useAppSelector.ts","components/market/CircuitsList/CircuitsList.module.scss","components/market/CircuitDetailedInfo/DetailedInfoTab.ts","components/common/SocialLinks/SocialLinks.tsx","components/common/Copyright/Copyright.tsx","components/common/Footer/Footer.tsx","components/common/MobileMenu/MobileMenu.tsx","components/login/AuthCard/AuthCard.tsx","components/login/LoginForm/LoginForm.tsx","components/login/AuthContainer/AuthContainer.tsx","components/login/RegisterForm/RegisterForm.tsx","components/login/ReadonlyAccessProvider/ReadonlyAccessProvider.tsx","components/login/UserBalance/UserBalance.tsx","components/login/UserMenu/UserMenu.tsx","components/login/ProtectedContent/ProtectedContent.tsx","components/common/BreadCrumbs/Breadcrumbs.tsx","components/common/Header/HeaderLink.tsx","components/common/Header/Header.tsx","components/common/Details/Details.tsx","components/common/DashboardCard/DashboardCard.tsx","components/common/Table/Table.tsx","components/common/Table/TBody.tsx","components/common/Table/TCell.tsx","components/common/Table/THead.tsx","components/common/Table/THeader.tsx","components/common/Table/TRow.tsx","components/common/ReactTable/ReactTableHeader.tsx","components/common/ReactTable/ReactTable.tsx","components/common/FileUploader/FileUploader.tsx","components/common/FullScreenView/FullScreenView.tsx","components/common/ClicableIcon/ClicableIcon.tsx","views/OfflineView.tsx","components/common/NetConnectionHandler/NetConnectionHandler.tsx","components/common/Overlay/Overlay.tsx","components/common/ObjectAsPlainTextViewer/ObjectAsPlainTextViewer.tsx","components/common/GALocationTracker/GALocationTracker.tsx","components/market/PriceChangeIndicator/PriceChangeIndicator.tsx","components/market/CircuitsList/CircuitsListItemInfo.tsx","components/market/CircuitsList/CircuitsListItem.tsx","components/market/CircuitsList/CircuitsListTable.tsx","components/market/CircuitsList/CircuitsList.tsx","components/market/CircuitDetailedInfo/CircuitInfoCard.tsx","components/market/ManageOrdersPanel/ManageOrdersTab.ts","components/market/CircuitDetailedInfo/CircuitJsonView.tsx","components/market/CircuitDetailedInfo/CircuitStatsCard.tsx","components/market/CircuitDetailedInfo/CircuitDetailedInfo.tsx","components/market/CircuitDashboard/ChartTypeSelect.tsx","components/market/CircuitDashboard/ChartSettingsContext.ts","components/market/CircuitDashboard/DataRangeSelect.tsx","components/market/ChartLegend/ChartLegend.tsx","components/market/ChartTemplate/ChartTemplate.tsx","components/market/CircuitCharts/ProofCostChart.tsx","components/market/CircuitCharts/ProofGenTimeChart.tsx","components/market/CircuitDashboard/ChartSettingsProvider.tsx","components/market/CircuitDashboard/DashboardToolbar.tsx","components/market/CircuitInfoPanel/CircuitInfoPanel.tsx","components/market/CircuitDashboard/CircuitDashboard.tsx","components/market/OrderManagementContextProvider/OrderManagementContext.ts","components/market/OrderManagementContextProvider/OrderManagementContextProvider.tsx","components/market/OrderBook/OrderBookSettingsContext.ts","components/market/OrderBook/OrderBookTableCell.tsx","components/market/OrderBook/OrderBookTableRow.tsx","components/market/OrderBook/OrderBookTable.tsx","components/market/OrderBook/OrderBookToolbar.tsx","components/market/OrderBook/OrderBook.tsx","components/market/CreateTradeOrderForm/BaseFormGroup.tsx","components/market/CreateTradeOrderForm/CreateTradeOrderForm.tsx","components/market/CreateBidForm/PublicInput.tsx","components/market/CreateBidForm/CreateBidForm.tsx","components/market/CreateAskForm/CreateAskForm.tsx","components/market/CreateOrdersPanel/CreateOrdersTabs.tsx","components/market/CreateOrdersPanel/CreateOrdersPanel.tsx","components/market/TradeHistory/TradeHistoryTable.tsx","components/market/TradeHistory/TradeHistory.tsx","components/market/ManageOrdersPanel/ManageOrdersPanelTabs.tsx","components/market/ManageOrdersPanel/ToolbarPanel.tsx","components/market/ManageOrdersPanel/ActiveOrdersTable.tsx","components/market/ManageOrdersPanel/HistoryOrdersTable.tsx","components/market/ManageOrdersPanel/ManageOrdersPanel.tsx","components/portfolio/ProofList/ProofListItem.tsx","components/portfolio/ProofList/ProofList.tsx","components/portfolio/ProofView/ProofContentCardToolbar.tsx","components/portfolio/ProofView/ProofContentCard.tsx","components/market/CircuitDetailedInfo/CircuitDetailedInfo.module.scss","components/login/RegisterForm/RegisterForm.module.scss","components/login/UserMenu/UserMenu.module.scss","components/market/CircuitInfoPanel/CircuitInfoPanel.module.scss","components/login/LoginForm/LoginForm.module.scss","components/login/UserBalance/UserBalance.module.scss","components/common/Table/Table.module.scss","components/portfolio/ProofList/ProofList.module.scss","components/market/CreateTradeOrderForm/CreateTradeOrderForm.module.scss","hooks/login/loginHooks.ts","hooks/market/charts/useChart.ts","hooks/market/charts/useGetCircuitDashboardData.ts","hooks/market/charts/useRenderChartData.ts","hooks/market/orderBook/useGetOrderBookData.ts","hooks/market/tradeHistory/useGetTradeHistoryData.ts","hooks/market/manageOrders/useGetManageOrdersData.ts","hooks/market/useSelectedCircuitId.ts","hooks/portfolio/useSelectedProofId.ts","hooks/portfolio/useDownloadJson.ts","hooks/common/useLocalStorage.tsx","hooks/common/useDebounce.tsx","hooks/common/table/useInitialTableState.ts","api/market/BidsApi.ts","api/market/AsksApi.ts","enums/market/Currency.ts","enums/market/ChartType.ts","enums/market/DateUnit.ts","enums/common/UrlQueryParam.ts","enums/common/RouterParam.ts","enums/market/OrderBookPriceStep.ts","components/market/TradeHistory/TradeHistory.module.scss","components/portfolio/ProofView/ProofContentCard.module.scss","components/login/AuthContainer/AuthContainer.module.scss","components/common/BreadCrumbs/Breadcrumbs.module.scss","components/common/Header/Header.module.scss","components/common/SocialLinks/SocialLinks.module.scss","components/common/MobileMenu/MobileMenu.module.scss","components/common/Details/Details.module.scss","components/common/ObjectAsPlainTextViewer/ObjectAsPlainTextViewer.module.scss","components/market/ChartLegend/ChartLegend.module.scss","utils/login/jwtHelpers.ts","utils/login/calculateRevalidateJwtTimeout.ts","utils/dates/formatUTCTimestamp.ts","utils/dates/floorDateTo.ts","utils/dates/getUTCTimestamp.ts","utils/dates/formatDate.ts","utils/common/notEmpty.ts","utils/common/longDashSymbol.ts","utils/common/renderDashOnEmptyValue.ts","utils/regexp/emailRegExp.ts","components/common/Footer/Footer.module.scss","components/login/AuthCard/AuthCard.module.scss","components/login/ProtectedContent/ProtectedContent.module.scss","components/common/DashboardCard/DashboardCard.module.scss","components/common/ReactTable/ReactTable.module.scss","components/common/FullScreenView/FullScreenView.module.scss","components/common/ClicableIcon/ClicableIcon.module.scss","components/common/Overlay/Overlay.module.scss","components/market/PriceChangeIndicator/PriceChangeIndicator.module.scss","styles/export.module.scss","routing/Paths.ts","components/login/ProtectedRoute/ProtectedRoute.tsx","layouts/AuthLayout.tsx","layouts/MainLayout.tsx","routing/routesConfig.tsx","routing/Router.tsx","api/login/LoginApi.ts","api/login/BalanceApi.ts","api/market/CircuitsApi.ts","api/portfolio/ProofApi.ts","models/market/TradeOrder/TradeOrderType.ts","api/common/HttpClient.ts","api/common/BearerHttpClient.ts","constants/common/socialLinks.ts","constants/common/navigationLinks.ts","constants/common/jsonViewerTheme.ts","constants/common/mainSiteAddress.ts","components/market/OrderBook/OrderBook.module.scss","polyfills.ts","views/ErrorView.tsx","App.tsx","checkEnv.ts","ga.ts","reportWebVitals.ts","sentry.ts","index.tsx","packages/LocalStorage/LocalStorage.ts"],"names":["selectUserName","s","userState","name","selectUserBalance","balance","UpdateUserName","createAction","UpdateUserBalance","UpdateUserBalanceIsLoading","UpdateUserBalanceIsLoadingError","SetJwtRevalidateTimeout","initialState","undefined","balanceIsLoading","loadingBalanceError","UserReducer","createReducer","builder","addCase","state","payload","AuthSaga","TryGetUserFromLocalStorageTokenSaga","processRenewJwt","fork","takeLatest","RenewJwtSaga","jwt","getItemFromLocalStorage","user","getUserFromJwt","put","timeout","calculateRenewJwtTimeGap","task","take","cancel","delay","select","currentUser","call","renewJwt","result","setItemIntoLocalStorage","ProtectedCall","fn","args","response","data","code","UpdateCircuitsList","UpdateSelectedCircuitId","UpdateIsLoadingCircuits","UpdateCircuitsError","UpdateCircuitsInfoList","UpdateIsLoadingCircuitsInfo","UpdateCircuitsStats","UpdateIsLoadingCircuitsStats","UpdateBidsList","AddBid","UpdateIsLoadingBids","UpdateBidsError","RemoveBid","UpdateAsksList","AddAsk","UpdateIsLoadingAsks","UpdateAsksError","RemoveAsk","circuits","selectedid","isLoading","error","circuitsInfo","isLoadingCircuitsInfo","circuitsStats","isLoadingCircuitsStats","CircuitsReducer","AsksReducer","asks","push","filter","x","_key","BidsReducer","bids","selectCurrentCircuitId","circuitsState","selectCircuits","createSelector","selectCurrentCircuit","find","selectBidsList","bidsState","selectCurrentUserBids","sender","selectCurrentUserCreatedBids","status","selectCurrentUserCompletedBids","selectAsksList","asksState","selectCompletedAsks","selectCurrentUserAsks","selectCurrentUserActiveAsks","selectCurrentUserCompletedAsks","RevalidateSaga","Revalidate","fnToRevalidate","revalidateInterval","CircuitsSaga","GetCircuitsInfoSaga","GetCircuitsStatsSaga","GetCircuitsAdditionalData","revalidateCircuitsInfoInterval","Number","process","GetCircuitsSaga","SelectCircuitSaga","getCircuits","circuitsList","length","getCircuitsInfo","circutsInfo","getCircuitsStats","circutsStats","all","BidsSaga","GetBidsSaga","revalidateBidsDelay","circuitId","getBidsByCircuitId","AsksSaga","GetAsksSaga","revalidateAsksDelay","getAsksByCircuitId","UserSaga","GetUserInfoSaga","getUserBalance","UpdateProofList","UpdateIsLoadingProofs","UpdateProofsError","UpdateSelectedProofId","proofs","isLoadingProofs","selectedProofId","ProofReducer","selectProofList","proofState","selectSelectedProofId","id","p","ProofSaga","GetProofSaga","selectUser","SelectProofSaga","getProofs","proofList","RootReducer","combineReducers","RootSaga","sagaMiddleware","createSagaMiddleware","middlewares","store","configureStore","reducer","middleware","getDefaultMiddleware","thunk","devTools","run","useAppSelector","useSelector","module","exports","DetailedInfoTab","SocialLinks","className","bottomIndent","styles","socialLinks","map","icon","url","href","iconName","srOnlyText","Copyright","Date","getFullYear","Footer","footer","MobileMenu","menu","Button","button","iconNameDropdownClosed","iconNameDropdownOpend","Menu","align","navigationLinks","title","path","Item","AuthCard","children","authCard","LoginForm","nodeRef","useRef","userNameInputRef","processLogin","useLogin","useState","errorMessage","setErrorMessage","pwdInputType","setPwdInputType","pwdInputIconName","useForm","mode","register","formState","isSubmitting","isValid","errors","onSubmitLogin","handleSubmit","login","useEffect","current","focus","required","ref","restRegister","source","alt","responsive","rounded","logoImage","Group","hasError","size","Size","lg","control","Addon","type","placeholder","e","autoComplete","Buttons","onClick","block","variant","Variant","success","disabled","CSSTransition","classNames","in","unmountOnExit","to","Path","AuthContainer","useBreakpoints","md","showFullScreen","loginContainer","back","market","copyright","RegisterForm","email","setEmail","isEmailValid","useMemo","emailRegExp","test","emailInputRef","subject","window","location","hostname","submitting","succeeded","debouncedOnChangeHandler","debounce","target","value","successMessage","primary","form","onSubmit","description","onChange","field","prefix","social","ReadonlyAccessProvider","fallback","errorView","setError","isAuthentificated","useAuth","loginWithReadonly","username","password","UserBalance","canToggleVisibility","useLocalStorage","hidden","setHidden","userBalance","loadingUserBalance","toFixed","blocked","isNoData","displayLoader","longDash","text","hiddenText","repeat","label","grow","currency","UserMenu","isReadonly","processLogout","useLogout","navigate","useNavigate","dropdown","Header","balanceContainer","balanceTitle","Divider","onSelect","ProtectedContent","overlayTitle","overlayButtonText","container","Breadcrumbs","breadcrumbs","mainSiteAddress","item","renderLink","HeaderLink","match","useMatch","end","active","props","navbar","fluid","nav","Details","defaultOpen","unmountOnClose","isOpen","setIsOpen","toggleIsOpen","iconClassName","onKeyDown","key","role","tabIndex","Children","child","isValidElement","cloneElement","DashboardCard","dashboardCard","Table","rest","table","TBody","TCell","THead","sticky","isFooterHeader","tHeadClassName","clsx","tableHead","stickyHead","footerHead","THeader","TRow","ReactTableHeader","column","onlySortBy","canSort","isSorted","isSortedDesc","toggleSortBy","shouldToggleSort","useLayoutEffect","getHeaderProps","getSortByToggleProps","sortableColumnHeader","preventDefault","render","tableHooks","useFilters","useSortBy","notEmpty","ReactTable","renderRows","renderHeaders","defaultInitialState","footerHeader","showTableHeader","restOptions","useInitialTableState","setInitialState","tableInstance","useTable","getTableBodyProps","visibleColumns","debouncedState","useDebounce","renderTableHeadersFallback","columns","FileUploader","onDrop","textMessage","setTextMessage","useDropzone","acceptedFiles","fileRejections","event","Object","keys","getRootProps","getInputProps","isDragActive","FullScreenView","fullScreenView","ClicableIcon","OfflineView","as","xs","NetConnectionHandler","navigator","onLine","online","setOnline","setIsOnline","setIsOffline","addEventListener","removeEventListener","Overlay","overlay","ObjectAsPlainTextViewer","viewer","entries","y","GALocationTracker","mainPath","useLocation","pathname","split","slice","join","ReactGa","send","hitType","page","PriceChangeIndicator","change","isGrow","computedClassName","priceChangeIndicator","Math","abs","CircuitsListItemInfo","memo","cost","isLoadingInfo","position","dailyChangeIndicator","CurcuitsListItem","isSelected","selected","Body","itemBody","accessor","Filter","setFilter","setValue","debouncedSearch","inputGroup","disableFilters","defaultTableState","sortBy","desc","hiddenColumns","CircuitsListTable","deepEqual","tableData","isPrivate","info","toUpperCase","inputDescription","daily_change","useCallback","rows","prepareRow","canFilter","listGroup","row","values","CircuitsList","loadingCircuits","useSelectedCircuitId","CircuitInfoCard","circuit","ManageOrdersTab","CircuitJsonView","jsonView","src","collapsed","displayDataTypes","displayObjectSize","theme","jsonViewerTheme","CircuitStatsCard","isLoadingStats","stats","statsData","avg_cost","avg_eval_time","Completed","completed","CircuitDetailedInfo","intoType","setInfoType","currentSelectedCircuit","justified","toolbar","t","getCurrencyImage","imageContainer","content","CircuitDetailedInfoFactory","ChartTypeSelect","chartType","onSelectChartType","sm","tabs","vertical","ChartType","ChartSettingsContext","createContext","DataRangeSelect","useContext","dataRange","setDataRange","DateUnit","ChartLegend","price","chartLegend","chartName","ChartTemplate","loadingData","seriesType","seriesData","seriesOptions","chartOptions","volumesData","displayVolumes","options","localization","timeFormatter","formatUTCTimestamp","getDateFormatBasedOnDateUnit","timeScale","tickMarkFormatter","fixRightEdge","rightPriceScale","scaleMargins","top","bottom","chart","useChart","useRenderChartData","visibleRange","volumes","ProofCostChart","upColor","colors","successColor","downColor","dangerColor","priceLineWidth","useGetCircuitDashboardData","chartData","candlestickChartData","isLoadingChartData","ProofTimeGenChart","color","infoColor","proofGenTimeData","ChartSettingsProvider","hour","setDisplayVolumes","Provider","DashboardToolbar","isFullscreen","setFullScreen","CircuitInfoPanel","currentCircuit","circuitInfo","panel","renderDashOnEmptyValue","max","min","volume","CircuitDashboard","proofCostChart","setChartType","fullScreen","ChartFactory","proofGetTimeChart","OrderManagementContext","OrderManagementContextProvider","processing","setProcessing","selectedValues","setSelectedValues","OrderBookSettingsContext","OrderBookTableCell","cell","userOrdersAmount","getCellProps","OrderBookTableRow","propsClassName","displayUserOrders","onClickRow","eval_time","getRowProps","style","combinedStyle","combinedClassName","cells","defaultOrderBookState","OrderBookTable","lastOrderData","maxVolume","rowsContainer","getDataWithVolumes","renderRow","ask","lastOrderDataContainer","reverse","bid","orderBookTable","disableSortRemove","count","ordersAmount","OrderBookToolbar","priceStep","setPriceStep","setDisplayUserOrders","checkboxContainer","checkbox","checked","htmlFor","changePriceStepButton","OrderBookPriceStep","sort","OrderBook","orderBookData","useGetOrderBookData","header","orderBook","OrderBookViewFactory","isError","BaseFormGroup","hintText","labelText","uniqueId","Label","validateFn","v","isNaN","CreateTradeOrderForm","useFormContext","setValueOpts","shouldDirty","shouldValidate","valueAsNumber","detailsTitle","validate","PublicInput","rules","val","handleJsonFile","reader","FileReader","onload","obj","JSON","parse","onerror","onabort","file","at","readAsText","multiple","accept","CreateBidForm","selectedCircuitId","dispatch","useDispatch","defaultValues","statement_key","onSubmitBid","createBid","notificationActions","create","message","reset","CreateAskForm","onSubmitAsk","createAsk","CreateOrdersTabs","currentTab","onSetTab","TradeOrderType","CreateOrdersPanel","buy","tab","setTab","tabFactory","sell","TradeHistoryTable","getCellClassName","TradeHistory","useGetTradeHistoryData","TradeHistoryViewFactory","ManageOrdersPanelTabs","ToolbarPanel","onAccept","onDecline","danger","disableSortBy","ActiveOrdersTable","selectedRow","setSelectedRow","onAcceptRemoveOrder","orderId","fetcher","removeBid","removeAsk","action","canRemove","shouldUseToFixed","activeOrders","inProgressOrders","HistoryOrdersTable","ManageOrdersPanel","useGetManageOrdersData","activeOrdersData","historyOrdersData","loading","history","ProofListItem","proof","portfolio","ProofList","loadingProofs","getProofsError","useSelectedProofId","ProofListViewFactory","ProofContentCardToolbar","getProofById","useDownloadJson","fileName","downloadJson","ProofContentCard","proofData","ProofViewFactory","readonlyUser","useSearchParams","refUrlParam","get","UrlQueryParam","navigateTo","root","replace","removeItemFromLocalStorage","setChart","htmlElement","createChart","width","clientWidth","height","clientHeight","chartDefaultOptions","fitContent","handleResize","applyOptions","remove","chartDefaultTheme","background","baseDarkerColor","fontFamily","layoutTextColor","secondaryDarkerColor","gridLineColor","baseLightColor","layout","ColorType","Solid","textColor","grid","vertLines","horzLines","withVolumes","day","grouppedOrders","reduceOrdersByDate","getCandlestickData","getProofGenTimeData","getVolumesData","reduce","previousValue","currentValue","date","getUTCTimestamp","updatedOn","ordersGrouppedByDate","index","ordersCosts","high","low","open","close","time","ordersEvalTime","averageEvalTime","sum","costs","transparentSuccessColor","transparentDangerColor","markers","setPrice","series","addLineSeries","bind","seriesDefaultOptions","addCandlestickSeries","setData","setMarkers","volumeSeries","addHistogramSeries","volumeSeriesDefaultOptions","crosshairMoveHandler","param","seriesPrices","subscribeCrosshairMove","removeSeries","unsubscribeCrosshairMove","setVisibleLogicalRange","getDataRange","priceFormat","precision","minMove","transparentBaseLightColor","priceScaleId","rightEdge","distance","minute","quaterMinute","halfHour","from","itemsLimit","userAsks","userBids","getLastOrderData","sortType","customSortFunction","sortDescFirst","reduceOrdersByCostAndEvalTime","mapKey","stringify","round","set","asksData","createOrderBookData","Map","bidsData","concat","orderType","userOrders","forEach","parsedKey","some","currentAsks","completedAsks","latestCost","prevCost","firstRow","secondRow","columnId","firstValue","secondValue","mapToTradeHistoryData","i","matched_time","timestamp","formatDate","getType","costA","costB","createdBids","completedBids","createdAsks","mappedAsks","mapToManageOrdersData","mappedBids","createdOn","init_time","useParams","RouterParam","proofId","setLoading","processDownload","remoteData","a","document","createElement","download","URL","createObjectURL","Blob","clickEvt","MouseEvent","view","bubbles","cancelable","dispatchEvent","initialValue","storedValue","setStoredValue","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","defaultState","setNewState","input","filters","columnOrder","groupBy","databaseUrl","apiUrl","httpFetcher","createBearerHttpClient","createFetcher","post","query","bindVars","batchSize","then","bidToRemoveId","askToRemoveId","Currency","includes","unit","decoded","decodeJwt","preferred_username","Error","jwt_decode","expiredAt","exp","getExpiredAtFromJwt","dayjs","unix","format","floorToQuaterMinute","minutes","getMinutes","minutesToSet","setMinutes","dateString","floorTo","setSeconds","setHours","floorDateTo","trunc","getTime","fractionDigits","ProtectedRoute","readonlyAccess","redirectPath","getNavigateTo","AuthLayout","MainLayout","stickyHeader","MarketView","lazy","LoginView","PortfolioView","Page404","RegisterView","routesConfig","element","any","Router","useRoutes","loginData","db","dbName","HttpClient","requestConfig","configureClient","client","this","axios","config","delete","REACT_APP_BASE_API_URL","baseUrl","withCredentials","injectToken","baseURL","interceptors","request","use","injectJwtToken","jwtToken","headers","Authorization","base00","base01","base02","base03","base04","primaryColor","base05","base06","base07","base08","base09","base0A","secondaryColor","base0B","base0C","base0D","base0E","base0F","require","ErrorView","baseDocumentTitle","withProfiler","titleTemplate","defaultTitle","requiredEnv","gaInitOptions","testMode","onPerfEntry","dsn","Sentry","integrations","BrowserTracing","tracesSampleRate","configureSentry","measurementId","initialize","configureGA","StrictMode","getElementById","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ItemKey","serialisedValue","localStorage","getItem","ItemValue","setItem","removeItem"],"mappings":"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","file":"static/js/main.2ef2dd32.chunk.js","sourcesContent":["/**\n * @file Selectors.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { UserBalance } from 'src/models';\nimport { RootStateType } from 'src/redux';\n\n/**\n * Select current user name.\n *\n * @param s State.\n * @returns User name.\n */\nexport const selectUserName = (s: RootStateType): string | null => s.userState.name;\n\n/**\n * Select current user balance.\n *\n * @param s State.\n * @returns User balance.\n */\nexport const selectUserBalance = (s: RootStateType): UserBalance | undefined => s.userState.balance;\n","/**\n * @file Redux action creators.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createAction } from '@reduxjs/toolkit';\nimport { UserBalance } from 'src/models';\n\n/**\n * Update current user name.\n */\nexport const UpdateUserName = createAction<string | null>('@user/UPDATE_NAME');\n\n/**\n * Update current user balance.\n */\nexport const UpdateUserBalance = createAction<UserBalance | undefined>('@user/UPDATE_BALANCE');\n\n/**\n * Update user balance loading status.\n */\nexport const UpdateUserBalanceIsLoading = createAction<boolean>('@user/UPDATE_BALANCE_IS_LOADING');\n\n/**\n * Update user balance error status.\n */\nexport const UpdateUserBalanceIsLoadingError = createAction<boolean>(\n    '@user/UPDATE_BALANCE_IS_LOADING_ERROR',\n);\n\n/**\n * Set jwt token revalidation timeout.\n */\nexport const SetJwtRevalidateTimeout = createAction<number>('@user/SET_REVALIDATE_JWT_TIMEOUT');\n","/**\n * @file Reducer.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport { UserBalance } from 'src/models';\nimport {\n    UpdateUserBalance,\n    UpdateUserBalanceIsLoading,\n    UpdateUserBalanceIsLoadingError,\n    UpdateUserName,\n} from '../actions';\n\n/**\n * State.\n */\nexport type UserReducerState = {\n    name: string | null;\n    balance?: UserBalance;\n    balanceIsLoading: boolean;\n    loadingBalanceError: boolean;\n};\n\n/**\n * Initial state.\n */\nconst initialState: UserReducerState = {\n    name: null,\n    balance: undefined,\n    balanceIsLoading: false,\n    loadingBalanceError: false,\n};\n\n/**\n * Reducer of user info.\n */\nexport const UserReducer = createReducer(initialState, builder =>\n    builder\n        .addCase(UpdateUserName, (state, { payload }) => {\n            state.name = payload;\n        })\n        .addCase(UpdateUserBalance, (state, { payload }) => {\n            state.balance = payload;\n        })\n        .addCase(UpdateUserBalanceIsLoading, (state, { payload }) => {\n            state.balanceIsLoading = payload;\n        })\n        .addCase(UpdateUserBalanceIsLoadingError, (state, { payload }) => {\n            state.loadingBalanceError = payload;\n        }),\n);\n","/**\n * @file Redux saga.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { SagaIterator } from '@redux-saga/core';\nimport { call, cancel, delay, fork, put, select, take, takeLatest } from 'redux-saga/effects';\nimport { renewJwt } from 'src/api';\nimport { getItemFromLocalStorage, setItemIntoLocalStorage } from 'src/packages/LocalStorage';\nimport { calculateRenewJwtTimeGap, getUserFromJwt } from 'src/utils';\nimport { SetJwtRevalidateTimeout, UpdateUserName } from '../actions';\nimport { selectUserName } from '../selectors';\n\n/**\n * Auth main saga.\n *\n * @yields\n */\nexport function* AuthSaga(): SagaIterator<void> {\n    yield fork(TryGetUserFromLocalStorageTokenSaga);\n    yield takeLatest(SetJwtRevalidateTimeout, RenewJwtSaga);\n}\n\n/**\n * Tries to get user from localStorage token.\n *\n * @yields\n */\nfunction* TryGetUserFromLocalStorageTokenSaga(): SagaIterator<void> {\n    const jwt = getItemFromLocalStorage<string>('jwt');\n\n    if (!jwt) {\n        return;\n    }\n\n    const user = getUserFromJwt(jwt);\n\n    if (user) {\n        yield put(UpdateUserName(user));\n\n        const timeout = calculateRenewJwtTimeGap(jwt);\n        yield put(SetJwtRevalidateTimeout(timeout));\n    }\n}\n\n/**\n * Renews jwt token to prevent auto-logout from dbms instance.\n *\n * @param {ReturnType<typeof SetJwtRevalidateTimeout>} params .\n * @yields\n */\nfunction* RenewJwtSaga({\n    payload: timeout,\n}: ReturnType<typeof SetJwtRevalidateTimeout>): SagaIterator<void> {\n    const task = yield fork(processRenewJwt, timeout);\n\n    while (true) {\n        const { payload: user } = yield take(UpdateUserName);\n        if (!user) {\n            yield cancel(task);\n        }\n    }\n}\n\n/**\n * Renew jwt process.\n *\n * @param timeout Revalidation timeout.\n * @yields\n */\nfunction* processRenewJwt(timeout: number): SagaIterator<void> {\n    yield delay(timeout);\n\n    try {\n        const currentUser = yield select(selectUserName);\n\n        const result: Awaited<ReturnType<typeof renewJwt>> = yield call(renewJwt, currentUser);\n        const { jwt } = result;\n\n        if (!jwt) {\n            return;\n        }\n\n        const user = getUserFromJwt(jwt);\n        const timeout = calculateRenewJwtTimeGap(jwt);\n\n        if (user === currentUser) {\n            setItemIntoLocalStorage('jwt', jwt);\n\n            yield put(SetJwtRevalidateTimeout(timeout));\n        }\n    } catch (e) {\n        throw e;\n    }\n}\n","/**\n * @file Redux saga.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { call, put, StrictEffect } from 'redux-saga/effects';\nimport { UpdateUserName } from '../actions';\n\n/**\n * Removes current user if api call response returns 401 error.\n * Consider to wrap all significant api calls into this.\n *\n * @param fn Api call.\n * @param args - Api call arguments.\n * @returns Api call result or throws error.\n * @throws Api call error.\n * @yields\n * @example\n * ```ts\n * const result = yield call(ProtectedCall, callMethod, callArguments);\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function* ProtectedCall<T extends (...args: any[]) => any>(\n    fn: T,\n    ...args: Parameters<T>\n): Generator<StrictEffect, unknown, unknown> {\n    try {\n        const result: unknown = yield call(fn, ...args);\n\n        return result;\n    } catch (e) {\n        if (e.response.data.code === 401) {\n            yield put(UpdateUserName(null));\n        }\n\n        throw e;\n    }\n}\n","/**\n * @file Redux action creators.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createAction } from '@reduxjs/toolkit';\nimport { Circuit, CircuitInfo, CircuitStats } from 'src/models';\n\n/**\n * Update circuits list.\n */\nexport const UpdateCircuitsList = createAction<Circuit[]>('@circuits/UPDATE_CIRCUITS_LIST');\n\n/**\n * Update selected circuit id.\n */\nexport const UpdateSelectedCircuitId = createAction<string>('@circuits/UPDATE_SELECTED_CIRCUIT_ID');\n\n/**\n * Update circuits loading state.\n */\nexport const UpdateIsLoadingCircuits = createAction<boolean>('@circuits/UPDATE_IS_LOADING');\n\n/**\n * Update circuits error state.\n */\nexport const UpdateCircuitsError = createAction<boolean>('@circuits/UPDATE_ERROR');\n\n/**\n * Update circuit info list.\n */\nexport const UpdateCircuitsInfoList = createAction<CircuitInfo[]>('@circuits/UPDATE_CIRCUITS_INFO');\n\n/**\n * Update circuit info loading state.\n */\nexport const UpdateIsLoadingCircuitsInfo = createAction<boolean>(\n    '@circuits/UPDATE_IS_LOADING_CIRCUITS_INFO',\n);\n\n/**\n * Update circuit stats.\n */\nexport const UpdateCircuitsStats = createAction<CircuitStats[]>('@circuits/UPDATE_STATS');\n\n/**\n * Update circuit stats loading state.\n */\nexport const UpdateIsLoadingCircuitsStats = createAction<boolean>(\n    '@circuits/UPDATE_IS_LOADING_CIRCUITS_STATS',\n);\n","/**\n * @file Redux action creators.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createAction } from '@reduxjs/toolkit';\nimport { Bid } from 'src/models';\n\n/**\n * Update bids list.\n */\nexport const UpdateBidsList = createAction<Bid[]>('@bids/UPDATE_BIDS_LIST');\n\n/**\n * Add bid.\n */\nexport const AddBid = createAction<Bid>('@bids/ADD_BID');\n\n/**\n * Update bids loading state.\n */\nexport const UpdateIsLoadingBids = createAction<boolean>('@bids/UPDATE_IS_LOADING');\n\n/**\n * Update bids error state.\n */\nexport const UpdateBidsError = createAction<boolean>('@bids/UPDATE_ERROR');\n\n/**\n * Remove bid.\n */\nexport const RemoveBid = createAction<Bid['_key']>('@bids/REMOVE_BID');\n","/**\n * @file Redux action creators.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createAction } from '@reduxjs/toolkit';\nimport { Ask } from 'src/models';\n\n/**\n * Update asks list.\n */\nexport const UpdateAsksList = createAction<Ask[]>('@asks/UPDATE_ASKS_LIST');\n\n/**\n * Add ask.\n */\nexport const AddAsk = createAction<Ask>('@asks/ADD_ASK');\n\n/**\n * Update asks loading state.\n */\nexport const UpdateIsLoadingAsks = createAction<boolean>('@asks/UPDATE_IS_LOADING');\n\n/**\n * Update asks error state.\n */\nexport const UpdateAsksError = createAction<boolean>('@asks/UPDATE_ERROR');\n\n/**\n * Remove ask.\n */\nexport const RemoveAsk = createAction<Ask['_key']>('@asks/REMOVE_ASK');\n","/**\n * @file Reducer.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport { Circuit, CircuitInfo, CircuitStats } from 'src/models';\nimport {\n    UpdateCircuitsList,\n    UpdateSelectedCircuitId,\n    UpdateIsLoadingCircuits,\n    UpdateCircuitsError,\n    UpdateCircuitsInfoList,\n    UpdateIsLoadingCircuitsInfo,\n    UpdateCircuitsStats,\n    UpdateIsLoadingCircuitsStats,\n} from '../actions';\n\n/**\n * State.\n */\nexport type CircuitsReducerState = {\n    circuits: Circuit[];\n    selectedid?: string;\n    isLoading: boolean;\n    error?: boolean;\n    circuitsInfo: CircuitInfo[];\n    isLoadingCircuitsInfo: boolean;\n    circuitsStats: CircuitStats[];\n    isLoadingCircuitsStats: boolean;\n};\n\n/**\n * Initial state.\n */\nconst initialState: CircuitsReducerState = {\n    circuits: [],\n    selectedid: undefined,\n    isLoading: false,\n    error: false,\n    circuitsInfo: [],\n    isLoadingCircuitsInfo: false,\n    circuitsStats: [],\n    isLoadingCircuitsStats: false,\n};\n\n/**\n * Reducer of circuits.\n */\nexport const CircuitsReducer = createReducer(initialState, builder =>\n    builder\n        .addCase(UpdateCircuitsList, (state, { payload }) => ({\n            ...state,\n            circuits: payload,\n        }))\n        .addCase(UpdateSelectedCircuitId, (state, { payload }) => ({\n            ...state,\n            selectedid: payload,\n        }))\n        .addCase(UpdateIsLoadingCircuits, (state, { payload }) => ({\n            ...state,\n            isLoading: payload,\n        }))\n        .addCase(UpdateCircuitsError, (state, { payload }) => ({\n            ...state,\n            error: payload,\n        }))\n        .addCase(UpdateCircuitsInfoList, (state, { payload }) => ({\n            ...state,\n            circuitsInfo: payload,\n        }))\n        .addCase(UpdateIsLoadingCircuitsInfo, (state, { payload }) => ({\n            ...state,\n            isLoadingCircuitsInfo: payload,\n        }))\n        .addCase(UpdateCircuitsStats, (state, { payload }) => ({\n            ...state,\n            circuitsStats: payload,\n        }))\n        .addCase(UpdateIsLoadingCircuitsStats, (state, { payload }) => ({\n            ...state,\n            isLoadingCircuitsStats: payload,\n        })),\n);\n","/**\n * @file Reducer.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport { Ask } from 'src/models';\nimport {\n    UpdateAsksList,\n    AddAsk,\n    UpdateAsksError,\n    UpdateIsLoadingAsks,\n    RemoveAsk,\n} from '../actions';\n\n/**\n * State.\n */\nexport type AsksReducerState = {\n    asks: Ask[];\n    isLoading: boolean;\n    error: boolean;\n};\n\n/**\n * Initial state.\n */\nconst initialState: AsksReducerState = {\n    asks: [],\n    isLoading: false,\n    error: false,\n};\n\n/**\n * Reducer of asks.\n */\nexport const AsksReducer = createReducer(initialState, builder =>\n    builder\n        .addCase(UpdateAsksList, (state, { payload }) => ({\n            ...state,\n            asks: payload,\n        }))\n        .addCase(AddAsk, (state, { payload }) => {\n            state.asks.push(payload);\n        })\n        .addCase(UpdateIsLoadingAsks, (state, { payload }) => ({\n            ...state,\n            isLoading: payload,\n        }))\n        .addCase(UpdateAsksError, (state, { payload }) => ({\n            ...state,\n            error: payload,\n        }))\n        .addCase(RemoveAsk, (state, { payload }) => ({\n            ...state,\n            asks: state.asks.filter(x => payload !== x._key),\n        })),\n);\n","/**\n * @file Reducer.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport { Bid } from 'src/models';\nimport {\n    UpdateBidsList,\n    AddBid,\n    UpdateBidsError,\n    UpdateIsLoadingBids,\n    RemoveBid,\n} from '../actions';\n\n/**\n * State.\n */\nexport type BidsReducerState = {\n    bids: Bid[];\n    isLoading: boolean;\n    error: boolean;\n};\n\n/**\n * Initial state.\n */\nconst initialState: BidsReducerState = {\n    bids: [],\n    isLoading: false,\n    error: false,\n};\n\n/**\n * Reducer of bids.\n */\nexport const BidsReducer = createReducer(initialState, builder =>\n    builder\n        .addCase(UpdateBidsList, (state, { payload }) => ({\n            ...state,\n            bids: payload,\n        }))\n        .addCase(AddBid, (state, { payload }) => {\n            state.bids.push(payload);\n        })\n        .addCase(UpdateIsLoadingBids, (state, { payload }) => ({\n            ...state,\n            isLoading: payload,\n        }))\n        .addCase(UpdateBidsError, (state, { payload }) => ({\n            ...state,\n            error: payload,\n        }))\n        .addCase(RemoveBid, (state, { payload }) => ({\n            ...state,\n            asks: state.bids.filter(x => payload !== x._key),\n        })),\n);\n","/**\n * @file Selectors.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createSelector } from '@reduxjs/toolkit';\nimport { RootStateType } from '../../RootStateType';\n\nconst selectCircuitsList = (s: RootStateType) => s.circuitsState.circuits;\n\n/**\n * Selects current circuit id.\n *\n * @param s State.\n * @returns Current selected circuit id.\n */\nexport const selectCurrentCircuitId = (s: RootStateType): string | undefined =>\n    s.circuitsState.selectedid;\n\n/**\n * Sorted and filtered circuits selector.\n */\nexport const selectCircuits = createSelector(selectCircuitsList, circuits => circuits);\n\n/**\n * Selected circuit selector.\n */\nexport const selectCurrentCircuit = createSelector(\n    selectCircuits,\n    selectCurrentCircuitId,\n    (circuits, selectedid) => circuits.find(x => x._key === selectedid),\n);\n","/**\n * @file Selectors.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createSelector } from '@reduxjs/toolkit';\nimport { Bid } from 'src/models';\nimport { RootStateType } from 'src/redux';\nimport { selectUserName } from '../../login';\n\n/**\n * Select all bids.\n *\n * @param s State.\n * @returns All bids.\n */\nexport const selectBidsList = (s: RootStateType): Bid[] => s.bidsState.bids;\n\n/**\n * Select bids, created by current user.\n */\nexport const selectCurrentUserBids = createSelector(selectBidsList, selectUserName, (bids, user) =>\n    bids.filter(x => x.sender === user),\n);\n\n/**\n * Select bids, created by current user with 'created' status.\n */\nexport const selectCurrentUserCreatedBids = createSelector(selectCurrentUserBids, asks =>\n    asks.filter(x => x.status === 'created'),\n);\n\n/**\n * Select bids, created by current user with 'compelted' status.\n */\nexport const selectCurrentUserCompletedBids = createSelector(selectCurrentUserBids, asks =>\n    asks.filter(x => x.status === 'completed'),\n);\n","/**\n * @file Selectors.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createSelector } from '@reduxjs/toolkit';\nimport { Ask } from 'src/models';\nimport { RootStateType } from 'src/redux';\nimport { selectUserName } from '../../login';\n\n/**\n * Select all asks from state.\n *\n * @param s State.\n * @returns All asks.\n */\nexport const selectAsksList = (s: RootStateType): Ask[] => s.asksState.asks;\n\n/**\n * Select all completed asks.\n */\nexport const selectCompletedAsks = createSelector(selectAsksList, asks =>\n    asks.filter(x => x.status === 'completed'),\n);\n\n/**\n * Select asks, created by current user.\n */\nexport const selectCurrentUserAsks = createSelector(selectAsksList, selectUserName, (asks, user) =>\n    asks.filter(x => x.sender === user),\n);\n\n/**\n * Select asks, created by current user with 'created' status.\n */\nexport const selectCurrentUserActiveAsks = createSelector(selectCurrentUserAsks, asks =>\n    asks.filter(x => x.status === 'created' || x.status === 'processing'),\n);\n\n/**\n * Select asks, created by current user with 'compelted' status.\n */\nexport const selectCurrentUserCompletedAsks = createSelector(selectCurrentUserAsks, asks =>\n    asks.filter(x => x.status === 'completed'),\n);\n","/**\n * @file Redux saga.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { SagaIterator } from 'redux-saga';\nimport { delay, call, take, fork, cancel } from 'redux-saga/effects';\nimport { UpdateUserName } from '../../login';\n\n/**\n * Helps to revalidate data on interval. Revalidation starts when auth completes.\n * Stops data revalidation when user logs out.\n *\n * TODO - implement pause revalidation when user leaves tab (but doesn't close it).\n *\n * @param fnToRevalidate - Function to revalidate data. Can be Generator or common function.\n * @param revalidateInterval - Interval between calling fn.\n * @param args - Any arguments to pass into fn.\n * @returns Revalidation saga.\n * @yields\n */\nexport function* RevalidateSaga<T extends (...args: unknown[]) => unknown>(\n    fnToRevalidate: T,\n    revalidateInterval: number,\n    ...args: Parameters<T>\n): SagaIterator {\n    while (true) {\n        const { payload: user } = yield take(UpdateUserName);\n\n        if (user) {\n            yield call(Revalidate, fnToRevalidate, revalidateInterval, ...args);\n        }\n    }\n}\n\n// eslint-disable-next-line jsdoc/require-jsdoc\nexport function* Revalidate<T extends (...args: unknown[]) => unknown>(\n    fnToRevalidate: T,\n    revalidateInterval: number,\n    ...args: Parameters<T>\n): SagaIterator {\n    const task = yield fork(function* () {\n        while (true) {\n            yield call(fnToRevalidate, ...args);\n            yield delay(revalidateInterval);\n        }\n    });\n\n    const { payload: user } = yield take(UpdateUserName);\n\n    if (!user) {\n        yield cancel(task);\n    }\n}\n","/**\n * @file Redux saga.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { call, put, select, takeLatest, fork, all } from 'redux-saga/effects';\nimport { SagaIterator } from '@redux-saga/core';\nimport { getCircuits, getCircuitsInfo, getCircuitsStats } from 'src/api';\nimport { Circuit, CircuitInfo, CircuitStats } from 'src/models';\nimport {\n    UpdateCircuitsError,\n    UpdateCircuitsInfoList,\n    UpdateCircuitsList,\n    UpdateCircuitsStats,\n    UpdateIsLoadingCircuits,\n    UpdateIsLoadingCircuitsInfo,\n    UpdateIsLoadingCircuitsStats,\n    UpdateSelectedCircuitId,\n} from '../actions';\nimport { ProtectedCall, UpdateUserName } from '../../login';\nimport { selectCurrentCircuitId } from '../selectors';\nimport { RevalidateSaga } from '../../common';\n\nconst revalidateCircuitsInfoInterval =\n    Number(process.env.REACT_APP_REVALIDATE_DATA_INTERVAL) || 3000;\n\n/**\n * Circuits main saga.\n *\n * @yields\n */\nexport function* CircuitsSaga(): SagaIterator<void> {\n    yield takeLatest(UpdateUserName, GetCircuitsSaga);\n    yield takeLatest(UpdateCircuitsList, SelectCircuitSaga);\n    yield fork(RevalidateSaga, GetCircuitsAdditionalData, revalidateCircuitsInfoInterval);\n}\n\n/**\n * Get circuits saga.\n *\n * @param {ReturnType<typeof UpdateUserName>} action Action return type.\n * @yields\n */\nfunction* GetCircuitsSaga({\n    payload: user,\n}: ReturnType<typeof UpdateUserName>): SagaIterator<void> {\n    if (!user) {\n        return;\n    }\n\n    try {\n        yield put(UpdateIsLoadingCircuits(true));\n        yield put(UpdateCircuitsError(false));\n\n        const circuitsList: Circuit[] = yield call(ProtectedCall, getCircuits);\n\n        if (circuitsList !== undefined) {\n            yield put(UpdateCircuitsList(circuitsList));\n        }\n    } catch {\n        yield put(UpdateCircuitsError(true));\n    } finally {\n        yield put(UpdateIsLoadingCircuits(false));\n    }\n}\n\n/**\n * Selects first circuit in list after circuits list update (if none is selected).\n *\n * @param {ReturnType<typeof UpdateCircuitsList>} action - Action.\n * @yields\n */\nfunction* SelectCircuitSaga({\n    payload,\n}: ReturnType<typeof UpdateCircuitsList>): SagaIterator<void> {\n    const currentCircuitId = yield select(selectCurrentCircuitId);\n\n    if (currentCircuitId) {\n        return;\n    }\n\n    if (!payload.length) {\n        return;\n    }\n\n    yield put(UpdateSelectedCircuitId(payload[0]._key));\n}\n\n/**\n * Revalidate circuits info.\n *\n * @yields\n */\nfunction* GetCircuitsInfoSaga() {\n    try {\n        yield put(UpdateIsLoadingCircuitsInfo(true));\n        const circutsInfo: CircuitInfo[] = yield call(ProtectedCall, getCircuitsInfo);\n        yield put(UpdateCircuitsInfoList(circutsInfo));\n    } catch {\n        // Do nothing\n    } finally {\n        yield put(UpdateIsLoadingCircuitsInfo(false));\n    }\n}\n\n/**\n * Revalidate circuits stats.\n *\n * @yields\n */\nfunction* GetCircuitsStatsSaga() {\n    try {\n        yield put(UpdateIsLoadingCircuitsStats(true));\n        const circutsStats: CircuitStats[] = yield call(ProtectedCall, getCircuitsStats);\n        yield put(UpdateCircuitsStats(circutsStats));\n    } catch {\n        // Do nothing\n    } finally {\n        yield put(UpdateIsLoadingCircuitsStats(false));\n    }\n}\n\n/**\n * Revalidate circuit additional data (info and statistics).\n *\n * @yields\n */\nfunction* GetCircuitsAdditionalData() {\n    yield all([fork(GetCircuitsInfoSaga), fork(GetCircuitsStatsSaga)]);\n}\n","/**\n * @file Redux saga.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { call, fork, put, select, takeLatest } from 'redux-saga/effects';\nimport { SagaIterator } from '@redux-saga/core';\nimport { getBidsByCircuitId } from 'src/api';\nimport { Bid } from 'src/models';\nimport { ProtectedCall } from 'src/redux';\nimport {\n    UpdateSelectedCircuitId,\n    UpdateBidsList,\n    UpdateIsLoadingBids,\n    UpdateBidsError,\n} from '../actions';\nimport { selectCurrentCircuitId } from '../selectors';\nimport { RevalidateSaga } from '../../common';\n\nconst revalidateBidsDelay = Number(process.env.REACT_APP_REVALIDATE_DATA_INTERVAL) || 3000;\n\n/**\n * Bids main saga.\n *\n * @yields\n */\nexport function* BidsSaga(): SagaIterator<void> {\n    yield takeLatest(UpdateSelectedCircuitId, function* () {\n        yield put(UpdateBidsList([]));\n        yield fork(GetBidsSaga);\n    });\n    yield fork(RevalidateSaga, GetBidsSaga, revalidateBidsDelay);\n}\n\n/**\n * Get bids saga.\n *\n * @yields\n */\nfunction* GetBidsSaga(): SagaIterator<void> {\n    const circuitId: string | undefined = yield select(selectCurrentCircuitId);\n\n    if (circuitId === undefined) {\n        return;\n    }\n\n    try {\n        yield put(UpdateBidsError(false));\n        yield put(UpdateIsLoadingBids(true));\n\n        const bids: Bid[] = yield call(ProtectedCall, getBidsByCircuitId, circuitId);\n\n        if (bids !== undefined) {\n            yield put(UpdateBidsList(bids));\n        }\n    } catch (e) {\n        yield put(UpdateBidsError(true));\n    } finally {\n        yield put(UpdateIsLoadingBids(false));\n    }\n}\n","/**\n * @file Redux saga.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { call, fork, put, takeLatest, select } from 'redux-saga/effects';\nimport { SagaIterator } from '@redux-saga/core';\nimport { getAsksByCircuitId } from 'src/api';\nimport { Ask } from 'src/models';\nimport { ProtectedCall } from 'src/redux';\nimport {\n    UpdateSelectedCircuitId,\n    UpdateAsksList,\n    UpdateIsLoadingAsks,\n    UpdateAsksError,\n} from '../actions';\nimport { selectCurrentCircuitId } from '../selectors';\nimport { RevalidateSaga } from '../../common';\n\nconst revalidateAsksDelay = Number(process.env.REACT_APP_REVALIDATE_DATA_INTERVAL) || 3000;\n\n/**\n * Asks main saga.\n *\n * @yields\n */\nexport function* AsksSaga(): SagaIterator<void> {\n    yield takeLatest(UpdateSelectedCircuitId, function* () {\n        yield put(UpdateAsksList([]));\n        yield fork(GetAsksSaga);\n    });\n    yield fork(RevalidateSaga, GetAsksSaga, revalidateAsksDelay);\n}\n\n/**\n * Get asks saga.\n *\n * @yields\n */\nfunction* GetAsksSaga(): SagaIterator<void> {\n    const circuitId: string | undefined = yield select(selectCurrentCircuitId);\n\n    if (circuitId === undefined) {\n        return;\n    }\n\n    try {\n        yield put(UpdateAsksError(false));\n        yield put(UpdateIsLoadingAsks(true));\n\n        const asks: Ask[] = yield call(ProtectedCall, getAsksByCircuitId, circuitId);\n\n        if (asks !== undefined) {\n            yield put(UpdateAsksList(asks));\n        }\n    } catch (e) {\n        yield put(UpdateAsksError(true));\n    } finally {\n        yield put(UpdateIsLoadingAsks(false));\n    }\n}\n","/**\n * @file Redux saga.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { SagaIterator } from '@redux-saga/core';\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { getUserBalance } from 'src/api';\nimport { UserBalance } from 'src/models';\nimport {\n    UpdateUserBalance,\n    UpdateUserBalanceIsLoading,\n    UpdateUserBalanceIsLoadingError,\n    UpdateUserName,\n} from '../actions';\nimport { ProtectedCall } from './ProtectedCall';\nimport { AddAsk, AddBid } from '../../market';\n\n/**\n * User main saga.\n *\n * @yields\n */\nexport function* UserSaga(): SagaIterator<void> {\n    yield takeLatest([UpdateUserName, AddAsk, AddBid], GetUserInfoSaga);\n}\n\n/**\n * Gets user info after updating user.\n *\n * @param {ReturnType<typeof UpdateUserName>} action Action return type.\n * @yields\n */\nfunction* GetUserInfoSaga({\n    payload: user,\n}: ReturnType<typeof UpdateUserName>): SagaIterator<void> {\n    const isReadonly = user === process.env.REACT_APP_READONLY_USER;\n    if (isReadonly || !user) {\n        return;\n    }\n\n    try {\n        yield put(UpdateUserBalanceIsLoading(true));\n        yield put(UpdateUserBalanceIsLoadingError(false));\n\n        const balance: UserBalance | undefined = yield call(ProtectedCall, getUserBalance, user);\n        yield put(UpdateUserBalance(balance));\n    } catch {\n        yield put(UpdateUserBalanceIsLoadingError(true));\n    } finally {\n        yield put(UpdateUserBalanceIsLoading(false));\n    }\n}\n","/**\n * @file Redux action creators.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createAction } from '@reduxjs/toolkit';\nimport { Proof } from 'src/models';\n\n/**\n * Update proof list.\n */\nexport const UpdateProofList = createAction<Proof[]>('@proof/UPDATE_PROOF_LIST');\n\n/**\n * Update proofs loading state.\n */\nexport const UpdateIsLoadingProofs = createAction<boolean>('@proof/UPDATE_IS_LOADING');\n\n/**\n * Update proof error state.\n */\nexport const UpdateProofsError = createAction<boolean>('@proof/UPDATE_ERROR');\n\n/**\n * Update selected circuit id.\n */\nexport const UpdateSelectedProofId = createAction<string>('@proof/UPDATE_SELECTED_PROOF_ID');\n","/**\n * @file Reducer.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport { Proof } from 'src/models';\nimport {\n    UpdateIsLoadingProofs,\n    UpdateProofList,\n    UpdateProofsError,\n    UpdateSelectedProofId,\n} from '../actions';\n\n/**\n * State.\n */\nexport type ProofReducerState = {\n    proofs: Proof[];\n    isLoadingProofs: boolean;\n    error: boolean;\n    selectedProofId?: string;\n};\n\n/**\n * Initial state.\n */\nconst initialState: ProofReducerState = {\n    proofs: [],\n    isLoadingProofs: false,\n    error: false,\n    selectedProofId: undefined,\n};\n\n/**\n * Reducer of proofs.\n */\nexport const ProofReducer = createReducer(initialState, builder =>\n    builder\n        .addCase(UpdateProofList, (state, { payload }) => ({\n            ...state,\n            proofs: payload,\n        }))\n        .addCase(UpdateIsLoadingProofs, (state, { payload }) => ({\n            ...state,\n            isLoadingProofs: payload,\n        }))\n        .addCase(UpdateProofsError, (state, { payload }) => ({\n            ...state,\n            error: payload,\n        }))\n        .addCase(UpdateSelectedProofId, (s, { payload }) => {\n            s.selectedProofId = payload;\n        }),\n);\n","/**\n * @file Selectors.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createSelector } from '@reduxjs/toolkit';\nimport { Proof } from 'src/models';\nimport { RootStateType } from 'src/redux';\n\n/**\n * Select all proofs from state.\n *\n * @param s State.\n * @returns All proofs.\n */\nexport const selectProofList = (s: RootStateType): Proof[] => s.proofState.proofs;\n\n/**\n * Select selected proof id.\n *\n * @param s State.\n * @returns Selected proof id.\n */\nexport const selectSelectedProofId = (s: RootStateType): string | undefined =>\n    s.proofState.selectedProofId;\n\n/**\n * Select current selected proof.\n */\nexport const selectSelectedProof = createSelector(\n    selectProofList,\n    selectSelectedProofId,\n    (proofs, id) => proofs.find(p => p._key === id),\n);\n","/**\n * @file Redux saga.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { call, put, select, takeLatest } from 'redux-saga/effects';\nimport { SagaIterator } from '@redux-saga/core';\nimport { getProofs } from 'src/api';\nimport { Proof } from 'src/models';\nimport {\n    UpdateProofList,\n    UpdateIsLoadingProofs,\n    UpdateProofsError,\n    UpdateSelectedProofId,\n} from '../actions';\nimport { RootStateType } from '../../RootStateType';\nimport { ProtectedCall, UpdateUserName } from '../../login';\nimport { selectSelectedProofId } from '../selectors';\n\nconst selectUser = (s: RootStateType) => s.userState.name;\n\n/**\n * Proof main saga.\n *\n * @yields\n */\nexport function* ProofSaga(): SagaIterator<void> {\n    yield takeLatest(UpdateUserName, GetProofSaga);\n    yield takeLatest(UpdateProofList, SelectProofSaga);\n}\n\n/**\n * Get proof saga.\n *\n * @yields\n */\nfunction* GetProofSaga(): SagaIterator<void> {\n    const user: ReturnType<typeof selectUser> = yield select(selectUser);\n\n    if (!user) {\n        return;\n    }\n\n    try {\n        yield put(UpdateProofsError(false));\n        yield put(UpdateIsLoadingProofs(true));\n\n        const proofList: Proof[] = yield call(ProtectedCall, getProofs, user);\n\n        if (proofList !== undefined) {\n            yield put(UpdateProofList(proofList));\n        }\n    } catch (e) {\n        yield put(UpdateProofsError(true));\n    } finally {\n        yield put(UpdateIsLoadingProofs(false));\n    }\n}\n\n/**\n * Selects first circuit in list after circuits list update (if none is selected).\n *\n * @param {ReturnType<typeof UpdateProofList>} action - Action.\n * @yields\n */\nfunction* SelectProofSaga({ payload }: ReturnType<typeof UpdateProofList>): SagaIterator<void> {\n    const currentCircuitId = yield select(selectSelectedProofId);\n\n    if (currentCircuitId) {\n        return;\n    }\n\n    if (!payload.length) {\n        return;\n    }\n\n    yield put(UpdateSelectedProofId(payload[0]._key));\n}\n","/**\n * @file Root reducer.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { combineReducers } from 'redux';\nimport { UserReducer } from './login';\nimport { CircuitsReducer, BidsReducer, AsksReducer } from './market';\nimport { ProofReducer } from './portfolio';\nimport { RootStateType } from './RootStateType';\n\n/**\n * Root reducer.\n */\nexport const RootReducer = combineReducers<RootStateType>({\n    circuitsState: CircuitsReducer,\n    asksState: AsksReducer,\n    bidsState: BidsReducer,\n    proofState: ProofReducer,\n    userState: UserReducer,\n});\n","/**\n * @file Root saga.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { all, AllEffect, fork, ForkEffect } from 'redux-saga/effects';\nimport { CircuitsSaga, AsksSaga, BidsSaga } from './market';\nimport { AuthSaga, UserSaga } from './login';\nimport { ProofSaga } from './portfolio';\n\n/**\n * RootSaga.\n *\n * @yields\n */\nexport default function* RootSaga(): Iterator<AllEffect<ForkEffect>> {\n    yield all([\n        fork(AuthSaga),\n        fork(UserSaga),\n        fork(CircuitsSaga),\n        fork(AsksSaga),\n        fork(BidsSaga),\n        fork(ProofSaga),\n    ]);\n}\n","/**\n * @file State.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { configureStore, Middleware } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport { RootReducer } from './rootReducer';\nimport RootSaga from './RootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares: Middleware[] = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n    middlewares.push(logger);\n}\n\nexport const store = configureStore({\n    reducer: RootReducer,\n    middleware: getDefaultMiddleware => [...getDefaultMiddleware({ thunk: false }), ...middlewares],\n    devTools: process.env.NODE_ENV !== 'production',\n});\n\nsagaMiddleware.run(RootSaga);\n","/**\n * @file Hooks helpers.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { RootStateType } from '../RootStateType';\n\n/**\n * Typed use selector.\n */\nexport const useAppSelector: TypedUseSelectorHook<RootStateType> = useSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CircuitsList_container__1qQmw\",\"inputGroup\":\"CircuitsList_inputGroup__27p_A\",\"dailyChangeIndicator\":\"CircuitsList_dailyChangeIndicator__RTBF4\",\"selected\":\"CircuitsList_selected__1dL4j\",\"listGroup\":\"CircuitsList_listGroup__1Tbj6\",\"itemBody\":\"CircuitsList_itemBody__1Zh-p\"};","/**\n * @file Enum declaration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Detailed info tab.\n */\nexport enum DetailedInfoTab {\n    info = 'Circuit info',\n    stats = 'Statistics',\n}\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Icon } from '@nilfoundation/react-components';\nimport { socialLinks } from '../../../constants';\nimport styles from './SocialLinks.module.scss';\n\n/**\n * Props.\n */\ntype SocialLinksProps = {\n    className?: string;\n    bottomIndent?: boolean;\n};\n\n/**\n * Social links.\n *\n * @param {SocialLinksProps} props Props.\n * @returns React component.\n */\nexport const SocialLinks = ({ className, bottomIndent }: SocialLinksProps): ReactElement => (\n    <ul\n        aria-label=\"Social media links\"\n        className={`${styles.socialLinks} ${className ?? ''} ${\n            bottomIndent ? styles.bottomIndent : ''\n        }`}\n    >\n        {socialLinks.map(({ icon, url }) => (\n            <li key={icon}>\n                <a href={url}>\n                    <Icon\n                        iconName={`fa-brands fa-${icon}`}\n                        srOnlyText={`${icon} link`}\n                    />\n                </a>\n            </li>\n        ))}\n    </ul>\n);\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\n\n/**\n * Copyright text.\n *\n * @returns React component.\n */\nexport const Copyright = (): ReactElement => {\n    return <>{`Copyright © =nil; Foundation ${new Date().getFullYear()}`}</>;\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Container, Row, Col } from '@nilfoundation/react-components';\nimport { SocialLinks } from '../SocialLinks';\nimport { Copyright } from '../Copyright';\nimport styles from './Footer.module.scss';\n\n/**\n * Footer.\n *\n * @returns React component.\n */\nexport const Footer = (): ReactElement => (\n    <Container className={styles.footer}>\n        <Row>\n            <Col>\n                <SocialLinks bottomIndent />\n            </Col>\n        </Row>\n        <Row className=\"text-center\">\n            <Col>\n                <Copyright />\n            </Col>\n        </Row>\n    </Container>\n);\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Dropdown } from '@nilfoundation/react-components';\nimport { navigationLinks } from '../../../constants';\nimport styles from './MobileMenu.module.scss';\n\n/**\n * Mobile menu.\n *\n * @returns React component.\n */\nexport const MobileMenu = (): ReactElement => {\n    return (\n        <Dropdown className={styles.menu}>\n            <Dropdown.Button\n                className={styles.button}\n                iconNameDropdownClosed=\"fa fa-bars\"\n                iconNameDropdownOpend=\"fa fa-times\"\n            />\n            <Dropdown.Menu align=\"right\">\n                {navigationLinks.map(({ title, path }) => (\n                    <Dropdown.Item\n                        href={path}\n                        key={title}\n                    >\n                        {title}\n                    </Dropdown.Item>\n                ))}\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n","/**\n * @file React functional component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode } from 'react';\nimport { Jumbotron } from '@nilfoundation/react-components';\nimport styles from './AuthCard.module.scss';\n\n/**\n * Props.\n */\ntype AuthCardProps = {\n    children: ReactNode;\n};\n\n/**\n * Auth card template.\n *\n * @param {AuthCardProps} props - Props.\n * @returns React component.\n */\nexport const AuthCard = ({ children }: AuthCardProps): ReactElement => {\n    return <Jumbotron className={styles.authCard}>{children}</Jumbotron>;\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useRef, useState, useEffect } from 'react';\nimport {\n    Image,\n    InputGroup,\n    Icon,\n    Input,\n    Size,\n    Button,\n    Variant,\n    Form,\n    Spinner,\n} from '@nilfoundation/react-components';\nimport { CSSTransition } from 'react-transition-group';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { Path } from 'src/routing';\nimport { LoginData } from 'src/models';\nimport { login } from 'src/api';\nimport { useLogin } from 'src/hooks';\nimport { AuthCard } from '../AuthCard';\nimport styles from './LoginForm.module.scss';\n\n/**\n * Password input type.\n */\ntype PwdInputType = 'password' | 'text';\n\n/**\n * Login form.\n *\n * @returns React component.\n */\nexport const LoginForm = (): ReactElement => {\n    const nodeRef = useRef(null);\n    const userNameInputRef = useRef<HTMLInputElement | null>(null);\n    const processLogin = useLogin();\n    const [errorMessage, setErrorMessage] = useState<string>();\n    const [pwdInputType, setPwdInputType] = useState<PwdInputType>('password');\n    const pwdInputIconName = pwdInputType === 'password' ? 'fa-eye-slash' : 'fa-eye';\n    const switchPwdInputType = () =>\n        setPwdInputType(pwdInputType === 'password' ? 'text' : 'password');\n\n    const {\n        register,\n        formState: { isSubmitting, isValid, errors },\n        handleSubmit,\n    } = useForm<LoginData>({\n        mode: 'onChange',\n    });\n\n    const onSubmitLogin = handleSubmit(async (data: LoginData): Promise<void> => {\n        setErrorMessage('');\n        try {\n            const { jwt } = await login(data);\n            processLogin(jwt);\n        } catch (e) {\n            setErrorMessage('Login error');\n        }\n    });\n\n    useEffect(() => {\n        userNameInputRef.current && userNameInputRef.current.focus();\n    }, []);\n\n    const { ref, ...restRegister } = register('username', { required: true });\n\n    return (\n        <AuthCard>\n            <Image\n                source={`${process.env.PUBLIC_URL}/logo512x384.png`}\n                alt=\"=nil; Foundation logo\"\n                responsive\n                rounded\n                className={styles.logoImage}\n            />\n            <Form>\n                <Form.Group hasError={!!errors['username']}>\n                    <InputGroup\n                        size={Size.lg}\n                        className={styles.control}\n                    >\n                        <InputGroup.Addon>\n                            <Icon\n                                iconName=\"fa-solid fa-user\"\n                                className={styles.icon}\n                            />\n                        </InputGroup.Addon>\n                        <Input\n                            type=\"text\"\n                            id=\"userName\"\n                            placeholder=\"username\"\n                            aria-label=\"username\"\n                            {...restRegister}\n                            ref={e => {\n                                ref(e);\n                                userNameInputRef.current = e;\n                            }}\n                        />\n                    </InputGroup>\n                </Form.Group>\n                <Form.Group hasError={!!errors['password']}>\n                    <InputGroup\n                        size={Size.lg}\n                        className={styles.control}\n                    >\n                        <InputGroup.Addon>\n                            <Icon\n                                iconName=\"fa-solid fa-lock\"\n                                className={styles.icon}\n                            />\n                        </InputGroup.Addon>\n                        <Input\n                            type={pwdInputType}\n                            id=\"password\"\n                            aria-label=\"password\"\n                            placeholder=\"password\"\n                            autoComplete=\"off\"\n                            {...register('password')}\n                        />\n                        <InputGroup.Buttons>\n                            <Button onClick={switchPwdInputType}>\n                                <Icon\n                                    iconName={`fa-solid ${pwdInputIconName}`}\n                                    className={styles.icon}\n                                />\n                            </Button>\n                        </InputGroup.Buttons>\n                    </InputGroup>\n                </Form.Group>\n                <Button\n                    block\n                    variant={Variant.success}\n                    size={Size.lg}\n                    onClick={onSubmitLogin}\n                    disabled={!isValid || isSubmitting}\n                >\n                    Login\n                    {isSubmitting && <Spinner />}\n                </Button>\n                <CSSTransition\n                    classNames=\"fade\"\n                    timeout={300}\n                    in={!!errorMessage}\n                    unmountOnExit\n                    nodeRef={nodeRef}\n                >\n                    <div\n                        ref={nodeRef}\n                        className=\"errorMessage\"\n                    >\n                        {errorMessage}\n                    </div>\n                </CSSTransition>\n                <h5 className=\"text-muted text-center\">{\"Don't have an account? \"}</h5>\n                <Link to={Path.register}>\n                    <Button\n                        block\n                        variant={Variant.success}\n                        size={Size.lg}\n                    >\n                        Request credentials\n                    </Button>\n                </Link>\n            </Form>\n        </AuthCard>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode } from 'react';\nimport { Icon, useBreakpoints } from '@nilfoundation/react-components';\nimport { Link } from 'react-router-dom';\nimport { Copyright, FullScreenView } from 'src/components';\nimport { Path } from 'src/routing';\nimport styles from './AuthContainer.module.scss';\n\n/**\n * Props.\n */\ntype AuthContainerProps = {\n    children: ReactNode;\n};\n\n/**\n * Auth container.\n *\n * @param {AuthContainerProps} props Props.\n * @returns React component.\n */\nexport const AuthContainer = ({ children }: AuthContainerProps): ReactElement => {\n    const { md, lg } = useBreakpoints();\n\n    return (\n        <FullScreenView\n            showFullScreen\n            className={styles.loginContainer}\n        >\n            {children}\n            {md ||\n                (lg && (\n                    <Link\n                        className={styles.back}\n                        to={Path.market}\n                    >\n                        <Icon iconName=\"fa-solid fa-chevron-left\" />\n                        Back to Market\n                    </Link>\n                ))}\n            <div className={styles.copyright}>\n                <Copyright />\n            </div>\n        </FullScreenView>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useRef, useState, useMemo, useEffect, ChangeEvent } from 'react';\nimport {\n    InputGroup,\n    Icon,\n    Input,\n    Size,\n    Button,\n    Variant,\n    Form,\n    Spinner,\n} from '@nilfoundation/react-components';\nimport { useForm, ValidationError } from '@formspree/react/dist/index.js';\nimport { Link } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport { Path } from 'src/routing';\nimport { SocialLinks } from 'src/components/common';\nimport { emailRegExp } from 'src/utils';\nimport { AuthCard } from '../AuthCard';\nimport styles from './RegisterForm.module.scss';\n\n/**\n * Register form.\n *\n * @returns React component.\n */\nexport const RegisterForm = (): ReactElement => {\n    const [email, setEmail] = useState('');\n    const isEmailValid = useMemo(() => !!email && emailRegExp.test(email), [email]);\n    const emailInputRef = useRef<HTMLInputElement | null>(null);\n    const [state, handleSubmit] = useForm(process.env.REACT_APP_FORMSPREE_FORM_ID!, {\n        data: {\n            subject: `New credentials request from ${window.location.hostname}`,\n        },\n    });\n    const { submitting, succeeded, errors } = state;\n    const debouncedOnChangeHandler = useRef(\n        debounce((e: ChangeEvent<HTMLInputElement>) => {\n            setEmail(e.target.value);\n        }, 180),\n    ).current;\n\n    useEffect(() => {\n        emailInputRef.current && emailInputRef.current.focus();\n    }, []);\n\n    if (succeeded) {\n        return (\n            <div className={styles.successMessage}>\n                <h4>Thank you for request!</h4>\n                <Link to={Path.market}>\n                    <Button\n                        block\n                        variant={Variant.primary}\n                        size={Size.lg}\n                    >\n                        Back to market\n                    </Button>\n                </Link>\n            </div>\n        );\n    }\n\n    return (\n        <AuthCard>\n            <Form\n                className={styles.form}\n                onSubmit={handleSubmit}\n            >\n                <h4 className={styles.title}>Request your beta-test credentials via email</h4>\n                <div className={`${styles.description} text-muted`}>\n                    If you would like to get involved early, leave email below and we will let you\n                    know when proof market opens!\n                </div>\n                <Form.Group hasError={!isEmailValid && !!email}>\n                    <InputGroup\n                        size={Size.lg}\n                        className={styles.control}\n                    >\n                        <InputGroup.Addon>\n                            <Icon iconName=\"fa-solid fa-at\" />\n                        </InputGroup.Addon>\n                        <Input\n                            type=\"email\"\n                            name=\"email\"\n                            id=\"email\"\n                            aria-label=\"email\"\n                            placeholder=\"your email\"\n                            autoComplete=\"off\"\n                            ref={emailInputRef}\n                            onChange={debouncedOnChangeHandler}\n                        />\n                    </InputGroup>\n                </Form.Group>\n                <Button\n                    block\n                    variant={Variant.success}\n                    size={Size.lg}\n                    disabled={submitting || !isEmailValid}\n                    type=\"submit\"\n                >\n                    Submit\n                    {submitting && <Spinner />}\n                </Button>\n                {errors.length !== 0 && (\n                    <div className=\"errorMessage text-center\">\n                        <ValidationError\n                            field=\"email\"\n                            prefix=\"Email\"\n                            errors={errors}\n                        />\n                    </div>\n                )}\n                <div className={styles.social}>\n                    <h5 className={styles.title}>\n                        {\n                            \"Join our Discord's proof-market channel/Telegram for questions/to stay updated\"\n                        }\n                    </h5>\n                    <SocialLinks />\n                </div>\n                <h5 className=\"text-center text-muted\">{'Already have an account? '}</h5>\n                <Link to={Path.login}>\n                    <Button\n                        block\n                        variant={Variant.success}\n                        size={Size.lg}\n                    >\n                        Sign in\n                    </Button>\n                </Link>\n            </Form>\n        </AuthCard>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode, useEffect, useState } from 'react';\nimport { login } from 'src/api';\nimport { useAuth, useLogin } from 'src/hooks';\n\n/**\n * Props.\n */\ntype ReadonlyAccessProviderProps = {\n    children?: ReactNode;\n    fallback?: ReactNode;\n    errorView?: ReactNode;\n};\n\n/**\n * Provider automatic auth with readonly user.\n *\n * @param {ReadonlyAccessProviderProps} props Props.\n * @returns React component.\n */\nexport const ReadonlyAccessProvider = ({\n    children,\n    fallback,\n    errorView,\n}: ReadonlyAccessProviderProps): ReactElement => {\n    const [error, setError] = useState(false);\n    const processLogin = useLogin();\n    const { isAuthentificated } = useAuth();\n\n    useEffect(() => {\n        const readonlyUser = process.env.REACT_APP_READONLY_USER;\n\n        const loginWithReadonly = async (user: string) => {\n            try {\n                const { jwt } = await login({\n                    username: user,\n                    password: '',\n                });\n\n                processLogin(jwt);\n            } catch (e) {\n                setError(true);\n            }\n        };\n\n        !isAuthentificated && loginWithReadonly(readonlyUser!);\n    }, [processLogin, isAuthentificated]);\n\n    if (error) {\n        return <>{errorView}</>;\n    }\n\n    return <>{isAuthentificated ? children : fallback ?? null}</>;\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useEffect } from 'react';\nimport { Label, Spinner } from '@nilfoundation/react-components';\nimport { selectUserBalance, useAppSelector } from 'src/redux';\nimport { useLocalStorage } from 'src/hooks';\nimport { ClicableIcon } from 'src/components';\nimport { longDash } from 'src/utils';\nimport styles from './UserBalance.module.scss';\n\n/**\n * Props.\n */\ntype UserBalanceProps = {\n    className?: string;\n    canToggleVisibility?: boolean;\n};\n\n/**\n * User balance.\n *\n * @param {UserBalanceProps} props - Props.\n * @returns React component.\n */\nexport const UserBalance = ({ className, canToggleVisibility }: UserBalanceProps): ReactElement => {\n    const [hidden, setHidden] = useLocalStorage('userBalanceHidden', false);\n    const userBalance = useAppSelector(selectUserBalance);\n    const loadingUserBalance = useAppSelector(s => s.userState.balanceIsLoading);\n\n    useEffect(() => {\n        canToggleVisibility && setHidden(false);\n    }, [canToggleVisibility, setHidden]);\n\n    const balance = userBalance?.balance?.toFixed(2);\n    const blocked = userBalance?.blocked?.toFixed(2);\n    const iconName = hidden ? 'fa-eye-slash' : 'fa-eye';\n    const isNoData = balance === undefined && blocked === undefined;\n    const displayLoader = isNoData && loadingUserBalance;\n\n    return (\n        <div className={`${styles.balance} ${className ?? ''}`}>\n            {canToggleVisibility && (\n                <ClicableIcon\n                    onClick={() => setHidden(!hidden)}\n                    iconName={`fa-solid ${iconName}`}\n                />\n            )}\n            {isNoData && !loadingUserBalance && longDash}\n            {balance !== undefined && (\n                <span\n                    className={`${styles.text} ${hidden ? styles.hiddenText : ''}`}\n                    title={hidden ? undefined : `Balance: ${balance}`}\n                >\n                    {`${hidden ? '*'.repeat(balance.length) : balance}`}\n                </span>\n            )}\n            {blocked !== undefined && (\n                <Label className={styles.label}>\n                    <span\n                        className={hidden ? styles.hiddenText : ''}\n                        title={`Blocked: ${blocked}`}\n                    >\n                        {`${hidden ? '*'.repeat(blocked.length) : blocked}`}\n                    </span>\n                </Label>\n            )}\n            {displayLoader ? <Spinner grow /> : <span className={styles.currency}>USD</span>}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Button, Dropdown, Icon, Menu } from '@nilfoundation/react-components';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth, useLogout } from 'src/hooks';\nimport { Path } from 'src/routing';\nimport { UserBalance } from '../UserBalance';\nimport styles from './UserMenu.module.scss';\n\n/**\n * User menu.\n *\n * @returns React component.\n */\nexport const UserMenu = (): ReactElement => {\n    const { user, isReadonly } = useAuth();\n    const processLogout = useLogout();\n    const navigate = useNavigate();\n\n    if (!user || isReadonly) {\n        return (\n            <Button\n                className={styles.button}\n                onClick={() => navigate(Path.login)}\n            >\n                <Icon iconName=\"fa-solid fa-circle-user\" />\n                Sign In\n            </Button>\n        );\n    }\n\n    return (\n        <div className={styles.menu}>\n            <Dropdown className={styles.dropdown}>\n                <Dropdown.Button className={styles.button}>\n                    <Icon iconName=\"fa-solid fa-circle-user\" />\n                    {user}\n                </Dropdown.Button>\n                <Dropdown.Menu align=\"right\">\n                    <Menu.Header className={styles.balanceContainer}>\n                        <div className={styles.balanceTitle}>Current balance:</div>\n                        <UserBalance className={styles.balance} />\n                    </Menu.Header>\n                    <Menu.Divider />\n                    <Dropdown.Item onSelect={processLogout}>Logout</Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown>\n        </div>\n    );\n};\n","/**\n * @file React functional component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, Size, Variant } from '@nilfoundation/react-components';\nimport { Path } from 'src/routing';\nimport { useAuth } from 'src/hooks';\nimport { Overlay } from 'src/components/common';\nimport styles from './ProtectedContent.module.scss';\n\n/**\n * Props.\n */\ntype ProtectedComponentProps = {\n    children: ReactNode;\n    overlayTitle?: string;\n    overlayButtonText?: string;\n};\n\n/**\n * Component to restrict non-authorized and readonly users access.\n * Renders an overlay with a link to login page.\n *\n * Consider to add position: relative to parent container.\n *\n * @param {ProtectedComponentProps} props - Props.\n * @returns React component.\n */\nexport const ProtectedContent = ({\n    children,\n    overlayTitle,\n    overlayButtonText = 'Sign in',\n}: ProtectedComponentProps): ReactElement => {\n    const { isAuthentificated, isReadonly } = useAuth();\n    const navigate = useNavigate();\n\n    return (\n        <>\n            {(!isAuthentificated || isReadonly) && (\n                <Overlay>\n                    <div className={styles.container}>\n                        {overlayTitle && <h4 className=\"text-center\">{overlayTitle}</h4>}\n                        <Button\n                            variant={Variant.success}\n                            size={Size.lg}\n                            onClick={() => navigate(Path.login)}\n                        >\n                            {overlayButtonText}\n                        </Button>\n                    </div>\n                </Overlay>\n            )}\n            {children}\n        </>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { Breadcrumbs as NativeBreadcrumbs } from '@nilfoundation/react-components';\nimport { Link } from 'react-router-dom';\nimport { mainSiteAddress } from 'src/constants';\nimport { Path } from 'src/routing';\nimport styles from './Breadcrumbs.module.scss';\n\n/**\n * Breadcrumbs component.\n *\n * @returns React component.\n */\nexport const Breadcrumbs = (): JSX.Element => {\n    return (\n        <NativeBreadcrumbs className={styles.breadcrumbs}>\n            <NativeBreadcrumbs.Item\n                href={mainSiteAddress}\n                className={styles.item}\n            >\n                <span>\n                    <code>=nil;</code>Foundation\n                </span>\n            </NativeBreadcrumbs.Item>\n            <NativeBreadcrumbs.Item\n                className={styles.item}\n                renderLink={() => (\n                    <Link to={Path.market}>\n                        <span>Proof Market</span>\n                    </Link>\n                )}\n            />\n        </NativeBreadcrumbs>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Nav } from '@nilfoundation/react-components';\nimport { Link, useMatch } from 'react-router-dom';\nimport { Path } from 'src/routing';\n\n/**\n * Props.\n */\ntype HeaderLinkProps = {\n    title: string;\n    to: Path;\n};\n\n/**\n * Header link.\n *\n * @param {HeaderLinkProps} props Props.\n * @returns React component.\n */\nexport const HeaderLink = ({ title, to }: HeaderLinkProps): ReactElement => {\n    const match = useMatch({\n        path: to,\n        end: false,\n    });\n\n    return (\n        <Nav.Item\n            key={title}\n            active={!!match}\n            renderLink={({ active: _, ...props }) => (\n                <Link\n                    to={to}\n                    {...props}\n                >\n                    <span>{title}</span>\n                </Link>\n            )}\n        />\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Container, Navbar, Nav } from '@nilfoundation/react-components';\nimport { navigationLinks } from 'src/constants';\nimport { MobileMenu } from '../MobileMenu';\nimport { UserMenu } from '../../login';\nimport { Breadcrumbs } from '../BreadCrumbs';\nimport { HeaderLink } from './HeaderLink';\nimport styles from './Header.module.scss';\n\n/**\n * Header.\n *\n * @returns React component.\n */\nexport const Header = (): ReactElement => {\n    return (\n        <Navbar className={styles.navbar}>\n            <Container\n                className={styles.container}\n                fluid\n            >\n                <Breadcrumbs />\n                <Nav className={styles.nav}>\n                    {navigationLinks.map(({ title, path }) => (\n                        <HeaderLink\n                            key={path}\n                            title={title}\n                            to={path}\n                        />\n                    ))}\n                </Nav>\n                <UserMenu />\n                <MobileMenu />\n            </Container>\n        </Navbar>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport {\n    KeyboardEventHandler,\n    ReactElement,\n    ReactNode,\n    useState,\n    Children,\n    isValidElement,\n    cloneElement,\n} from 'react';\nimport { Icon } from '@nilfoundation/react-components';\nimport styles from './Details.module.scss';\n\n/**\n * Props.\n */\ntype DetailsProps = {\n    children: ReactNode;\n    title: ReactNode;\n    defaultOpen?: boolean;\n    bottomIndent?: boolean;\n    unmountOnClose?: boolean;\n    disabled?: boolean;\n};\n\n/**\n * Details.\n *\n * @param {DetailsProps} props Props.\n * @returns React component.\n */\nexport const Details = ({\n    children,\n    title,\n    defaultOpen = true,\n    bottomIndent = true,\n    unmountOnClose = false,\n    disabled = false,\n}: DetailsProps): ReactElement => {\n    const [isOpen, setIsOpen] = useState(defaultOpen);\n    const toggleIsOpen = () => setIsOpen(!isOpen);\n\n    const onKeyDownHandler: KeyboardEventHandler = e => {\n        if (e.key !== 'Enter' && e.key !== ' ') {\n            return;\n        }\n\n        !disabled && toggleIsOpen();\n    };\n\n    const iconClassName = `fa-solid fa-angle-${isOpen ? 'up' : 'down'} ${\n        disabled ? 'text-muted' : ''\n    }`;\n\n    return (\n        <>\n            <div\n                className={`${styles.title} ${bottomIndent ? styles.bottomIndent : ''}`}\n                onClick={toggleIsOpen}\n                onKeyDown={onKeyDownHandler}\n                role=\"button\"\n                tabIndex={0}\n            >\n                {title}\n                <Icon iconName={iconClassName} />\n            </div>\n            <>\n                {(!unmountOnClose || isOpen) &&\n                    Children.map(children, child => {\n                        if (isValidElement(child)) {\n                            const props = {\n                                className: `${child.props.className} ${!isOpen ? ' hidden' : ''}`,\n                            };\n\n                            return cloneElement(child, props);\n                        }\n\n                        return child;\n                    })}\n            </>\n        </>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode } from 'react';\nimport { Jumbotron } from '@nilfoundation/react-components';\nimport styles from './DashboardCard.module.scss';\n\n/**\n * Props.\n */\ntype DashboardCardProps = {\n    children: ReactNode;\n    className?: string;\n};\n\n/**\n * Dashboard card.\n *\n * @param {DashboardCardProps} props - Props.\n * @returns React component.\n */\nexport const DashboardCard = ({ children, className }: DashboardCardProps): ReactElement => {\n    return (\n        <Jumbotron className={`${styles.dashboardCard} ${className ?? ''}`}>{children}</Jumbotron>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { DetailedHTMLProps, HTMLAttributes, ReactElement } from 'react';\nimport styles from './Table.module.scss';\n\n/**\n * Props.\n */\ntype TableProps = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n\n/**\n * Table.\n *\n * @param {TableProps} props Props.\n * @returns React component.\n */\nexport const Table = ({ className, children, ...rest }: TableProps): ReactElement => {\n    return (\n        <div\n            role=\"table\"\n            className={`${styles.table} ${className ?? ''}`}\n            {...rest}\n        >\n            {children}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { DetailedHTMLProps, HTMLAttributes, ReactElement } from 'react';\n\n/**\n * Props.\n */\ntype TBodyProps = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n\n/**\n * Table body.\n *\n * @param {TBodyProps} props Props.\n * @returns React component.\n */\nexport const TBody = ({ children, className, ...rest }: TBodyProps): ReactElement => {\n    return (\n        <div\n            role=\"rowgroup\"\n            className={`tableBody ${className ?? ''}`}\n            {...rest}\n        >\n            {children}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { DetailedHTMLProps, HTMLAttributes, ReactElement } from 'react';\n\n/**\n * Props.\n */\ntype TCellProps = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n\n/**\n * Table cell.\n *\n * @param {TCellProps} props Props.\n * @returns React component.\n */\nexport const TCell = ({ children, ...rest }: TCellProps): ReactElement => {\n    return (\n        <div\n            role=\"cell\"\n            {...rest}\n        >\n            {children}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { DetailedHTMLProps, HTMLAttributes, ReactElement } from 'react';\nimport clsx from 'clsx';\nimport styles from './Table.module.scss';\n\n/**\n * Props.\n */\ntype THeadProps = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement> & {\n    sticky?: boolean;\n    isFooterHeader?: boolean;\n};\n\n/**\n * Table head.\n *\n * @param {THeadProps} props Props.\n * @returns React component.\n */\nexport const THead = ({\n    sticky,\n    className,\n    children,\n    isFooterHeader,\n    ...rest\n}: THeadProps): ReactElement => {\n    const tHeadClassName = clsx(\n        styles.tableHead,\n        className,\n        sticky && styles.stickyHead,\n        isFooterHeader && styles.footerHead,\n    );\n\n    return (\n        <div\n            role=\"rowgroup\"\n            className={tHeadClassName}\n            {...rest}\n        >\n            {children}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { DetailedHTMLProps, HTMLAttributes, ReactElement } from 'react';\n\n/**\n * Props.\n */\ntype THeaderProps = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement> & {\n    sticky?: boolean;\n};\n\n/**\n * Table column header.\n *\n * @param {THeaderProps} props Props.\n * @returns React component.\n */\nexport const THeader = ({ children, ...rest }: THeaderProps): ReactElement => {\n    return (\n        <div\n            role=\"columnheader\"\n            {...rest}\n        >\n            {children}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { DetailedHTMLProps, HTMLAttributes, ReactElement } from 'react';\n\n/**\n * Props.\n */\ntype TRowProps = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n\n/**\n * Table row.\n *\n * @param {TRowProps} props Props.\n * @returns React component.\n */\nexport const TRow = ({ children, ...rest }: TRowProps): ReactElement => {\n    return (\n        <div\n            role=\"row\"\n            {...rest}\n        >\n            {children}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { KeyboardEventHandler, ReactElement, useLayoutEffect, useMemo } from 'react';\nimport { Icon } from '@nilfoundation/react-components';\nimport { ColumnInstance } from 'react-table';\nimport { THeader } from '../Table';\nimport styles from './ReactTable.module.scss';\n\n/**\n * Props.\n */\ntype ReactTableHeaderProps<T extends Record<string, unknown>> = {\n    column: ColumnInstance<T>;\n    // TODO - refactor after upgrading to react-table@v8\n    onlySortBy?: 'asc' | 'desc';\n};\n\n/**\n * React table header.\n *\n * @param {ReactTableHeaderProps} props Props.\n * @returns React component.\n */\nexport const ReactTableHeader = <T extends Record<string, unknown>>({\n    column,\n    onlySortBy,\n}: ReactTableHeaderProps<T>): ReactElement => {\n    const { canSort, isSorted, isSortedDesc, toggleSortBy } = column;\n\n    const onKeyDownHandler: KeyboardEventHandler = e => {\n        if (e.key !== 'Enter' && e.key !== ' ') {\n            return;\n        }\n\n        e.preventDefault();\n        toggleSortBy();\n    };\n\n    // TODO - refactor after upgrading to react-table@v8\n    const shouldToggleSort = useMemo(() => {\n        if (onlySortBy === undefined) {\n            return false;\n        }\n\n        const toggleSortCondition = onlySortBy === 'asc' ? isSortedDesc : !isSortedDesc;\n        return isSorted && !!toggleSortCondition;\n    }, [onlySortBy, isSortedDesc, isSorted]);\n\n    useLayoutEffect(() => {\n        shouldToggleSort && toggleSortBy();\n    }, [shouldToggleSort, toggleSortBy]);\n\n    return (\n        <THeader\n            {...column.getHeaderProps(column.getSortByToggleProps())}\n            className={canSort ? styles.sortableColumnHeader : ''}\n            tabIndex={canSort ? 0 : undefined}\n            onKeyDown={onKeyDownHandler}\n        >\n            {column.render('Header')}\n            {isSorted && <Icon iconName={`fa-solid fa-angle-${isSortedDesc ? 'down' : 'up'}`} />}\n        </THeader>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode, useEffect } from 'react';\nimport {\n    ColumnInstance,\n    TableInstance,\n    TableOptions,\n    useFilters,\n    useSortBy,\n    useTable,\n} from 'react-table';\nimport { notEmpty } from 'src/utils';\nimport { useDebounce, useInitialTableState } from 'src/hooks';\nimport { ReactTableHeader } from './ReactTableHeader';\nimport { Table, TBody, THead, TRow } from '../Table';\n\n/**\n * Props.\n */\ntype ReactTableProps<T extends Record<string, unknown>> = {\n    name: string;\n    renderRows: (tableInstance: TableInstance<T>) => ReactNode;\n    renderHeaders?: (tableInstance: TableInstance<T>) => ReactNode;\n    className?: string;\n    footerHeader?: boolean;\n    showTableHeader?: boolean;\n} & TableOptions<T>;\n\n/**\n * React-table hook list to pass into table instance.\n */\nconst tableHooks = [useFilters, useSortBy].filter(notEmpty);\n\n/**\n * React table template.\n *\n * @param {ReactTableProps} props Props.\n * @returns React component.\n */\nexport const ReactTable = <T extends Record<string, unknown>>({\n    name,\n    renderRows,\n    renderHeaders,\n    initialState: defaultInitialState,\n    className,\n    footerHeader,\n    showTableHeader = true,\n    ...restOptions\n}: ReactTableProps<T>): ReactElement => {\n    const [initialState, setInitialState] = useInitialTableState(name, defaultInitialState);\n\n    const tableInstance = useTable<T>(\n        {\n            initialState,\n            ...restOptions,\n        },\n        ...tableHooks,\n    );\n    const { getTableBodyProps, visibleColumns, state } = tableInstance;\n\n    const debouncedState = useDebounce(state, 500);\n\n    useEffect(() => {\n        setInitialState(debouncedState);\n    }, [setInitialState, debouncedState]);\n\n    const tableHeadersRenderer = () =>\n        renderHeaders ? renderHeaders(tableInstance) : renderTableHeadersFallback(visibleColumns);\n\n    return (\n        <Table className={className}>\n            {showTableHeader && (\n                <THead\n                    sticky\n                    isFooterHeader={footerHeader}\n                >\n                    <TRow>{tableHeadersRenderer()}</TRow>\n                </THead>\n            )}\n            <TBody {...getTableBodyProps()}>{renderRows(tableInstance)}</TBody>\n        </Table>\n    );\n};\n\n/**\n * Renders table head.\n *\n * @param columns Table columns.\n * @returns Table head.\n */\nconst renderTableHeadersFallback = <T extends Record<string, unknown>>(\n    columns: ColumnInstance<T>[],\n) => (\n    <>\n        {columns.map(column => (\n            <ReactTableHeader\n                key={column.id}\n                column={column}\n            />\n        ))}\n    </>\n);\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useState } from 'react';\nimport { Icon } from '@nilfoundation/react-components';\nimport { useDropzone, DropzoneOptions, FileRejection, DropEvent } from 'react-dropzone';\nimport './FileUploader.scss';\n\n/**\n * Props.\n */\ntype FileUploaderProps = {\n    title?: string;\n} & DropzoneOptions;\n\n/**\n *\n * @param {FileUploaderProps} props Props.\n * @returns React component.\n */\nexport const FileUploader = ({\n    title = \"Drag'n drop some files here, or click to select files\",\n    onDrop,\n    ...restOptions\n}: FileUploaderProps): ReactElement => {\n    const [textMessage, setTextMessage] = useState(title);\n\n    const onDropHandler = (\n        acceptedFiles: File[],\n        fileRejections: FileRejection[],\n        event: DropEvent,\n    ) => {\n        if (Object.keys(fileRejections).length !== 0) {\n            setTextMessage('Please submit valid file type');\n        }\n\n        onDrop && onDrop(acceptedFiles, fileRejections, event);\n    };\n\n    const { acceptedFiles, getRootProps, getInputProps, isDragActive } = useDropzone({\n        ...restOptions,\n        onDrop: onDropHandler,\n    });\n\n    return (\n        <div\n            className={`fileUploader ${isDragActive ? 'fileUploader-dragActive' : ''}`}\n            {...getRootProps()}\n        >\n            <input {...getInputProps()} />\n            {acceptedFiles.length !== 0 ? (\n                <span className=\"fileUploader__files\">\n                    {acceptedFiles.map(x => (\n                        <span key={x.name}>{x.name}</span>\n                    ))}\n                </span>\n            ) : (\n                <span className=\"fileUploader__message\">{textMessage}</span>\n            )}\n            <Icon iconName=\"fa-solid fa-circle-arrow-up\" />\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactNode, useRef } from 'react';\nimport { Portal } from '@nilfoundation/react-components';\nimport { CSSTransition } from 'react-transition-group';\nimport styles from './FullScreenView.module.scss';\n\n/**\n * Props.\n */\ntype FullScreenViewProps = {\n    showFullScreen: boolean;\n    children: ReactNode;\n    className?: string;\n};\n\n/**\n * Full screen view container.\n *\n * @param {FullScreenViewProps} props Props.\n * @returns React component.\n */\nexport const FullScreenView = ({\n    showFullScreen,\n    children,\n    className,\n}: FullScreenViewProps): JSX.Element => {\n    const nodeRef = useRef<HTMLDivElement>(null);\n\n    return (\n        <>\n            {!showFullScreen && children}\n            <Portal>\n                <CSSTransition\n                    classNames=\"alert\"\n                    timeout={300}\n                    in={showFullScreen}\n                    nodeRef={nodeRef}\n                    unmountOnExit\n                >\n                    <div\n                        className={`${styles.fullScreenView} ${className ?? ''}`}\n                        ref={nodeRef}\n                    >\n                        {children}\n                    </div>\n                </CSSTransition>\n            </Portal>\n        </>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { Button, ButtonProps, Icon } from '@nilfoundation/react-components';\nimport styles from './ClicableIcon.module.scss';\n\n/**\n * Props.\n */\ntype ClicableIconProps = {\n    iconName: string;\n} & ButtonProps<HTMLButtonElement>;\n\n/**\n * Button, that looks like an icon.\n *\n * @param {ClicableIconProps} props Props.\n * @returns React component.\n */\nexport const ClicableIcon = ({ iconName, className, ...rest }: ClicableIconProps): JSX.Element => {\n    return (\n        <Button\n            className={`${styles.button} ${className ?? ''}`}\n            {...rest}\n        >\n            <Icon iconName={iconName} />\n        </Button>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Container, Row, Col } from '@nilfoundation/react-components';\nimport { mainSiteAddress } from 'src/constants';\n\n/**\n * Offline view.\n *\n * @returns React component.\n */\nconst OfflineView = (): ReactElement => (\n    <Container\n        as=\"main\"\n        fluid\n    >\n        <Row>\n            <Col\n                xs={12}\n                className=\"text-center\"\n            >\n                <h4>Sorry, unknown error occured.</h4>\n                <p className=\"text-muted\">\n                    Please, try to reload page or leave message to support.\n                </p>\n                <p>\n                    <a href={mainSiteAddress}>{mainSiteAddress}</a>\n                </p>\n            </Col>\n        </Row>\n    </Container>\n);\n\nexport default OfflineView;\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode, useEffect, useState } from 'react';\nimport OfflineView from 'src/views/OfflineView';\n\n/**\n * Props.\n */\ntype NetConnectionHandlerProps = {\n    children?: ReactNode;\n};\n\n/**\n * Social links.\n *\n * @param {NetConnectionHandlerProps} props Props.\n * @returns React component.\n */\nexport const NetConnectionHandler = ({ children }: NetConnectionHandlerProps): ReactElement => {\n    const [online, setOnline] = useState(window.navigator.onLine);\n\n    useEffect(() => {\n        const setIsOnline = () => setOnline(true);\n        const setIsOffline = () => {\n            setOnline(false);\n        };\n\n        window.addEventListener('online', setIsOnline);\n        window.addEventListener('offline', setIsOffline);\n\n        return () => {\n            window.removeEventListener('online', setIsOnline);\n            window.removeEventListener('offline', setIsOffline);\n        };\n    }, [setOnline]);\n\n    return <>{online ? children : <OfflineView />}</>;\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode } from 'react';\nimport styles from './Overlay.module.scss';\n\n/**\n * Props.\n */\ntype OverlayProps = {\n    className?: string;\n    children: ReactNode;\n};\n\n/**\n * Overlay component.\n *\n * @param {OverlayProps} props Props.\n * @returns React component.\n */\nexport const Overlay = ({ className, children }: OverlayProps): ReactElement => (\n    <div className={`${className ?? ''} ${styles.overlay}`}>{children}</div>\n);\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport styles from './ObjectAsPlainTextViewer.module.scss';\n\n/**\n * Props.\n */\ntype ObjectAsPlainTextViewerProps<T extends Record<string, unknown>> = {\n    data: T;\n    className?: string;\n};\n\n/**\n * Takes object as a prop and returns it plain text representation.\n *\n * @param {ObjectAsPlainTextViewerProps} props Props.\n * @returns React component.\n */\nexport const ObjectAsPlainTextViewer = <T extends Record<string, unknown>>({\n    data,\n    className,\n}: ObjectAsPlainTextViewerProps<T>): ReactElement => {\n    return (\n        <ul className={`${styles.viewer} ${className ?? ''}`}>\n            {Object.entries(data).map(([x, y]) =>\n                y === undefined ? null : (\n                    <li\n                        key={x}\n                        className={styles.item}\n                    >\n                        {!!x && !!y && (\n                            <>\n                                <strong>{x}</strong>\n                                <span>{`: ${y}`}</span>\n                            </>\n                        )}\n                    </li>\n                ),\n            )}\n        </ul>\n    );\n};\n","/**\n * @file Index.\n * @copyright Yury Korotovskikh 2023 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useEffect } from 'react';\nimport ReactGa from 'react-ga4';\nimport { useLocation } from 'react-router-dom';\n\n/**\n * Google Analytics location change tracker.\n *\n * @returns React component.\n */\nexport const GALocationTracker = (): ReactElement => {\n    const { pathname } = useLocation();\n    const mainPath = pathname.split('/').slice(0, 2).join('');\n\n    useEffect(() => {\n        mainPath && ReactGa.send({ hitType: 'pageview', page: mainPath });\n    }, [mainPath]);\n\n    return <></>;\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Icon } from '@nilfoundation/react-components';\nimport clsx from 'clsx';\nimport styles from './PriceChangeIndicator.module.scss';\n\n/**\n * Props.\n */\ntype PriceChangeIndicatorProps = {\n    change: number;\n    className?: string;\n    toFixed?: number;\n};\n\n/**\n * Trade history component.\n *\n * @param {PriceChangeIndicatorProps} props Props.\n * @returns React component.\n */\nexport const PriceChangeIndicator = ({\n    change,\n    className,\n    toFixed = 4,\n}: PriceChangeIndicatorProps): ReactElement => {\n    const isGrow = !!change && change > 0;\n    const iconName = `fa-solid fa-arrow-${isGrow ? 'up' : 'down'}`;\n    const computedClassName = clsx(\n        styles.priceChangeIndicator,\n        isGrow ? 'growTextColor' : 'lossTextColor',\n        className,\n    );\n\n    return (\n        <div className={computedClassName}>\n            <Icon iconName={iconName} />\n            {`${Math.abs(change).toFixed(toFixed)}%`}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, memo } from 'react';\nimport { Media, Spinner } from '@nilfoundation/react-components';\nimport { useAppSelector } from 'src/redux';\nimport { PriceChangeIndicator } from '../PriceChangeIndicator';\nimport styles from './CircuitsList.module.scss';\n\n/**\n * Props.\n */\ntype CircuitsListItemInfoProps = {\n    cost?: number | null;\n    change?: number | null;\n};\n\n/**\n * Currencies list item brief info.\n *\n * @param {CircuitsListItemInfoProps} props - Props.\n * @returns React component.\n */\nexport const CircuitsListItemInfo = memo(function CircuitsListItemInfo({\n    cost,\n    change,\n}: CircuitsListItemInfoProps): ReactElement {\n    const isLoadingInfo = useAppSelector(s => s.circuitsState.isLoadingCircuitsInfo);\n\n    return (\n        <Media.Item position=\"right\">\n            {cost && <div>{`$${cost.toFixed(4)}`}</div>}\n            {!!change && (\n                <PriceChangeIndicator\n                    change={change}\n                    className={styles.dailyChangeIndicator}\n                />\n            )}\n            {isLoadingInfo && cost === undefined && change === undefined && <Spinner />}\n        </Media.Item>\n    );\n});\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { ListGroup, Media } from '@nilfoundation/react-components';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectCurrentCircuitId } from 'src/redux';\nimport { Path } from 'src/routing';\nimport { CircuitsListData } from 'src/models';\nimport { CircuitsListItemInfo } from './CircuitsListItemInfo';\nimport styles from './CircuitsList.module.scss';\n\n/**\n * Props.\n */\ntype CurcuitsListItemProps = {\n    data: CircuitsListData;\n};\n\n/**\n * Currencies list item.\n *\n * @param {CurcuitsListItemProps} props - Props.\n * @returns React component.\n */\nexport const CurcuitsListItem = ({\n    data: { _key, cost, change, name },\n}: CurcuitsListItemProps): ReactElement => {\n    const selectedId = useSelector(selectCurrentCircuitId);\n    const isSelected = _key === selectedId;\n\n    return (\n        <ListGroup.Item active={isSelected}>\n            <Link to={`${Path.market}/${_key}`}>\n                <Media className={isSelected ? styles.selected : ''}>\n                    <Media.Body className={styles.itemBody}>{name}</Media.Body>\n                    <CircuitsListItemInfo\n                        cost={cost}\n                        change={change}\n                    />\n                </Media>\n            </Link>\n        </ListGroup.Item>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, memo, useCallback, useMemo, useRef, useState } from 'react';\nimport { FilterProps, TableInstance, TableState } from 'react-table';\nimport { Icon, Input, InputGroup, ListGroup } from '@nilfoundation/react-components';\nimport { dequal as deepEqual } from 'dequal';\nimport debounce from 'lodash/debounce';\nimport { useAppSelector } from 'src/redux';\nimport { Circuit, CircuitsListData, CircuitsListTableColumn } from 'src/models';\nimport { ReactTable } from 'src/components';\nimport { CurcuitsListItem } from './CircuitsListItem';\nimport styles from './CircuitsList.module.scss';\n\n/**\n * Props.\n */\ntype CircuitsListTableProps = {\n    circuitsList: Circuit[];\n};\n\n/**\n * Search by text input.\n *\n * @param {FilterProps<CircuitsListData>} props - Filter props.\n * @returns Search by text filter input.\n */\nconst ByTextColumnFilter = ({ column: { setFilter } }: FilterProps<CircuitsListData>) => {\n    const [value, setValue] = useState('');\n    const debouncedSearch = useRef(\n        debounce(value => {\n            setFilter(value || undefined);\n        }, 300),\n    ).current;\n\n    return (\n        <InputGroup className={styles.inputGroup}>\n            <InputGroup.Addon>\n                <Icon iconName=\"fa-solid fa-search\" />\n            </InputGroup.Addon>\n            <Input\n                placeholder=\"Search circuits\"\n                type=\"text\"\n                value={value}\n                onChange={e => {\n                    setValue(e.target.value);\n                    debouncedSearch(e.target.value);\n                }}\n            />\n        </InputGroup>\n    );\n};\n\n/**\n * Table columns.\n */\nconst columns: CircuitsListTableColumn[] = [\n    {\n        Header: 'Name',\n        accessor: 'name',\n        Filter: ByTextColumnFilter,\n    },\n    {\n        accessor: 'cost',\n        disableFilters: true,\n    },\n    {\n        accessor: 'change',\n        disableFilters: true,\n    },\n    {\n        accessor: '_key',\n        disableFilters: true,\n    },\n];\n\n/**\n * Initial table state without user interactions.\n */\nconst defaultTableState: Partial<TableState<CircuitsListData>> = {\n    sortBy: [\n        {\n            id: 'name',\n            desc: false,\n        },\n    ],\n    hiddenColumns: ['change', 'cost', 'id'],\n};\n\n/**\n * Active orders table.\n *\n * @param {CircuitsListTableProps} props Props.\n * @returns React component.\n */\nexport const CircuitsListTable = memo(function CircuitsListTable({\n    circuitsList,\n}: CircuitsListTableProps): ReactElement {\n    const circuitsInfo = useAppSelector(s => s.circuitsState.circuitsInfo, deepEqual);\n\n    const tableData: CircuitsListData[] = useMemo(() => {\n        return circuitsList\n            .filter(x => !x.isPrivate)\n            .map(x => {\n                const info = circuitsInfo && circuitsInfo.find(y => y._key === x._key);\n\n                return {\n                    _key: x._key,\n                    name: `${x.name.toUpperCase()}${\n                        x.inputDescription ? ` (${x.inputDescription?.toUpperCase()})` : ''\n                    }/USD`,\n                    cost: info?.current,\n                    change: info?.daily_change,\n                };\n            });\n    }, [circuitsList, circuitsInfo]);\n\n    const renderRows = useCallback(\n        ({ rows, prepareRow, visibleColumns }: TableInstance<CircuitsListData>) => (\n            <>\n                {visibleColumns.find(x => x.canFilter)?.render('Filter')}\n                <ListGroup className={styles.listGroup}>\n                    {rows.map(row => {\n                        prepareRow(row);\n                        return (\n                            <CurcuitsListItem\n                                key={row.id}\n                                data={row.values as CircuitsListData}\n                            />\n                        );\n                    })}\n                </ListGroup>\n            </>\n        ),\n        [],\n    );\n\n    return (\n        <ReactTable\n            name=\"circuitsListTable\"\n            data={tableData}\n            columns={columns}\n            renderRows={renderRows}\n            initialState={defaultTableState}\n            showTableHeader={false}\n        />\n    );\n});\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Spinner } from '@nilfoundation/react-components';\nimport { dequal as deepEqual } from 'dequal';\nimport { selectCircuits, useAppSelector } from 'src/redux';\nimport { useSelectedCircuitId } from 'src/hooks';\nimport { CircuitsListTable } from './CircuitsListTable';\nimport { DashboardCard } from '../../common';\nimport styles from './CircuitsList.module.scss';\n\n/**\n * Currencies list.\n *\n * @returns React component.\n */\nexport const CircuitsList = (): ReactElement => {\n    const circuitsList = useAppSelector(selectCircuits, deepEqual);\n    const loadingCircuits = useAppSelector(s => s.circuitsState.isLoading);\n    useSelectedCircuitId();\n\n    return (\n        <DashboardCard>\n            <h4>Circuit list</h4>\n            <div className={styles.container}>\n                {loadingCircuits && !circuitsList.length ? (\n                    <Spinner grow />\n                ) : (\n                    <CircuitsListTable circuitsList={circuitsList} />\n                )}\n            </div>\n        </DashboardCard>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\n//import { Icon, Label } from '@nilfoundation/react-components';\nimport { Circuit } from 'src/models';\nimport styles from './CircuitDetailedInfo.module.scss';\n\n/**\n * Props.\n */\ntype CircuitInfoCardProps = {\n    circuit: Circuit;\n};\n\n/**\n * Circuit info card.\n *\n * @param {CircuitInfoCardProps} props Props.\n * @returns React component.\n */\nexport const CircuitInfoCard = ({ circuit }: CircuitInfoCardProps): ReactElement => {\n    const { name, inputDescription, description } = circuit;\n\n    return (\n        <>\n            <h4>{`${name}${inputDescription ? ` (${inputDescription})` : ''}/USD`}</h4>\n            <h5 className={styles.description}>{description}</h5>\n            {/* <p>\n                <Label\n                    href={repository}\n                    target=\"_blank\"\n                >\n                    <Icon\n                        iconName=\"fa-brands fa-github\"\n                        srOnlyText=\"github repository link\"\n                    />\n                    GitHub Repository\n                </Label>\n            </p> */}\n        </>\n    );\n};\n","/**\n * @file Enum declaration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Tab.\n */\nexport enum ManageOrdersTab {\n    active = 'ACTIVE',\n    history = 'HISTORY',\n}\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport ReactJson from 'react-json-view';\nimport { jsonViewerTheme } from 'src/constants';\nimport { Circuit } from 'src/models';\nimport styles from './CircuitDetailedInfo.module.scss';\n\n/**\n * Props.\n */\ntype CircuitJsonViewProps = {\n    circuit: Circuit;\n};\n\n/**\n * Circuit json view.\n *\n * @param {CircuitJsonViewProps} props Props.\n * @returns React component.\n */\nexport const CircuitJsonView = ({ circuit }: CircuitJsonViewProps): ReactElement => {\n    return (\n        <div className={styles.jsonView}>\n            <ReactJson\n                src={circuit}\n                collapsed={1}\n                name={null}\n                displayDataTypes={false}\n                displayObjectSize={false}\n                theme={jsonViewerTheme}\n            />\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useMemo } from 'react';\nimport { dequal as deepEqual } from 'dequal';\nimport { Spinner } from '@nilfoundation/react-components';\nimport { useAppSelector } from 'src/redux';\nimport { ObjectAsPlainTextViewer } from 'src/components';\nimport { Circuit } from 'src/models';\n\n/**\n * Props.\n */\ntype CircuitStatsCardProps = {\n    circuitId: Circuit['_key'];\n};\n\n/**\n * Circuit statistics card.\n *\n * @param {CircuitStatsCardProps} props Props.\n * @returns React component.\n */\nexport const CircuitStatsCard = ({ circuitId }: CircuitStatsCardProps): ReactElement => {\n    const isLoadingStats = useAppSelector(s => s.circuitsState.isLoadingCircuitsStats);\n    const stats = useAppSelector(\n        s => s.circuitsState.circuitsStats.find(x => x._key === circuitId),\n        deepEqual,\n    );\n\n    const statsData = useMemo(() => {\n        return stats === undefined\n            ? {}\n            : {\n                  'Average cost': `${stats.avg_cost?.toFixed(4)} USD`,\n                  'Average gen time': stats.avg_eval_time\n                      ? `${stats.avg_eval_time?.toFixed(4)} Mins`\n                      : undefined,\n                  Completed: stats.completed,\n              };\n    }, [stats]);\n\n    switch (true) {\n        case isLoadingStats && stats === undefined:\n            return <Spinner grow />;\n        case !stats:\n            return <h4>No data.</h4>;\n        default:\n            return <ObjectAsPlainTextViewer data={statsData} />;\n    }\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Image, Nav, Spinner } from '@nilfoundation/react-components';\nimport { selectCurrentCircuit, useAppSelector } from 'src/redux';\nimport { Circuit } from 'src/models';\nimport { getCurrencyImage } from 'src/enums';\nimport { Details, DashboardCard } from '../../common';\nimport { CircuitInfoCard } from './CircuitInfoCard';\nimport { DetailedInfoTab } from './DetailedInfoTab';\nimport { CircuitJsonView } from './CircuitJsonView';\nimport { CircuitStatsCard } from './CircuitStatsCard';\nimport styles from './CircuitDetailedInfo.module.scss';\n\n/**\n * Currencies list.\n *\n * @returns React component.\n */\nexport const CircuitDetailedInfo = (): ReactElement => {\n    const [intoType, setInfoType] = useState<DetailedInfoTab>(DetailedInfoTab.info);\n    const currentSelectedCircuit = useSelector(selectCurrentCircuit);\n    const loadingCircuits = useAppSelector(s => s.circuitsState.isLoading);\n\n    return (\n        <DashboardCard className={styles.container}>\n            <Details title={<h4>Circuit detailed info</h4>}>\n                <Nav\n                    justified\n                    className={styles.toolbar}\n                >\n                    {Object.values(DetailedInfoTab).map(t => (\n                        <Nav.Item\n                            key={t}\n                            onClick={() => setInfoType(t)}\n                            active={t === intoType}\n                        >\n                            {t.toUpperCase()}\n                        </Nav.Item>\n                    ))}\n                </Nav>\n                {currentSelectedCircuit && getCurrencyImage(currentSelectedCircuit.name) && (\n                    <div className={styles.imageContainer}>\n                        <Image\n                            alt=\"Circuit image\"\n                            source={getCurrencyImage(currentSelectedCircuit.name)!}\n                            responsive\n                        />\n                    </div>\n                )}\n                <div className={styles.content}>\n                    {currentSelectedCircuit ? (\n                        <CircuitDetailedInfoFactory\n                            type={intoType}\n                            circuit={currentSelectedCircuit}\n                        />\n                    ) : loadingCircuits ? (\n                        <Spinner grow />\n                    ) : (\n                        <div>Nothing is selected.</div>\n                    )}\n                </div>\n            </Details>\n        </DashboardCard>\n    );\n};\n\n/**\n *Renders Circuit info conditionally.\n *\n * @param {{type: DetailedInfoTab; circuit: Circuit;}} props Props.\n * @returns React element.\n */\nconst CircuitDetailedInfoFactory = ({\n    type,\n    circuit,\n}: {\n    type: DetailedInfoTab;\n    circuit: Circuit;\n}): ReactElement => {\n    switch (type) {\n        case DetailedInfoTab.info:\n            return (\n                <>\n                    <CircuitInfoCard circuit={circuit} />\n                    <CircuitJsonView circuit={circuit} />\n                </>\n            );\n        case DetailedInfoTab.stats:\n            return <CircuitStatsCard circuitId={circuit._key} />;\n        default:\n            return <></>;\n    }\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Nav, useBreakpoints } from '@nilfoundation/react-components';\nimport { ChartType } from 'src/enums';\n\n/**\n * Props.\n */\ntype ChartTypeSelectProps = {\n    chartType: ChartType;\n    onSelectChartType: (chartType: ChartType) => void;\n    disabled: boolean;\n};\n\n/**\n * Chart type selector.\n *\n * @param {ChartTypeSelectProps} props Props.\n * @returns React component.\n */\nexport const ChartTypeSelect = ({\n    chartType,\n    onSelectChartType,\n    disabled,\n}: ChartTypeSelectProps): ReactElement => {\n    const { xs, sm } = useBreakpoints();\n\n    return (\n        <Nav\n            tabs\n            vertical={xs || sm}\n        >\n            {Object.values(ChartType).map(x => (\n                <Nav.Item\n                    key={x}\n                    active={x === chartType}\n                    onClick={() => onSelectChartType(x)}\n                    disabled={disabled}\n                >\n                    {x}\n                </Nav.Item>\n            ))}\n        </Nav>\n    );\n};\n","/**\n * @file React context.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createContext } from 'react';\nimport { DateUnit } from 'src/enums';\n\n/**\n * Context type.\n */\ntype ChartSettingsContectModel = {\n    dataRange: DateUnit;\n    setDataRange: (unit: DateUnit) => void;\n    displayVolumes: boolean;\n    setDisplayVolumes: (b: boolean) => void;\n};\n\n/**\n * Data range context.\n */\nexport const ChartSettingsContext = createContext<ChartSettingsContectModel>(\n    {} as ChartSettingsContectModel,\n);\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useContext } from 'react';\nimport { Nav } from '@nilfoundation/react-components';\nimport { DateUnit } from 'src/enums';\nimport { ChartSettingsContext } from './ChartSettingsContext';\n\n/**\n * Props.\n */\ntype DataRangeSelectProps = {\n    disabled: boolean;\n};\n\n/**\n * Data range select.\n *\n * @param {DataRangeSelectProps} props Props.\n * @returns React component.\n */\nexport const DataRangeSelect = ({ disabled }: DataRangeSelectProps): ReactElement => {\n    const { dataRange, setDataRange } = useContext(ChartSettingsContext);\n    return (\n        <Nav>\n            {Object.values(DateUnit).map(x => (\n                <Nav.Item\n                    key={x}\n                    active={dataRange === x}\n                    onClick={() => setDataRange(x)}\n                    disabled={disabled}\n                >\n                    {x}\n                </Nav.Item>\n            ))}\n        </Nav>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { BarPrice, BarPrices } from 'lightweight-charts';\nimport styles from './ChartLegend.module.scss';\n\n/**\n * Props.\n */\ntype ChartLegendProps = {\n    name: string;\n    price?: BarPrice | BarPrices;\n};\n\n/**\n * Dashboard legend.\n *\n * @param {ChartLegendProps} props Props.\n * @returns React component.\n */\nexport const ChartLegend = ({ name, price }: ChartLegendProps): ReactElement => {\n    return (\n        <div className={styles.chartLegend}>\n            <h5 className={styles.chartName}>{name.toUpperCase()}</h5>\n            {typeof price === 'object' ? (\n                Object.keys(price).map(x => (\n                    <div\n                        className=\"text-muted\"\n                        key={x}\n                    >\n                        {`${x}: ${price[x as keyof BarPrices]?.toFixed(2)}`}\n                    </div>\n                ))\n            ) : (\n                <div className=\"text-muted\">{price?.toFixed(2)}</div>\n            )}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useContext, useMemo, useRef } from 'react';\nimport {\n    CandlestickData,\n    CandlestickStyleOptions,\n    ChartOptions,\n    DeepPartial,\n    HistogramData,\n    LineData,\n    LineStyleOptions,\n    SeriesOptionsCommon,\n    UTCTimestamp,\n    WhitespaceData,\n} from 'lightweight-charts';\nimport { Spinner } from '@nilfoundation/react-components';\nimport { useChart, useRenderChartData } from 'src/hooks';\nimport { formatUTCTimestamp } from 'src/utils';\nimport { getDateFormatBasedOnDateUnit } from 'src/enums';\nimport { ChartSettingsContext } from '../CircuitDashboard';\nimport { ChartLegend } from '../ChartLegend';\nimport './ChartTemplate.scss';\n\n/**\n * Props.\n */\ntype ChartTemplateProps<T extends 'Line' | 'Candlestick'> = {\n    chartName: string;\n    loadingData: boolean;\n    seriesType: T;\n    seriesData: T extends 'Line' ? LineData[] : CandlestickData[];\n    seriesOptions?: DeepPartial<\n        (T extends 'Line' ? LineStyleOptions : CandlestickStyleOptions) & SeriesOptionsCommon\n    >;\n    chartOptions?: DeepPartial<ChartOptions>;\n    volumesData?: Array<WhitespaceData | HistogramData>;\n};\n\n/**\n * Chart template.\n *\n * @param {ChartTemplateProps} props Props.\n * @returns React component.\n */\nexport const ChartTemplate = <T extends 'Line' | 'Candlestick'>({\n    chartName,\n    loadingData,\n    seriesType,\n    seriesData,\n    seriesOptions,\n    chartOptions,\n    volumesData,\n}: ChartTemplateProps<T>): ReactElement => {\n    const ref = useRef<HTMLDivElement>(null);\n    const { dataRange, displayVolumes } = useContext(ChartSettingsContext);\n    const options = useMemo(\n        (): DeepPartial<ChartOptions> => ({\n            ...chartOptions,\n            localization: {\n                timeFormatter: (t: UTCTimestamp) =>\n                    formatUTCTimestamp(t, getDateFormatBasedOnDateUnit(dataRange)),\n            },\n            timeScale: {\n                tickMarkFormatter: (t: UTCTimestamp) =>\n                    formatUTCTimestamp(t, getDateFormatBasedOnDateUnit(dataRange)),\n                fixRightEdge: true,\n            },\n            rightPriceScale: {\n                scaleMargins: {\n                    top: 0.2,\n                    bottom: displayVolumes ? 0.3 : 0.2,\n                },\n            },\n        }),\n        [chartOptions, dataRange, displayVolumes],\n    );\n\n    const { chart } = useChart({ ref, options });\n\n    const { price } = useRenderChartData({\n        seriesType,\n        seriesData,\n        chart,\n        options: seriesOptions,\n        visibleRange: dataRange,\n        volumes: volumesData,\n    });\n\n    return (\n        <div\n            ref={ref}\n            className=\"circuitChart\"\n        >\n            <ChartLegend\n                price={price}\n                name={chartName}\n            />\n            {loadingData && seriesData.length === 0 && <Spinner grow />}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useContext, useMemo } from 'react';\nimport { LineWidth } from 'lightweight-charts';\nimport { useGetCircuitDashboardData } from 'src/hooks';\nimport colors from 'src/styles/export.module.scss';\nimport { ChartTemplate } from '../ChartTemplate';\nimport { ChartSettingsContext } from '../CircuitDashboard';\n\n/**\n * Proof cost chart.\n *\n * @returns React component.\n */\nexport const ProofCostChart = (): ReactElement => {\n    const seriesOptions = useMemo(\n        () => ({\n            upColor: colors.successColor,\n            downColor: colors.dangerColor,\n            priceLineWidth: 2 as LineWidth,\n        }),\n        [],\n    );\n    const { dataRange, displayVolumes } = useContext(ChartSettingsContext);\n    const {\n        chartData: { candlestickChartData, volumesData },\n        loadingData: isLoadingChartData,\n    } = useGetCircuitDashboardData(displayVolumes, dataRange);\n\n    return (\n        <ChartTemplate\n            loadingData={isLoadingChartData}\n            chartName=\"Proof cost, USD\"\n            seriesData={candlestickChartData}\n            seriesType=\"Candlestick\"\n            seriesOptions={seriesOptions}\n            volumesData={volumesData}\n        />\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useContext, useMemo } from 'react';\nimport { useGetCircuitDashboardData } from 'src/hooks';\nimport colors from 'src/styles/export.module.scss';\nimport { ChartTemplate } from '../ChartTemplate';\nimport { ChartSettingsContext } from '../CircuitDashboard';\n\n/**\n * Proof cost chart.\n *\n * @returns React component.\n */\nexport const ProofTimeGenChart = (): ReactElement => {\n    const seriesOptions = useMemo(\n        () => ({\n            color: colors.infoColor,\n        }),\n        [],\n    );\n    const { dataRange, displayVolumes } = useContext(ChartSettingsContext);\n    const {\n        chartData: { proofGenTimeData, volumesData },\n        loadingData: isLoadingChartData,\n    } = useGetCircuitDashboardData(displayVolumes, dataRange);\n\n    return (\n        <ChartTemplate\n            loadingData={isLoadingChartData}\n            chartName=\"Proof Generation Time, min\"\n            seriesData={proofGenTimeData}\n            seriesType=\"Line\"\n            seriesOptions={seriesOptions}\n            volumesData={volumesData}\n        />\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode } from 'react';\nimport { DateUnit } from 'src/enums';\nimport { useLocalStorage } from 'src/hooks';\nimport { ChartSettingsContext } from './ChartSettingsContext';\n/**\n * Props.\n */\ntype ChartSettingsProviderProps = {\n    children?: ReactNode;\n};\n\n/**\n * Chart settings provider.\n *\n * @param {ChartSettingsProviderProps} props Props.\n * @returns React component.\n */\nexport const ChartSettingsProvider = ({ children }: ChartSettingsProviderProps): ReactElement => {\n    const [dataRange, setDataRange] = useLocalStorage<DateUnit>(\n        'circuitDashboardDataRange',\n        DateUnit.hour,\n    );\n\n    const [displayVolumes, setDisplayVolumes] = useLocalStorage(\n        'circuitDashboardDisplayVolumes',\n        false,\n    );\n\n    return (\n        <ChartSettingsContext.Provider\n            value={{\n                dataRange,\n                setDataRange,\n                displayVolumes,\n                setDisplayVolumes,\n            }}\n        >\n            {children}\n        </ChartSettingsContext.Provider>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useContext } from 'react';\nimport { Icon, Nav } from '@nilfoundation/react-components';\nimport { ChartSettingsContext } from './ChartSettingsContext';\n\n/**\n * Props.\n */\ntype DashboardToolbarProps = {\n    disabled: boolean;\n    isFullscreen: boolean;\n    setFullScreen: (x: boolean) => void;\n};\n\n/**\n * Dashboard toolbar.\n *\n * @param {DashboardToolbarProps} props Props.\n * @returns React component.\n */\nexport const DashboardToolbar = ({\n    disabled,\n    isFullscreen,\n    setFullScreen,\n}: DashboardToolbarProps): ReactElement => {\n    const { displayVolumes, setDisplayVolumes } = useContext(ChartSettingsContext);\n\n    return (\n        <Nav>\n            <Nav.Item\n                disabled={disabled}\n                active={displayVolumes}\n                onClick={() => setDisplayVolumes(!displayVolumes)}\n            >\n                <Icon iconName=\"fa-solid fa-chart-simple\" />\n            </Nav.Item>\n            <Nav.Item\n                disabled={disabled}\n                active={isFullscreen}\n                onClick={() => setFullScreen(!isFullscreen)}\n            >\n                <Icon iconName={`fa-solid fa-${isFullscreen ? 'compress' : 'expand'}`} />\n            </Nav.Item>\n        </Nav>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useMemo } from 'react';\nimport { DashboardCard } from 'src/components/common';\nimport { selectCurrentCircuit, useAppSelector } from 'src/redux';\nimport { renderDashOnEmptyValue } from 'src/utils';\nimport { PriceChangeIndicator } from '../PriceChangeIndicator';\nimport styles from './CircuitInfoPanel.module.scss';\n\n/**\n * Panel with circuit info.\n *\n * @returns React component.\n */\nexport const CircuitInfoPanel = (): ReactElement => {\n    const currentCircuit = useAppSelector(selectCurrentCircuit);\n    const circuitInfo = useAppSelector(s =>\n        s.circuitsState.circuitsInfo.find(x => x._key === currentCircuit?._key),\n    );\n    const change = circuitInfo?.daily_change;\n\n    const name = useMemo(() => {\n        if (!currentCircuit) {\n            return '';\n        }\n\n        const { name, inputDescription } = currentCircuit;\n        return `${name.toUpperCase()}${\n            inputDescription ? ` (${inputDescription?.toUpperCase()})` : ''\n        }/USD`;\n    }, [currentCircuit]);\n\n    return (\n        <DashboardCard className={styles.panel}>\n            <div className={styles.container}>\n                {currentCircuit && <div>{name}</div>}\n                <div>\n                    <div className={`text-muted ${styles.title}`}>Current cost</div>\n                    <div>{renderDashOnEmptyValue(circuitInfo?.current)}</div>\n                </div>\n                <div>\n                    <div className={`text-muted ${styles.title}`}>24h Change</div>\n                    <div>\n                        {!!change ? (\n                            <PriceChangeIndicator change={change} />\n                        ) : (\n                            renderDashOnEmptyValue(undefined)\n                        )}\n                    </div>\n                </div>\n                <div>\n                    <div className={`text-muted ${styles.title}`}>24h High</div>\n                    <div>{renderDashOnEmptyValue(circuitInfo?.max)}</div>\n                </div>\n                <div>\n                    <div className={`text-muted ${styles.title}`}>24h Low</div>\n                    <div>{renderDashOnEmptyValue(circuitInfo?.min)}</div>\n                </div>\n                <div>\n                    <div className={`text-muted ${styles.title}`}>24h Volume</div>\n                    <div>{renderDashOnEmptyValue(circuitInfo?.volume, 0)}</div>\n                </div>\n            </div>\n        </DashboardCard>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useState } from 'react';\nimport { ChartType } from 'src/enums';\nimport { selectCurrentCircuit, useAppSelector } from 'src/redux';\nimport { DashboardCard, FullScreenView } from '../../common';\nimport { ChartTypeSelect } from './ChartTypeSelect';\nimport { DataRangeSelect } from './DataRangeSelect';\nimport { ProofCostChart, ProofTimeGenChart } from '../CircuitCharts';\nimport { ChartSettingsProvider } from './ChartSettingsProvider';\nimport { DashboardToolbar } from './DashboardToolbar';\nimport { CircuitInfoPanel } from '../CircuitInfoPanel';\nimport './CircuitDashboard.scss';\n\n/**\n * Circuit dashboard.\n *\n * @returns React component.\n */\nexport const CircuitDashboard = (): ReactElement => {\n    const currentCircuit = useAppSelector(selectCurrentCircuit);\n    const [chartType, setChartType] = useState(ChartType.proofCostChart);\n    const [fullScreen, setFullScreen] = useState(false);\n\n    return (\n        <DashboardCard>\n            <div className=\"circuitDashboard\">\n                <ChartSettingsProvider>\n                    <ChartTypeSelect\n                        chartType={chartType}\n                        onSelectChartType={setChartType}\n                        disabled={!currentCircuit}\n                    />\n                    <FullScreenView\n                        showFullScreen={fullScreen}\n                        className=\"fullScreenChartContainer\"\n                    >\n                        {fullScreen && <CircuitInfoPanel />}\n                        <div className=\"circuitDashboard__toolbar\">\n                            <DataRangeSelect disabled={!currentCircuit} />\n                            <DashboardToolbar\n                                disabled={!currentCircuit}\n                                isFullscreen={fullScreen}\n                                setFullScreen={setFullScreen}\n                            />\n                        </div>\n                        <ChartFactory chartType={chartType} />\n                    </FullScreenView>\n                </ChartSettingsProvider>\n            </div>\n        </DashboardCard>\n    );\n};\n\n/**\n * Renders chart depending on its type.\n *\n * @param {{chartType: ChartType}} props Props.\n * @returns Chart.\n */\nconst ChartFactory = ({ chartType }: { chartType: ChartType }) => {\n    switch (chartType) {\n        case ChartType.proofCostChart:\n            return <ProofCostChart />;\n        case ChartType.proofGetTimeChart:\n            return <ProofTimeGenChart />;\n        default:\n            return <></>;\n    }\n};\n","/**\n * @file React context.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createContext } from 'react';\nimport { CostAndEvalTime } from 'src/models';\n\n/**\n * Context type.\n */\ntype OrderManagementContextModel = {\n    processing: boolean;\n    setProcessing: (processing: boolean) => void;\n    selectedValues?: CostAndEvalTime;\n    setSelectedValues: (costAndEvalTime?: CostAndEvalTime) => void;\n};\n\n/**\n * Order management context.\n */\nexport const OrderManagementContext = createContext<OrderManagementContextModel>(\n    {} as OrderManagementContextModel,\n);\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode, useState } from 'react';\nimport { CostAndEvalTime } from 'src/models';\nimport { OrderManagementContext } from './OrderManagementContext';\n\n/**\n * Props.\n */\ntype OrderManagementContextProviderProps = {\n    children?: ReactNode;\n};\n\n/**\n * Order management context provider.\n *\n * @param {OrderManagementContextProviderProps} props Props.\n * @returns React component.\n */\nexport const OrderManagementContextProvider = ({\n    children,\n}: OrderManagementContextProviderProps): ReactElement => {\n    const [processing, setProcessing] = useState(false);\n    const [selectedValues, setSelectedValues] = useState<CostAndEvalTime>();\n\n    return (\n        <OrderManagementContext.Provider\n            value={{ processing, setProcessing, selectedValues, setSelectedValues }}\n        >\n            {children}\n        </OrderManagementContext.Provider>\n    );\n};\n","/**\n * @file React context.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createContext } from 'react';\nimport { OrderBookPriceStep } from 'src/enums';\n\n/**\n * Context type.\n */\ntype OrderBookSettingsContectModel = {\n    priceStep: keyof typeof OrderBookPriceStep;\n    setPriceStep: (s: keyof typeof OrderBookPriceStep) => void;\n    displayUserOrders: boolean;\n    setDisplayUserOrders: (v: boolean) => void;\n};\n\n/**\n * Order book settings context.\n */\nexport const OrderBookSettingsContext = createContext<OrderBookSettingsContectModel>(\n    {} as OrderBookSettingsContectModel,\n);\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Label } from '@nilfoundation/react-components';\nimport { Cell } from 'react-table';\nimport { OrderBookTableData } from 'src/models';\nimport { TCell } from 'src/components';\nimport { renderDashOnEmptyValue } from 'src/utils';\n\n/**\n * Props.\n */\ntype OrderBookTableCellProps = {\n    cell: Cell<OrderBookTableData>;\n    userOrdersAmount?: number;\n};\n\n/**\n * Order book table cell.\n *\n * @param {OrderBookTableCellProps} props Props.\n * @returns React component.\n */\nexport const OrderBookTableCell = ({\n    cell,\n    userOrdersAmount,\n}: OrderBookTableCellProps): ReactElement => {\n    const { column, value, getCellProps } = cell;\n\n    return (\n        <TCell {...getCellProps()}>\n            <span>{column.id === 'ordersAmount' ? value : renderDashOnEmptyValue(value)}</span>\n            {!!userOrdersAmount && (\n                <Label>\n                    <span>{userOrdersAmount}</span>\n                </Label>\n            )}\n        </TCell>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { CSSProperties, KeyboardEventHandler, ReactElement, useContext } from 'react';\nimport { Row } from 'react-table';\nimport { TRow } from 'src/components';\nimport { OrderBookTableData } from 'src/models';\nimport { OrderManagementContext } from '../OrderManagementContextProvider';\nimport { OrderBookSettingsContext } from './OrderBookSettingsContext';\nimport { OrderBookTableCell } from './OrderBookTableCell';\n\n/**\n * Props.\n */\ntype OrderBookTableRowProps = {\n    row: Row<OrderBookTableData>;\n    volume: number;\n    className?: string;\n};\n\n/**\n * Order book table row.\n *\n * @param {OrderBookTableRowProps} props Props.\n * @returns React component.\n */\nexport const OrderBookTableRow = ({\n    row,\n    volume,\n    className: propsClassName,\n}: OrderBookTableRowProps): ReactElement => {\n    const { setSelectedValues } = useContext(OrderManagementContext);\n    const { displayUserOrders } = useContext(OrderBookSettingsContext);\n    const onClickRow = () => {\n        setSelectedValues({\n            cost: row.values.cost,\n            eval_time: row.values.eval_time,\n        });\n    };\n\n    const onKeyDownHandler: KeyboardEventHandler = e => {\n        if (e.key !== 'Enter' && e.key !== ' ') {\n            return;\n        }\n\n        e.preventDefault();\n        onClickRow();\n    };\n\n    const { className, style, ...rest } = row.getRowProps();\n    const combinedStyle = { ...style, '--bar-width': `${volume}%` } as CSSProperties;\n    const combinedClassName = `${className ?? ''} ${propsClassName ?? ''}`;\n\n    return (\n        <TRow\n            {...rest}\n            onClick={onClickRow}\n            onKeyDown={onKeyDownHandler}\n            tabIndex={0}\n            style={combinedStyle}\n            className={combinedClassName}\n        >\n            {row.cells.map(cell => {\n                const { key } = cell.getCellProps();\n                return (\n                    <OrderBookTableCell\n                        key={key}\n                        cell={cell}\n                        userOrdersAmount={\n                            cell.column.id !== 'ordersAmount' || !displayUserOrders\n                                ? undefined\n                                : row.values.userOrdersAmount\n                        }\n                    />\n                );\n            })}\n        </TRow>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, memo, useCallback } from 'react';\nimport { Row, TableInstance, TableState } from 'react-table';\nimport { LastOrderData, OrderBookTableColumn, OrderBookTableData } from 'src/models';\nimport { ReactTable, ReactTableHeader } from 'src/components';\nimport { OrderBookTableRow } from './OrderBookTableRow';\nimport styles from './OrderBook.module.scss';\n\n/**\n * Props.\n */\ntype OrderBookTableProps = {\n    columns: OrderBookTableColumn[];\n    data: OrderBookTableData[];\n    lastOrderData?: LastOrderData;\n    maxVolume: number;\n};\n\ntype RowWithVolume = Row<OrderBookTableData> & { volume: number };\n\n/**\n * Initial table state without user interactions.\n */\nconst defaultOrderBookState: Partial<TableState<OrderBookTableData>> = {\n    sortBy: [\n        {\n            id: 'cost',\n            desc: true,\n        },\n    ],\n    hiddenColumns: ['type', 'userOrdersAmount'],\n};\n\n/**\n * Order book table.\n *\n * @param {OrderBookTableProps} props Props.\n * @returns React component.\n */\nexport const OrderBookTable = memo(function OrderBookTable({\n    columns,\n    data,\n    lastOrderData,\n    maxVolume,\n}: OrderBookTableProps): ReactElement {\n    const renderRows = useCallback(\n        ({ rows, prepareRow }: TableInstance<OrderBookTableData>) => {\n            return (\n                <>\n                    <div className={styles.rowsContainer}>\n                        {getDataWithVolumes(\n                            rows.filter(x => x.values.type === 'ask'),\n                            maxVolume,\n                        ).map(row => renderRow(row, prepareRow, styles.ask))}\n                    </div>\n                    {lastOrderData && (\n                        <div className={styles.lastOrderDataContainer}>\n                            {lastOrderData.cost && (\n                                <div className={lastOrderData.type}>{`${lastOrderData.cost.toFixed(\n                                    4,\n                                )} $`}</div>\n                            )}\n                            {lastOrderData.eval_time && (\n                                <div className=\"text-muted\">{`${lastOrderData.eval_time.toFixed(\n                                    4,\n                                )} min`}</div>\n                            )}\n                        </div>\n                    )}\n                    <div className={styles.rowsContainer}>\n                        {getDataWithVolumes(\n                            rows.reverse().filter(x => x.values.type === 'bid'),\n                            maxVolume,\n                        ).map(row => renderRow(row, prepareRow, styles.bid))}\n                    </div>\n                </>\n            );\n        },\n        [lastOrderData, maxVolume],\n    );\n\n    const renderHeaders = useCallback(({ visibleColumns }: TableInstance<OrderBookTableData>) => {\n        return (\n            <>\n                {visibleColumns.map(column => (\n                    <ReactTableHeader\n                        key={column.id}\n                        column={column}\n                        onlySortBy=\"desc\"\n                    />\n                ))}\n            </>\n        );\n    }, []);\n\n    return (\n        <ReactTable\n            name=\"orderBookTable\"\n            className={styles.orderBookTable}\n            renderRows={renderRows}\n            renderHeaders={renderHeaders}\n            data={data}\n            columns={columns}\n            disableSortRemove={true}\n            initialState={defaultOrderBookState}\n        />\n    );\n});\n\n/**\n * Render row.\n *\n * @param row Row instance.\n * @param prepareRow Prepare row callback.\n * @param className HTML Class.\n * @returns Row.\n */\nconst renderRow = (\n    row: RowWithVolume,\n    prepareRow: (r: Row<OrderBookTableData>) => void,\n    className: string,\n): ReactElement => {\n    prepareRow(row);\n    return (\n        <OrderBookTableRow\n            key={row.id}\n            row={row}\n            volume={row.volume}\n            className={className}\n        />\n    );\n};\n\n/**\n * Adds volume data to each order book data item.\n *\n * @param data Data.\n * @param maxVolume Max volume.\n * @returns Data with voulmes.\n */\nconst getDataWithVolumes = (\n    data: Row<OrderBookTableData>[],\n    maxVolume: number,\n): RowWithVolume[] => {\n    let count = 0;\n\n    const finalData = data.map(x => {\n        count = count + x.values.ordersAmount;\n\n        return {\n            ...x,\n            volume: 100 - ((maxVolume - count) / maxVolume) * 100,\n        };\n    });\n\n    return finalData;\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useContext } from 'react';\nimport { Dropdown } from '@nilfoundation/react-components';\nimport { OrderBookPriceStep } from 'src/enums';\nimport { useAuth } from 'src/hooks';\nimport { OrderBookSettingsContext } from './OrderBookSettingsContext';\nimport styles from './OrderBook.module.scss';\n\n/**\n * Props.\n */\ntype OrderBookToolbarProps = {\n    disabled: boolean;\n};\n\n/**\n * OrderBook toolbar.\n *\n * @param {OrderBookToolbarProps} props Props.\n * @returns React component.\n */\nexport const OrderBookToolbar = ({ disabled }: OrderBookToolbarProps): ReactElement => {\n    const { priceStep, setPriceStep, displayUserOrders, setDisplayUserOrders } =\n        useContext(OrderBookSettingsContext);\n    const { isReadonly } = useAuth();\n\n    return (\n        <>\n            <div className={styles.checkboxContainer}>\n                <input\n                    id=\"toggleDisplayUserOrders\"\n                    type=\"checkbox\"\n                    className={styles.checkbox}\n                    checked={displayUserOrders}\n                    onChange={() => setDisplayUserOrders(!displayUserOrders)}\n                    disabled={isReadonly}\n                />\n                <label\n                    className={styles.label}\n                    htmlFor=\"toggleDisplayUserOrders\"\n                >\n                    Show my orders\n                </label>\n            </div>\n            <Dropdown>\n                <Dropdown.Button\n                    className={styles.changePriceStepButton}\n                    disabled={disabled}\n                >\n                    {priceStep}\n                </Dropdown.Button>\n                <Dropdown.Menu align=\"right\">\n                    {Object.keys(OrderBookPriceStep)\n                        .sort()\n                        .map(x => (\n                            <Dropdown.Item\n                                key={x}\n                                onSelect={() => setPriceStep(x as keyof typeof OrderBookPriceStep)}\n                                active={x === priceStep}\n                            >\n                                <span>{x}</span>\n                            </Dropdown.Item>\n                        ))}\n                </Dropdown.Menu>\n            </Dropdown>\n        </>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Spinner } from '@nilfoundation/react-components';\nimport { useGetOrderBookData, UseGetOrderBookDataReturnType, useLocalStorage } from 'src/hooks';\nimport { OrderBookPriceStep } from 'src/enums';\nimport { OrderBookTable } from './OrderBookTable';\nimport { OrderBookSettingsContext } from './OrderBookSettingsContext';\nimport { DashboardCard } from '../../common';\nimport { OrderBookToolbar } from './OrderBookToolbar';\nimport styles from './OrderBook.module.scss';\n\n/**\n * Order book.\n *\n * @returns React component.\n */\nexport const OrderBook = (): ReactElement => {\n    const [priceStep, setPriceStep] = useLocalStorage<keyof typeof OrderBookPriceStep>(\n        'orderBookPriceStep',\n        '0.001',\n    );\n    const [displayUserOrders, setDisplayUserOrders] = useLocalStorage<boolean>(\n        'displayUserOrdersInOrderbook',\n        true,\n    );\n    const orderBookData = useGetOrderBookData({ priceStep });\n\n    return (\n        <DashboardCard>\n            <OrderBookSettingsContext.Provider\n                value={{ priceStep, setPriceStep, displayUserOrders, setDisplayUserOrders }}\n            >\n                <div className={styles.header}>\n                    <h4>Order book</h4>\n                    <OrderBookToolbar\n                        disabled={!orderBookData.data.length && orderBookData.loadingData}\n                    />\n                </div>\n                <div className={styles.orderBook}>{OrderBookViewFactory(orderBookData)}</div>\n            </OrderBookSettingsContext.Provider>\n        </DashboardCard>\n    );\n};\n\n/**\n * Renders order book view.\n *\n * @param {UseGetOrderBookDataReturnType} props Props.\n * @returns React element.\n */\nconst OrderBookViewFactory = ({\n    data,\n    columns,\n    loadingData,\n    isError,\n    lastOrderData,\n    maxVolume,\n}: UseGetOrderBookDataReturnType) => {\n    switch (true) {\n        case loadingData && !data.length:\n            return <Spinner grow />;\n        case isError:\n            return <h5>Error while loading data.</h5>;\n        case !!data.length:\n            return (\n                <OrderBookTable\n                    data={data}\n                    columns={columns}\n                    lastOrderData={lastOrderData}\n                    maxVolume={maxVolume}\n                />\n            );\n        default:\n            return <h5>No orders.</h5>;\n    }\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode, useRef } from 'react';\nimport { Form, uniqueId } from '@nilfoundation/react-components';\n\n/**\n * Props.\n */\ntype BaseFormGroupProps = {\n    hasError: boolean;\n    children: ({ placeholder, id }: { placeholder?: string; id?: string }) => ReactNode;\n    hintText?: string;\n    labelText?: string;\n    className?: string;\n};\n\n/**\n * Base form group with label and hint.\n *\n * @param {BaseFormGroupProps} props Props.\n * @returns React component.\n */\nexport const BaseFormGroup = ({\n    hasError,\n    children,\n    hintText,\n    labelText,\n    className,\n}: BaseFormGroupProps): ReactElement => {\n    const { current } = useRef(uniqueId(labelText));\n\n    return (\n        <Form.Group\n            hasError={hasError}\n            className={className}\n        >\n            {labelText && <Form.Label htmlFor={current}>{labelText}</Form.Label>}\n            {children({\n                placeholder: hintText,\n                id: current,\n            })}\n        </Form.Group>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode, useContext, useEffect, useRef } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { CSSTransition } from 'react-transition-group';\nimport {\n    Button,\n    Input,\n    Size,\n    Spinner,\n    Variant,\n    Form,\n    InputGroup,\n} from '@nilfoundation/react-components';\nimport { CreateTradeOrder } from 'src/models';\nimport { useAuth } from 'src/hooks';\nimport { Details } from '../../common';\nimport { OrderManagementContext } from '../OrderManagementContextProvider';\nimport { BaseFormGroup } from './BaseFormGroup';\nimport styles from './CreateTradeOrderForm.module.scss';\n\n/**\n * Props.\n */\ntype CreateTradeOrderFormProps = {\n    onSubmit: () => Promise<void>;\n    errorMessage: string;\n    children?: ReactNode;\n};\n\n/**\n * Validates input value.\n *\n * @param v Value.\n * @returns Validation result.\n */\nconst validateFn = (v?: number) => v !== undefined && (v >= 0 || isNaN(v));\n\n/**\n * Create trade order form.\n *\n * @param {CreateTradeOrderFormProps} props Props.\n * @returns React component.\n */\nexport const CreateTradeOrderForm = ({\n    onSubmit,\n    errorMessage,\n    children,\n}: CreateTradeOrderFormProps): ReactElement => {\n    const nodeRef = useRef(null);\n    const { selectedValues, setSelectedValues } = useContext(OrderManagementContext);\n    const {\n        register,\n        setValue,\n        formState: { isSubmitting, isValid, errors },\n    } = useFormContext<CreateTradeOrder>();\n    const { user, isReadonly } = useAuth();\n\n    useEffect(() => {\n        if (!selectedValues) {\n            return;\n        }\n\n        const setValueOpts = { shouldDirty: true, shouldValidate: true };\n        setValue('cost', selectedValues.cost, setValueOpts);\n        setValue('eval_time', selectedValues.eval_time, setValueOpts);\n        setSelectedValues(undefined);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedValues]);\n\n    return (\n        <Form>\n            <div className=\"formContent\">\n                <BaseFormGroup\n                    hasError={!!errors['cost']}\n                    labelText=\"Cost\"\n                    hintText=\"Proof cost\"\n                >\n                    {props => (\n                        <InputGroup className={styles.control}>\n                            <Input\n                                type=\"number\"\n                                {...props}\n                                {...register('cost', {\n                                    required: true,\n                                    min: 0,\n                                    valueAsNumber: true,\n                                })}\n                            />\n                            <InputGroup.Addon>USD</InputGroup.Addon>\n                        </InputGroup>\n                    )}\n                </BaseFormGroup>\n                <Details\n                    title={\n                        <div className={`${styles.detailsTitle} text-muted`}>\n                            Additional parameters\n                        </div>\n                    }\n                    bottomIndent={false}\n                    defaultOpen={false}\n                >\n                    <BaseFormGroup\n                        hasError={!!errors['eval_time']}\n                        labelText=\"Generation time\"\n                        hintText=\"Proof generation time\"\n                    >\n                        {props => (\n                            <InputGroup className={styles.control}>\n                                <Input\n                                    type=\"number\"\n                                    {...props}\n                                    {...register('eval_time', {\n                                        required: false,\n                                        validate: validateFn,\n                                        valueAsNumber: true,\n                                    })}\n                                />\n                                <InputGroup.Addon>Mins</InputGroup.Addon>\n                            </InputGroup>\n                        )}\n                    </BaseFormGroup>\n                    <BaseFormGroup\n                        hasError={!!errors['wait_period']}\n                        labelText=\"Order timeout\"\n                        hintText=\"Order cancellation time\"\n                    >\n                        {props => (\n                            <InputGroup className={styles.control}>\n                                <Input\n                                    type=\"number\"\n                                    {...props}\n                                    {...register('wait_period', {\n                                        required: false,\n                                        validate: validateFn,\n                                        valueAsNumber: true,\n                                    })}\n                                />\n                                <InputGroup.Addon>Mins</InputGroup.Addon>\n                            </InputGroup>\n                        )}\n                    </BaseFormGroup>\n                </Details>\n                {children}\n            </div>\n            <Button\n                variant={Variant.success}\n                onClick={onSubmit}\n                size={Size.lg}\n                disabled={!isValid || isSubmitting || !user || isReadonly}\n            >\n                Submit\n                {isSubmitting && <Spinner />}\n            </Button>\n            <CSSTransition\n                classNames=\"fade\"\n                timeout={300}\n                in={!!errorMessage}\n                nodeRef={nodeRef}\n            >\n                <div\n                    ref={nodeRef}\n                    className=\"errorMessage\"\n                >\n                    {errorMessage}\n                </div>\n            </CSSTransition>\n        </Form>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useCallback, useContext } from 'react';\nimport { Controller, ControllerRenderProps, useFormContext } from 'react-hook-form';\nimport { FileRejection } from 'react-dropzone';\nimport { CreateBid } from 'src/models';\nimport { FileUploader as FileUploaderTemplate } from 'src/components';\nimport { OrderManagementContext } from '../OrderManagementContextProvider';\nimport { BaseFormGroup } from '../CreateTradeOrderForm';\nimport './PublicInput.scss';\n\n/**\n * Public_input filed input.\n *\n * @returns React component.\n */\nexport const PublicInput = (): ReactElement => {\n    const { processing } = useContext(OrderManagementContext);\n    const {\n        control,\n        formState: { errors },\n    } = useFormContext<CreateBid>();\n\n    return (\n        <BaseFormGroup\n            hasError={!!errors['public_input']}\n            labelText=\"Public Input\"\n            className=\"publicInput\"\n        >\n            {() => (\n                <Controller<CreateBid, 'public_input'>\n                    name=\"public_input\"\n                    control={control}\n                    rules={{\n                        validate: val => val !== null && !!val,\n                    }}\n                    render={({ field: { ref: _, ...rest } }) => (\n                        <FileUploader\n                            {...rest}\n                            disabled={processing}\n                        />\n                    )}\n                />\n            )}\n        </BaseFormGroup>\n    );\n};\n\n/**\n * Props.\n */\ntype FileUploaderProps = {\n    disabled?: boolean;\n} & Omit<ControllerRenderProps<CreateBid, 'public_input'>, 'ref'>;\n\n/**\n * Renders file uploader.\n *\n * @param {FileUploaderProps} props Props.\n * @returns Recat component.\n */\nconst FileUploader = ({ onChange, disabled }: FileUploaderProps): ReactElement => {\n    const handleJsonFile = useCallback(\n        (acceptedFiles: File[], fileRejections: FileRejection[]) => {\n            if (fileRejections.length !== 0) {\n                onChange(null);\n            }\n\n            const reader = new FileReader();\n\n            reader.onload = ({ target }) => {\n                if (!target || !target.result) {\n                    return;\n                }\n\n                const obj = JSON.parse(target.result as string);\n                onChange(obj);\n            };\n\n            reader.onerror = () => {\n                /*Do nothing*/\n            };\n            reader.onabort = () => {\n                /*Do nothing*/\n            };\n\n            const file = acceptedFiles.at(0);\n            file && reader.readAsText(file);\n        },\n        [onChange],\n    );\n\n    return (\n        <FileUploaderTemplate\n            multiple={false}\n            disabled={disabled}\n            accept={{\n                'application/json': ['.json'],\n            }}\n            onDrop={handleJsonFile}\n        />\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useContext, useState } from 'react';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { notificationActions, Variant } from '@nilfoundation/react-components';\nimport { CreateBid } from 'src/models';\nimport { AddBid, useAppSelector } from 'src/redux';\nimport { createBid } from 'src/api/market/BidsApi';\nimport { OrderManagementContext } from '../OrderManagementContextProvider';\nimport { CreateTradeOrderForm } from '../CreateTradeOrderForm';\nimport { PublicInput } from './PublicInput';\n\n/**\n * Create bid form.\n *\n * @returns React component.\n */\nexport const CreateBidForm = (): ReactElement => {\n    const { setProcessing } = useContext(OrderManagementContext);\n    const user = useAppSelector(s => s.userState.name)!;\n    const selectedCircuitId = useAppSelector(s => s.circuitsState.selectedid);\n    const dispatch = useDispatch();\n    const [errorMessage, setErrorMessage] = useState('');\n    const form = useForm<CreateBid>({\n        mode: 'onChange',\n        defaultValues: {\n            sender: user,\n            statement_key: selectedCircuitId,\n        },\n    });\n\n    const onSubmitBid = form.handleSubmit(async (data: CreateBid): Promise<void> => {\n        setErrorMessage('');\n        setProcessing(true);\n        try {\n            const bid = await createBid(data);\n            dispatch(AddBid(bid));\n\n            const { cost, eval_time } = data;\n\n            notificationActions?.create({\n                title: 'Order successfully created',\n                message: `Cost: ${cost}${eval_time ? `, eval_time: ${eval_time}` : ''}`,\n                variant: Variant.success,\n            });\n            form.reset();\n        } catch (e) {\n            setErrorMessage('Create order error');\n        } finally {\n            setProcessing(false);\n        }\n    });\n\n    return (\n        <FormProvider {...form}>\n            <CreateTradeOrderForm\n                onSubmit={onSubmitBid}\n                errorMessage={errorMessage}\n            >\n                <PublicInput />\n            </CreateTradeOrderForm>\n        </FormProvider>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useState, useContext } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { notificationActions, Variant } from '@nilfoundation/react-components';\nimport { CreateAsk } from 'src/models';\nimport { AddAsk, useAppSelector } from 'src/redux';\nimport { createAsk } from 'src/api/market/AsksApi';\nimport { OrderManagementContext } from '../OrderManagementContextProvider';\nimport { CreateTradeOrderForm } from '../CreateTradeOrderForm';\n\n/**\n * Create ask form.\n *\n * @returns React component.\n */\nexport const CreateAskForm = (): ReactElement => {\n    const { setProcessing } = useContext(OrderManagementContext);\n    const user = useAppSelector(s => s.userState.name)!;\n    const selectedCircuitId = useAppSelector(s => s.circuitsState.selectedid);\n    const dispatch = useDispatch();\n    const [errorMessage, setErrorMessage] = useState('');\n    const form = useForm<CreateAsk>({\n        mode: 'onChange',\n        defaultValues: {\n            sender: user,\n            statement_key: selectedCircuitId,\n        },\n    });\n\n    const onSubmitAsk = form.handleSubmit(async (data: CreateAsk): Promise<void> => {\n        setErrorMessage('');\n        setProcessing(true);\n        try {\n            const ask = await createAsk(data);\n            dispatch(AddAsk(ask));\n\n            const { cost, eval_time } = data;\n\n            notificationActions?.create({\n                title: 'Order successfully created',\n                message: `Cost: ${cost}${eval_time ? `, eval_time: ${eval_time}` : ''}`,\n                variant: Variant.success,\n            });\n            form.reset();\n        } catch (e) {\n            setErrorMessage(`Create order error`);\n        } finally {\n            setProcessing(false);\n        }\n    });\n\n    return (\n        <FormProvider {...form}>\n            <CreateTradeOrderForm\n                onSubmit={onSubmitAsk}\n                errorMessage={errorMessage}\n            />\n        </FormProvider>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useContext } from 'react';\nimport { Nav } from '@nilfoundation/react-components';\nimport { TradeOrderType } from 'src/models';\nimport { OrderManagementContext } from '../OrderManagementContextProvider';\n\n/**\n * Props.\n */\ntype OrderManagementTabsProps = {\n    currentTab: TradeOrderType;\n    onSetTab: (t: TradeOrderType) => void;\n};\n\n/**\n * Order management panel.\n *\n * @param {OrderManagementTabsProps} props Props.\n * @returns React component.\n */\nexport const CreateOrdersTabs = ({\n    currentTab,\n    onSetTab,\n}: OrderManagementTabsProps): ReactElement => {\n    const { processing } = useContext(OrderManagementContext);\n\n    return (\n        <Nav justified>\n            {Object.values(TradeOrderType).map(t => (\n                <Nav.Item\n                    key={t}\n                    onClick={() => onSetTab(t)}\n                    active={t === currentTab}\n                    disabled={processing}\n                >\n                    {t}\n                </Nav.Item>\n            ))}\n        </Nav>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useState } from 'react';\nimport { useAppSelector } from 'src/redux';\nimport { TradeOrderType } from 'src/models';\nimport { DashboardCard, Details } from '../../common';\nimport { ProtectedContent } from '../../login';\nimport { CreateBidForm } from '../CreateBidForm';\nimport { CreateAskForm } from '../CreateAskForm';\nimport { CreateOrdersTabs } from './CreateOrdersTabs';\nimport './CreateOrdersPanel.scss';\n\n/**\n * Create orders panel.\n *\n * @returns React component.\n */\nexport const CreateOrdersPanel = (): ReactElement => {\n    const [tab, setTab] = useState<TradeOrderType>(TradeOrderType.buy);\n    const selectedCircuitId = useAppSelector(s => s.circuitsState.selectedid);\n\n    return (\n        <DashboardCard>\n            <Details title={<h4>Create orders</h4>}>\n                <div className=\"cerateOrdersPanel\">\n                    <ProtectedContent overlayTitle=\"Authorization is required to create orders\">\n                        <CreateOrdersTabs\n                            currentTab={tab}\n                            onSetTab={setTab}\n                        />\n                        {tabFactory(tab, selectedCircuitId)}\n                    </ProtectedContent>\n                </div>\n            </Details>\n        </DashboardCard>\n    );\n};\n\n/**\n * Renders tab content conditionally.\n *\n * @param tab Selected tab.\n * @param selectedCircuitId Selected circuit id.\n * @returns React Element.\n */\nconst tabFactory = (tab: TradeOrderType, selectedCircuitId?: string) => {\n    if (selectedCircuitId === undefined) {\n        return <h5>Please, select circuit to create orders.</h5>;\n    }\n\n    switch (tab) {\n        case TradeOrderType.buy:\n            return <CreateBidForm />;\n        case TradeOrderType.sell:\n            return <CreateAskForm />;\n        default:\n            return <></>;\n    }\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, memo, useCallback } from 'react';\nimport { Row, TableInstance, TableState } from 'react-table';\nimport { TradeHistoryData, TradeHistoryTableColumn } from 'src/models';\nimport { ReactTable, TRow, TCell } from 'src/components';\nimport { renderDashOnEmptyValue } from 'src/utils';\nimport styles from './TradeHistory.module.scss';\n\n/**\n * Props.\n */\ntype TradeHistoryTableProps = {\n    columns: TradeHistoryTableColumn[];\n    data: TradeHistoryData[];\n};\n\n/**\n * Initial table state without user interactions.\n */\nconst defaultTableState: Partial<TableState<TradeHistoryData>> = {\n    sortBy: [\n        {\n            id: 'timestamp',\n            desc: true,\n        },\n    ],\n    hiddenColumns: ['type'],\n};\n\n/**\n * Order book table.\n *\n * @param {TradeHistoryTableProps} props Props.\n * @returns React component.\n */\nexport const TradeHistoryTable = memo(function TradeHistoryTable({\n    columns,\n    data,\n}: TradeHistoryTableProps): ReactElement {\n    const renderRows = useCallback(\n        ({ rows, prepareRow }: TableInstance<TradeHistoryData>) =>\n            rows.map(row => {\n                prepareRow(row);\n                return (\n                    <TRow\n                        {...row.getRowProps()}\n                        key={row.id}\n                    >\n                        {row.cells.map(cell => {\n                            const { value, column, getCellProps } = cell;\n                            const { key, ...rest } = getCellProps();\n\n                            return (\n                                <TCell\n                                    className={getCellClassName(row)}\n                                    key={key}\n                                    {...rest}\n                                >\n                                    {column.id !== 'timestamp'\n                                        ? renderDashOnEmptyValue(value)\n                                        : value}\n                                </TCell>\n                            );\n                        })}\n                    </TRow>\n                );\n            }),\n        [],\n    );\n\n    return (\n        <ReactTable\n            name=\"tradeHistoryTable\"\n            className={styles.table}\n            data={data}\n            columns={columns}\n            disableSortRemove={true}\n            renderRows={renderRows}\n            initialState={defaultTableState}\n        />\n    );\n});\n\n/**\n * Generate className to table cell.\n *\n * @param row Row.\n * @returns Class name.\n */\nconst getCellClassName = (row: Row<TradeHistoryData>) => {\n    if (row.values.type === undefined) {\n        return undefined;\n    }\n\n    return `${row.values.type}TextColor`;\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Spinner } from '@nilfoundation/react-components';\nimport { useGetTradeHistoryData, UseGetTradeHistoryDataReturnType } from 'src/hooks';\nimport { Details, DashboardCard } from '../../common';\nimport { TradeHistoryTable } from './TradeHistoryTable';\nimport styles from './TradeHistory.module.scss';\n\n/**\n * Trade history component.\n *\n * @returns React component.\n */\nexport const TradeHistory = (): ReactElement => {\n    const data = useGetTradeHistoryData();\n\n    return (\n        <DashboardCard>\n            <Details title={<h4>Trades</h4>}>\n                <div className={styles.container}>{TradeHistoryViewFactory({ ...data })}</div>\n            </Details>\n        </DashboardCard>\n    );\n};\n\n/**\n * Renders trade history view.\n *\n * @param {UseGetTradeHistoryDataReturnType} props Props.\n * @returns React element.\n */\nconst TradeHistoryViewFactory = ({\n    data,\n    columns,\n    loadingData,\n    isError,\n}: UseGetTradeHistoryDataReturnType) => {\n    switch (true) {\n        case loadingData && !data.length:\n            return <Spinner grow />;\n        case isError:\n            return <h5>Error while loading data.</h5>;\n        case !!data.length:\n            return (\n                <TradeHistoryTable\n                    data={data}\n                    columns={columns}\n                />\n            );\n        default:\n            return <h5>Empty history.</h5>;\n    }\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Nav } from '@nilfoundation/react-components';\nimport { ManageOrdersTab } from './ManageOrdersTab';\n\n/**\n * Props.\n */\ntype ManageOrdersPanelTabsProps = {\n    currentTab: ManageOrdersTab;\n    onSetTab: (t: ManageOrdersTab) => void;\n};\n\n/**\n * Manage orders panel tabs.\n *\n * @param {ManageOrdersPanelTabsProps} props Props.\n * @returns React component.\n */\nexport const ManageOrdersPanelTabs = ({\n    currentTab,\n    onSetTab,\n}: ManageOrdersPanelTabsProps): ReactElement => {\n    return (\n        <Nav justified>\n            {Object.values(ManageOrdersTab).map(t => (\n                <Nav.Item\n                    key={t}\n                    onClick={() => onSetTab(t)}\n                    active={t === currentTab}\n                >\n                    {t}\n                </Nav.Item>\n            ))}\n        </Nav>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Button, Size, Variant, Spinner } from '@nilfoundation/react-components';\n\n/**\n * Props.\n */\ntype ToolbarPanelProps = {\n    onAccept: () => void;\n    onDecline: () => void;\n    processing: boolean;\n    message?: string;\n};\n\n/**\n * Toolbar panel.\n *\n * @param {ToolbarPanelProps} props Props.\n * @returns React component.\n */\nexport const ToolbarPanel = ({\n    onAccept,\n    onDecline,\n    processing,\n    message,\n}: ToolbarPanelProps): ReactElement => {\n    return (\n        <div className=\"toolbarPanel\">\n            {message && <div className=\"message\">{message}</div>}\n            <div className=\"buttons\">\n                <Button\n                    onClick={onAccept}\n                    variant={Variant.success}\n                    size={Size.lg}\n                    disabled={processing}\n                    block\n                >\n                    Yes\n                    {processing && <Spinner />}\n                </Button>\n                <Button\n                    onClick={onDecline}\n                    variant={Variant.danger}\n                    size={Size.lg}\n                    disabled={processing}\n                    block\n                >\n                    No\n                </Button>\n            </div>\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, memo, useCallback, useState } from 'react';\nimport { Cell, Column, Row, TableInstance, TableState } from 'react-table';\nimport { Icon } from '@nilfoundation/react-components';\nimport { useDispatch } from 'react-redux';\nimport { ManageOrdersData, TradeOrderType } from 'src/models';\nimport { ReactTable, TRow, TCell, ClicableIcon } from 'src/components';\nimport { removeAsk, removeBid } from 'src/api';\nimport { RemoveAsk, RemoveBid } from 'src/redux';\nimport { renderDashOnEmptyValue } from 'src/utils';\nimport { useAuth } from 'src/hooks';\nimport { ToolbarPanel } from './ToolbarPanel';\n\n/**\n * Props.\n */\ntype ActiveOrdersTableProps = {\n    data: ManageOrdersData[];\n};\n\n/**\n * Table columns.\n */\nconst columns: Column<ManageOrdersData>[] = [\n    {\n        accessor: 'status',\n        disableSortBy: true,\n    },\n    {\n        Header: 'Time',\n        accessor: 'init_time',\n    },\n    {\n        Header: 'Type',\n        accessor: 'type',\n    },\n    {\n        Header: 'Cost',\n        accessor: 'cost',\n    },\n    {\n        Header: 'Gen time',\n        accessor: 'eval_time',\n    },\n    {\n        accessor: 'orderId',\n        disableSortBy: true,\n    },\n];\n\n/**\n * Initial table state without user interactions.\n */\nconst defaultTableState: Partial<TableState<ManageOrdersData>> = {\n    sortBy: [\n        {\n            id: 'init_time',\n            desc: true,\n        },\n    ],\n};\n\n/**\n * Active orders table.\n *\n * @param {ActiveOrdersTableProps} props Props.\n * @returns React component.\n */\nexport const ActiveOrdersTable = memo(function ActiveOrdersTable({\n    data,\n}: ActiveOrdersTableProps): ReactElement {\n    const [selectedRow, setSelectedRow] = useState<Row<ManageOrdersData> | null>(null);\n    const [processing, setProcessing] = useState(false);\n    const dispatch = useDispatch();\n    const { isReadonly } = useAuth();\n\n    const onAcceptRemoveOrder = useCallback(async () => {\n        setProcessing(true);\n\n        if (!selectedRow) {\n            return;\n        }\n\n        try {\n            const { orderId, type } = selectedRow.values;\n            const fetcher = type === TradeOrderType.buy ? removeBid : removeAsk;\n            const action = type === TradeOrderType.buy ? RemoveBid : RemoveAsk;\n\n            await fetcher(orderId);\n            dispatch(action(orderId));\n            setSelectedRow(null);\n        } catch (e) {\n            // TODO Handle error\n        } finally {\n            setProcessing(false);\n        }\n    }, [setProcessing, selectedRow, setSelectedRow, dispatch]);\n\n    const onDecline = useCallback(() => {\n        setSelectedRow(null);\n    }, [setSelectedRow]);\n\n    const renderRow = useCallback(\n        (\n            row: Row<ManageOrdersData>,\n            prepareRow: (r: Row<ManageOrdersData>) => void,\n            canRemove = false,\n        ) => {\n            prepareRow(row);\n\n            return (\n                <TRow\n                    {...row.getRowProps()}\n                    key={row.id}\n                >\n                    {row.cells.map(cell => {\n                        const { value, column, getCellProps } = cell;\n                        const { key, ...rest } = getCellProps();\n\n                        if (column.id === 'status') {\n                            const icon = `fa-solid fa-${\n                                value === 'created' ? 'circle-plus' : 'spinner'\n                            }`;\n\n                            return (\n                                <TCell\n                                    key={key}\n                                    {...rest}\n                                >\n                                    <Icon\n                                        title={value}\n                                        iconName={icon}\n                                    />\n                                </TCell>\n                            );\n                        }\n\n                        if (column.id === 'orderId') {\n                            return canRemove ? (\n                                <TCell\n                                    key={key}\n                                    {...rest}\n                                >\n                                    <ClicableIcon\n                                        iconName=\"fa-solid fa-ban\"\n                                        disabled={isReadonly || processing}\n                                        onClick={() => setSelectedRow(cell.row)}\n                                    />\n                                </TCell>\n                            ) : (\n                                <></>\n                            );\n                        }\n\n                        const shouldUseToFixed = column.id === 'eval_time' || column.id === 'cost';\n\n                        return (\n                            <TCell\n                                className={getCellClassName(cell)}\n                                key={key}\n                                {...rest}\n                            >\n                                <span>\n                                    {shouldUseToFixed ? renderDashOnEmptyValue(value) : value}\n                                </span>\n                            </TCell>\n                        );\n                    })}\n                </TRow>\n            );\n        },\n        [processing, setSelectedRow, isReadonly],\n    );\n\n    const renderRows = useCallback(\n        ({ rows, prepareRow }: TableInstance<ManageOrdersData>) => {\n            const activeOrders = rows.filter(x => x.values.status === 'created');\n            const inProgressOrders = rows.filter(x => x.values.status === 'processing');\n\n            return (\n                <>\n                    {activeOrders.length !== 0 &&\n                        activeOrders.map(x => renderRow(x, prepareRow, true))}\n                    {inProgressOrders.length !== 0 &&\n                        inProgressOrders.map(x => renderRow(x, prepareRow))}\n                </>\n            );\n        },\n        [renderRow],\n    );\n\n    return (\n        <>\n            <ReactTable\n                name=\"activeOrdersTable\"\n                className=\"activeOrdersTable\"\n                data={data}\n                columns={columns}\n                renderRows={renderRows}\n                disableSortRemove={true}\n                initialState={defaultTableState}\n            />\n            {selectedRow !== null && (\n                <ToolbarPanel\n                    onAccept={onAcceptRemoveOrder}\n                    onDecline={onDecline}\n                    processing={processing}\n                    message=\"Proceed removing order?\"\n                />\n            )}\n        </>\n    );\n});\n\n/**\n * Generate className to table cell.\n *\n * @param cell Cell.\n * @returns Class name.\n */\nconst getCellClassName = (cell: Cell<ManageOrdersData>) => {\n    if (cell.column.id !== 'type') {\n        return undefined;\n    }\n\n    return `${cell.value === TradeOrderType.buy ? 'grow' : 'loss'}TextColor`;\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, memo, useCallback } from 'react';\nimport { Cell, Column, TableInstance, TableState } from 'react-table';\nimport { ManageOrdersData, TradeOrderType } from 'src/models';\nimport { ReactTable, TRow, TCell } from 'src/components';\nimport { renderDashOnEmptyValue } from 'src/utils';\n\n/**\n * Props.\n */\ntype HistoryOrdersTableProps = {\n    data: ManageOrdersData[];\n};\n\n/**\n * Table columns.\n */\nconst columns: Column<ManageOrdersData>[] = [\n    {\n        Header: 'Time',\n        accessor: 'timestamp',\n    },\n    {\n        Header: 'Type',\n        accessor: 'type',\n    },\n    {\n        Header: 'Cost',\n        accessor: 'cost',\n    },\n    {\n        Header: 'Generation time',\n        accessor: 'eval_time',\n    },\n];\n\n/**\n * Initial table state without user interactions.\n */\nconst defaultTableState: Partial<TableState<ManageOrdersData>> = {\n    sortBy: [\n        {\n            id: 'timestamp',\n            desc: true,\n        },\n    ],\n};\n\n/**\n * History orders table.\n *\n * @param {HistoryOrdersTableProps} props Props.\n * @returns React component.\n */\nexport const HistoryOrdersTable = memo(function ActiveOrdersTable({\n    data,\n}: HistoryOrdersTableProps): ReactElement {\n    const renderRows = useCallback(\n        ({ rows, prepareRow }: TableInstance<ManageOrdersData>) =>\n            rows.map(row => {\n                prepareRow(row);\n                return (\n                    <TRow\n                        {...row.getRowProps()}\n                        key={row.id}\n                    >\n                        {row.cells.map(cell => {\n                            const { value, column, getCellProps } = cell;\n                            const { key, ...rest } = getCellProps();\n                            const shouldUseToFixed =\n                                column.id === 'eval_time' || column.id === 'cost';\n\n                            return (\n                                <TCell\n                                    className={getCellClassName(cell)}\n                                    key={key}\n                                    {...rest}\n                                >\n                                    <span>\n                                        {shouldUseToFixed ? renderDashOnEmptyValue(value) : value}\n                                    </span>\n                                </TCell>\n                            );\n                        })}\n                    </TRow>\n                );\n            }),\n        [],\n    );\n\n    return (\n        <ReactTable\n            name=\"historyOrdersTable\"\n            className=\"historyOrdersTable\"\n            data={data}\n            columns={columns}\n            disableSortRemove={true}\n            renderRows={renderRows}\n            initialState={defaultTableState}\n        />\n    );\n});\n\n/**\n * Generate className to table cell.\n *\n * @param cell Cell.\n * @returns Class name.\n */\nconst getCellClassName = (cell: Cell<ManageOrdersData>) => {\n    if (cell.column.id !== 'type') {\n        return undefined;\n    }\n\n    return `${cell.value === TradeOrderType.buy ? 'grow' : 'loss'}TextColor`;\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useState } from 'react';\nimport { Spinner } from '@nilfoundation/react-components';\nimport { useAppSelector } from 'src/redux';\nimport { useGetManageOrdersData } from 'src/hooks';\nimport { ManageOrdersData } from 'src/models';\nimport { DashboardCard, Details } from '../../common';\nimport { ProtectedContent } from '../../login';\nimport { ManageOrdersTab } from './ManageOrdersTab';\nimport { ManageOrdersPanelTabs } from './ManageOrdersPanelTabs';\nimport { ActiveOrdersTable } from './ActiveOrdersTable';\nimport { HistoryOrdersTable } from './HistoryOrdersTable';\nimport './ManageOrdersPanel.scss';\n\n/**\n * Manage orders panel.\n *\n * @returns React component.\n */\nexport const ManageOrdersPanel = (): ReactElement => {\n    const [tab, setTab] = useState<ManageOrdersTab>(ManageOrdersTab.active);\n    const selectedCircuitId = useAppSelector(s => s.circuitsState.selectedid);\n    const { isError, loadingData, activeOrdersData, historyOrdersData } = useGetManageOrdersData();\n\n    return (\n        <DashboardCard>\n            <Details title={<h4>Manage orders</h4>}>\n                <div className=\"manageOrdersPanel\">\n                    <ProtectedContent overlayTitle=\"Authorization is required to manage orders\">\n                        <ManageOrdersPanelTabs\n                            currentTab={tab}\n                            onSetTab={setTab}\n                        />\n                        {selectedCircuitId !== undefined ? (\n                            tabFactory(\n                                tab,\n                                isError,\n                                loadingData,\n                                tab === ManageOrdersTab.active\n                                    ? activeOrdersData\n                                    : historyOrdersData,\n                            )\n                        ) : (\n                            <h5>Please, select circuit to display orders.</h5>\n                        )}\n                    </ProtectedContent>\n                </div>\n            </Details>\n        </DashboardCard>\n    );\n};\n\n/**\n * Renders tab content conditionally.\n *\n * @param tab - Tab.\n * @param error - Error.\n * @param loading - Loading.\n * @param data - Data.\n * @returns React Element.\n */\nconst tabFactory = (\n    tab: ManageOrdersTab,\n    error: boolean,\n    loading: boolean,\n    data: ManageOrdersData[],\n) => {\n    if (error) {\n        return <h5>Error while loading data.</h5>;\n    }\n\n    if (data.length === 0) {\n        return loading ? <Spinner grow /> : <h5>No orders.</h5>;\n    }\n\n    switch (tab) {\n        case ManageOrdersTab.active:\n            return <ActiveOrdersTable data={data} />;\n        case ManageOrdersTab.history:\n            return <HistoryOrdersTable data={data} />;\n        default:\n            return <></>;\n    }\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { ListGroup, Media } from '@nilfoundation/react-components';\nimport { Link } from 'react-router-dom';\nimport { Path } from 'src/routing';\nimport { Proof } from 'src/models';\nimport { selectSelectedProofId, useAppSelector } from 'src/redux';\nimport styles from './ProofList.module.scss';\n\n/**\n * Props.\n */\ntype ProofListItemProps = {\n    proof: Proof;\n};\n\n/**\n * Proof list item.\n *\n * @param {ProofListItemProps} props Props.\n * @returns React component.\n */\nexport const ProofListItem = ({ proof: { _key } }: ProofListItemProps): ReactElement => {\n    const selectedProofId = useAppSelector(selectSelectedProofId);\n    const isSelected = _key === selectedProofId;\n\n    return (\n        <ListGroup.Item active={isSelected}>\n            <Link to={`${Path.portfolio}/${_key}`}>\n                <Media className={isSelected ? styles.selected : ''}>\n                    <Media.Body className={styles.itemBody}>{`id: ${_key}`}</Media.Body>\n                </Media>\n            </Link>\n        </ListGroup.Item>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { ListGroup, Spinner } from '@nilfoundation/react-components';\nimport { selectProofList, useAppSelector } from 'src/redux';\nimport { useSelectedProofId } from 'src/hooks';\nimport { DashboardCard } from 'src/components';\nimport { ProofListItem } from './ProofListItem';\nimport styles from './ProofList.module.scss';\n\n/**\n * Proof list.\n *\n * @returns React component.\n */\nexport const ProofList = (): ReactElement => {\n    const proofList = useAppSelector(selectProofList);\n    const loadingProofs = useAppSelector(s => s.proofState.isLoadingProofs);\n    const getProofsError = useAppSelector(s => s.proofState.error);\n    useSelectedProofId();\n\n    return (\n        <DashboardCard>\n            <h4>Proof list</h4>\n            <div className={styles.container}>\n                {ProofListViewFactory(proofList, loadingProofs, getProofsError)}\n            </div>\n        </DashboardCard>\n    );\n};\n\n/**\n * Conditionally renders proof data. First true case renders.\n *\n * @param proofList Proof list.\n * @param loadingProofs Proofs loading state.\n * @param getProofsError Proofs loading error.\n * @returns View, based on proof data state.\n */\nconst ProofListViewFactory = (\n    proofList: ReturnType<typeof selectProofList>,\n    loadingProofs: boolean,\n    getProofsError: boolean,\n) => {\n    switch (true) {\n        case loadingProofs && !proofList.length:\n            return <Spinner grow />;\n        case getProofsError:\n            return <h5>Error while getting proofs.</h5>;\n        case proofList.length === 0:\n            return <h5>No proofs.</h5>;\n        case !!proofList.length:\n            return (\n                <ListGroup className={styles.proofList}>\n                    {proofList.map(x => (\n                        <ProofListItem\n                            proof={x}\n                            key={x._key}\n                        />\n                    ))}\n                </ListGroup>\n            );\n    }\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { KeyboardEventHandler, ReactElement, useMemo } from 'react';\nimport { Button, Icon, Spinner, Variant } from '@nilfoundation/react-components';\nimport { Proof } from 'src/models';\nimport { getProofById } from 'src/api';\nimport { useDownloadJson } from 'src/hooks';\nimport styles from './ProofContentCard.module.scss';\n\n/**\n * Props.\n */\ntype ProofViewHeaderProps = {\n    proof?: Proof;\n};\n\n/**\n * Proof content card header.\n *\n * @param {ProofViewHeaderProps} props Props.\n * @returns React component.\n */\nexport const ProofContentCardToolbar = ({ proof }: ProofViewHeaderProps): ReactElement => {\n    const fetcher = useMemo(\n        () => (proof?._key !== undefined ? () => getProofById(proof._key) : undefined),\n        [proof?._key],\n    );\n    const { downloadJson, loading } = useDownloadJson({\n        fileName: `proof-${proof?._key}`,\n        fetcher,\n    });\n\n    const keyDownHandler: KeyboardEventHandler = e => {\n        if (e.key !== 'Enter' && e.key !== ' ') {\n            return;\n        }\n\n        downloadJson();\n    };\n\n    return (\n        <div className={styles.toolbar}>\n            <Button\n                variant={Variant.primary}\n                disabled={proof === undefined || loading}\n                onClick={downloadJson}\n                onKeyDown={keyDownHandler}\n                aria-label=\"Download proof as JSON file\"\n            >\n                <Icon iconName=\"fa-solid fa-download\" />\n                JSON\n                {loading && <Spinner />}\n            </Button>\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Spinner } from '@nilfoundation/react-components';\nimport { selectSelectedProofId, useAppSelector } from 'src/redux';\nimport { DashboardCard, ObjectAsPlainTextViewer } from 'src/components';\nimport { Proof } from 'src/models';\nimport { ProofContentCardToolbar } from './ProofContentCardToolbar';\nimport styles from './ProofContentCard.module.scss';\n\n/**\n * Proof content card.\n *\n * @returns React component.\n */\nexport const ProofContentCard = (): ReactElement => {\n    const selectedProofId = useAppSelector(selectSelectedProofId);\n    const isLoadingProofs = useAppSelector(s => s.proofState.isLoadingProofs);\n    const proofData = useAppSelector(s =>\n        s.proofState.proofs.find(x => x._key === selectedProofId),\n    );\n\n    return (\n        <DashboardCard>\n            <h4>Proof detailed info</h4>\n            <div className={styles.container}>{ProofViewFactory(isLoadingProofs, proofData)}</div>\n        </DashboardCard>\n    );\n};\n\n/**\n * Conditionally renders proof data. First true case renders.\n *\n * @param loadingProofs Loading proof data from dbms.\n * @param proof Proof data.\n * @returns View, based on proof data state.\n */\nconst ProofViewFactory = (loadingProofs: boolean, proof?: Proof) => {\n    switch (true) {\n        case loadingProofs && !proof:\n            return <Spinner grow />;\n        case proof !== undefined:\n            return (\n                <>\n                    <ObjectAsPlainTextViewer data={proof!} />\n                    <ProofContentCardToolbar proof={proof} />\n                </>\n            );\n        case proof === undefined:\n            return <h5>No proof data was found.</h5>;\n    }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CircuitDetailedInfo_container__YIX53\",\"content\":\"CircuitDetailedInfo_content__GjHOu\",\"jsonView\":\"CircuitDetailedInfo_jsonView__2TlZR\",\"description\":\"CircuitDetailedInfo_description__2DJ1s\",\"imageContainer\":\"CircuitDetailedInfo_imageContainer__1_OWD\",\"toolbar\":\"CircuitDetailedInfo_toolbar__36p_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"RegisterForm_title__2dkIs\",\"description\":\"RegisterForm_description__1yOmq\",\"social\":\"RegisterForm_social__3q7C8\",\"control\":\"RegisterForm_control__11GP7\",\"form\":\"RegisterForm_form__35kd2\",\"successMessage\":\"RegisterForm_successMessage__PK7f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"UserMenu_menu__3fDVN\",\"balanceContainer\":\"UserMenu_balanceContainer__3sbAV\",\"balanceTitle\":\"UserMenu_balanceTitle__2iyh-\",\"balance\":\"UserMenu_balance__TiCOC\",\"dropdown\":\"UserMenu_dropdown__1lDHS\",\"button\":\"UserMenu_button__1HAKP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"CircuitInfoPanel_panel__1wG2C\",\"container\":\"CircuitInfoPanel_container__2Tz7U\",\"title\":\"CircuitInfoPanel_title__3PHJ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoImage\":\"LoginForm_logoImage__1IRVH\",\"icon\":\"LoginForm_icon__TLw57\",\"control\":\"LoginForm_control__1eG7g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"UserBalance_balance__nG0Df\",\"text\":\"UserBalance_text__r0g0-\",\"hiddenText\":\"UserBalance_hiddenText__1cXDh\",\"currency\":\"UserBalance_currency__2H9b3\",\"label\":\"UserBalance_label__16UIV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__3FziC\",\"tableHead\":\"Table_tableHead__2OCzy\",\"footerHead\":\"Table_footerHead__1TW8b\",\"stickyHead\":\"Table_stickyHead__3xNZn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProofList_container__2bTFD\",\"proofList\":\"ProofList_proofList__3R50A\",\"itemBody\":\"ProofList_itemBody__13ca8\",\"selected\":\"ProofList_selected__3jQV1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailsTitle\":\"CreateTradeOrderForm_detailsTitle__75pkC\",\"control\":\"CreateTradeOrderForm_control__3Wls7\"};","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useCallback, useMemo } from 'react';\nimport { notificationActions, Variant } from '@nilfoundation/react-components';\nimport { useDispatch } from 'react-redux';\nimport { useSearchParams, useNavigate } from 'react-router-dom';\nimport { removeItemFromLocalStorage, setItemIntoLocalStorage } from 'src/packages/LocalStorage';\nimport { selectUserName, SetJwtRevalidateTimeout, UpdateUserName, useAppSelector } from 'src/redux';\nimport { Path } from 'src/routing';\nimport { calculateRenewJwtTimeGap, getUserFromJwt } from 'src/utils';\nimport { UrlQueryParam } from 'src/enums';\n\nconst readonlyUser = process.env.REACT_APP_READONLY_USER;\n\n/**\n * Provides access to auth state.\n *\n * @returns Auth state.\n */\nexport const useAuth = (): {\n    user: string | null;\n    isAuthentificated: boolean;\n    isReadonly: boolean;\n} => {\n    const user = useAppSelector(selectUserName);\n    const isAuthentificated = useMemo(() => {\n        return !!user;\n    }, [user]);\n    const isReadonly = useMemo(() => {\n        return user === readonlyUser;\n    }, [user]);\n\n    return {\n        user,\n        isAuthentificated,\n        isReadonly,\n    };\n};\n\n/**\n * Returns callback to process login with jwt token.\n *\n * @returns Login callback.\n */\nexport const useLogin = (): ((jwt: string) => void) => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const [searchParams] = useSearchParams();\n    const refUrlParam = searchParams.get(UrlQueryParam.ref);\n\n    const processLogin = useCallback(\n        (jwt: string) => {\n            setItemIntoLocalStorage('jwt', jwt);\n\n            const user = getUserFromJwt(jwt);\n            const timeout = calculateRenewJwtTimeGap(jwt);\n\n            user && dispatch(UpdateUserName(user));\n            dispatch(SetJwtRevalidateTimeout(timeout));\n\n            const navigateTo = refUrlParam || Path.root;\n            navigate(navigateTo, { replace: true });\n\n            if (user === readonlyUser) {\n                return;\n            }\n\n            notificationActions?.create({\n                title: 'Login success',\n                message: `Successfully login as ${user}`,\n                variant: Variant.success,\n            });\n        },\n        [dispatch, navigate, refUrlParam],\n    );\n\n    return processLogin;\n};\n\n/**\n * Returns callback to logout with existed user.\n *\n * @returns Logout callback.\n */\nexport const useLogout = (): (() => void) => {\n    const dispatch = useDispatch();\n\n    const processLogout = useCallback(() => {\n        dispatch(UpdateUserName(null));\n        removeItemFromLocalStorage('jwt');\n    }, [dispatch]);\n\n    return processLogout;\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { RefObject, useEffect, useState } from 'react';\nimport { createChart, ColorType, IChartApi, DeepPartial, ChartOptions } from 'lightweight-charts';\nimport colors from 'src/styles/export.module.scss';\n\n/**\n * Return type.\n */\ntype UseChartsReturnType = {\n    /**\n     * Chart instance.\n     */\n    chart?: IChartApi;\n};\n\n/**\n * Use chart params.\n */\ntype UseChartParams<T extends HTMLElement> = {\n    ref: RefObject<T>;\n    options?: DeepPartial<ChartOptions>; // Don't forget to memoize options object.\n};\n\n/**\n * Hook to create and manage charts.\n *\n * @param {UseChartParams} params Parameters.\n * @returns Chart.\n */\nexport const useChart = <T extends HTMLElement>({\n    ref,\n    options,\n}: UseChartParams<T>): UseChartsReturnType => {\n    const [chart, setChart] = useState<IChartApi>();\n\n    useEffect(() => {\n        const { current: htmlElement } = ref;\n        if (!htmlElement) {\n            return;\n        }\n\n        const chart = createChart(htmlElement, {\n            width: htmlElement.clientWidth,\n            height: htmlElement.clientHeight,\n            ...chartDefaultOptions,\n        });\n        chart.timeScale().fitContent();\n        setChart(chart);\n\n        const handleResize = () => {\n            chart.applyOptions({ width: htmlElement.clientWidth });\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, [ref]);\n\n    useEffect(() => {\n        chart && options && chart.applyOptions(options);\n    }, [options, chart]);\n\n    useEffect(() => {\n        return () => {\n            chart && chart.remove();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return { chart };\n};\n\n/**\n * Default charts theme.\n */\nconst chartDefaultTheme = {\n    background: colors.baseDarkerColor,\n    fontFamily: 'inherit',\n    layoutTextColor: colors.secondaryDarkerColor,\n    gridLineColor: colors.baseLightColor,\n};\n\n/**\n * Chart constant options.\n */\nconst chartDefaultOptions = {\n    layout: {\n        background: { type: ColorType.Solid, color: chartDefaultTheme.background },\n        fontFamily: chartDefaultTheme.fontFamily,\n        textColor: chartDefaultTheme.layoutTextColor,\n    },\n    grid: {\n        vertLines: { color: chartDefaultTheme.gridLineColor },\n        horzLines: { color: chartDefaultTheme.gridLineColor },\n    },\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useMemo } from 'react';\nimport {\n    CandlestickData,\n    HistogramData,\n    LineData,\n    UTCTimestamp,\n    WhitespaceData,\n} from 'lightweight-charts';\nimport { useSelector } from 'react-redux';\nimport { dequal as deepEqual } from 'dequal';\nimport sum from 'lodash/sum';\nimport { useAppSelector, selectCompletedAsks } from 'src/redux';\nimport { Ask, Bid } from 'src/models';\nimport { getUTCTimestamp } from 'src/utils';\nimport { DateUnit } from 'src/enums';\nimport colors from 'src/styles/export.module.scss';\n\n/**\n * Hook return type.\n */\ntype UseGetCircuitDashboardDataReturnType = {\n    chartData: {\n        candlestickChartData: CandlestickData[];\n        proofGenTimeData: LineData[];\n        volumesData?: Array<WhitespaceData | HistogramData>;\n    };\n    loadingData: boolean;\n};\n\n/**\n * Get data to draw circuit chart.\n *\n * @param [withVolumes] Should calculate volumes data.\n * @param [dataRange] Data range.\n * @returns Data to draw circuit chart.\n */\nexport const useGetCircuitDashboardData = (\n    withVolumes = false,\n    dataRange = DateUnit.day,\n): UseGetCircuitDashboardDataReturnType => {\n    const loadingData = useAppSelector(s => s.circuitsState.isLoading || s.asksState.isLoading);\n    const asks = useSelector(selectCompletedAsks, deepEqual);\n    const grouppedOrders = useMemo(() => {\n        return reduceOrdersByDate(asks, dataRange);\n    }, [asks, dataRange]);\n\n    const chartData = useMemo(\n        () => ({\n            candlestickChartData: getCandlestickData(grouppedOrders),\n            proofGenTimeData: getProofGenTimeData(grouppedOrders),\n            volumesData: withVolumes ? getVolumesData(grouppedOrders) : undefined,\n        }),\n        [grouppedOrders, withVolumes],\n    );\n\n    return { chartData, loadingData };\n};\n\n/**\n * Takes orders array and returns dict, where keys are dates, and values are arrays of orders.\n *\n * @param asks Asks.\n * @param dataRange Data range.\n * @returns Orders, grouped by date.\n */\nconst reduceOrdersByDate = <T extends Bid | Ask>(asks: T[], dataRange: DateUnit) => {\n    return asks.reduce((previousValue: Record<string, T[]>, currentValue: T) => {\n        const date = getUTCTimestamp(currentValue.updatedOn!, dataRange);\n\n        if (!previousValue[date]) previousValue[date] = [];\n\n        previousValue[date].push(currentValue);\n\n        return previousValue;\n    }, {});\n};\n\n/**\n * Creates candleStick data {@link CandlestickData} array from orders, groupped by date.\n *\n * @param ordersGrouppedByDate Orders array.\n * @returns Array of candleStick data.\n */\nconst getCandlestickData = <T extends Bid | Ask>(\n    ordersGrouppedByDate: Record<string, T[]>,\n): CandlestickData[] => {\n    const keys = Object.keys(ordersGrouppedByDate);\n\n    return keys.map((x, index) => {\n        const ordersCosts = ordersGrouppedByDate[x].map(x => x.cost);\n\n        const high = Math.max(...ordersCosts);\n        const low = Math.min(...ordersCosts);\n        const open =\n            index === 0 ? ordersCosts[0] : ordersGrouppedByDate[keys[index - 1]].at(-1)!.cost;\n        const close = ordersCosts[ordersCosts.length - 1];\n\n        return {\n            time: Number(x) as UTCTimestamp,\n            high,\n            low,\n            open,\n            close,\n        };\n    });\n};\n\n/**\n * Creates line data {@link LineData} array from orders, groupped by date.\n *\n * @param ordersGrouppedByDate Orders array.\n * @returns Array of line data.\n */\nconst getProofGenTimeData = <T extends Bid | Ask>(\n    ordersGrouppedByDate: Record<string, T[]>,\n): LineData[] => {\n    return Object.keys(ordersGrouppedByDate).map(x => {\n        const ordersEvalTime = ordersGrouppedByDate[x].map(x => x.eval_time);\n        const averageEvalTime = sum(ordersEvalTime) / ordersEvalTime.length;\n\n        return { time: Number(x) as UTCTimestamp, value: averageEvalTime };\n    });\n};\n\n/**\n * Generates volume data.\n *\n * @param ordersGrouppedByDate Orders array.\n * @returns Volume data.\n */\nconst getVolumesData = <T extends Bid | Ask>(\n    ordersGrouppedByDate: Record<string, T[]>,\n): Array<WhitespaceData | HistogramData> => {\n    const keys = Object.keys(ordersGrouppedByDate);\n\n    return keys.map((x, index) => {\n        const costs = ordersGrouppedByDate[x].map(x => x.cost);\n\n        const open = index === 0 ? costs[0] : ordersGrouppedByDate[keys[index - 1]].at(-1)!.cost;\n        const close = costs[costs.length - 1];\n\n        return {\n            time: Number(x) as UTCTimestamp,\n            value: ordersGrouppedByDate[x].length,\n            color: open < close ? colors.transparentSuccessColor : colors.transparentDangerColor,\n        };\n    });\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useEffect, useState } from 'react';\nimport {\n    IChartApi,\n    BarPrice,\n    BarPrices,\n    LineData,\n    CandlestickData,\n    MouseEventHandler,\n    DeepPartial,\n    CandlestickStyleOptions,\n    SeriesOptionsCommon,\n    LineStyleOptions,\n    Range,\n    SeriesMarker,\n    UTCTimestamp,\n    WhitespaceData,\n    HistogramData,\n    HistogramStyleOptions,\n} from 'lightweight-charts';\nimport { DateUnit } from 'src/enums';\nimport colors from 'src/styles/export.module.scss';\n\n/**\n * Return type.\n */\ntype UseRenderChartDataReturnType = {\n    /**\n     * Current price value (when user hovers chart).\n     */\n    price?: BarPrice | BarPrices;\n};\n\n/**\n * Hook parameters.\n */\ntype UseRenderChartDataProps<T extends 'Line' | 'Candlestick'> = {\n    seriesType: T;\n    seriesData: T extends 'Line' ? LineData[] : CandlestickData[];\n    chart?: IChartApi;\n    options?: DeepPartial<\n        (T extends 'Line' ? LineStyleOptions : CandlestickStyleOptions) & SeriesOptionsCommon\n    >;\n    visibleRange?: DateUnit;\n    markers?: SeriesMarker<UTCTimestamp>[];\n    volumes?: (WhitespaceData | HistogramData)[];\n};\n\n/**\n * Hook to manage rendering chart data.\n *\n * @param {UseRenderChartDataProps} parameters Parameters.\n * @returns Current price.\n */\nexport const useRenderChartData = <T extends 'Line' | 'Candlestick'>({\n    seriesType,\n    seriesData,\n    chart,\n    options,\n    visibleRange,\n    markers,\n    volumes,\n}: UseRenderChartDataProps<T>): UseRenderChartDataReturnType => {\n    const [price, setPrice] = useState<BarPrice | BarPrices>();\n\n    useEffect(() => {\n        if (!chart) {\n            return;\n        }\n\n        const addSeriesMethod =\n            seriesType === 'Line'\n                ? chart.addLineSeries.bind(chart, {\n                      ...seriesDefaultOptions,\n                      ...options,\n                  } as DeepPartial<LineStyleOptions & SeriesOptionsCommon>)\n                : chart.addCandlestickSeries.bind(chart, {\n                      ...seriesDefaultOptions,\n                      ...options,\n                  } as DeepPartial<CandlestickStyleOptions & SeriesOptionsCommon>);\n\n        const series = addSeriesMethod();\n        series.setData(seriesData);\n        markers && series.setMarkers(markers);\n\n        const volumeSeries = chart.addHistogramSeries(volumeSeriesDefaultOptions);\n        volumes && volumeSeries.setData(volumes);\n\n        const crosshairMoveHandler: MouseEventHandler = param => {\n            if (!param.time) {\n                setPrice(undefined);\n                return;\n            }\n\n            const price = param.seriesPrices.get(series);\n            price && setPrice(price);\n        };\n\n        chart.subscribeCrosshairMove(crosshairMoveHandler);\n\n        return () => {\n            chart.removeSeries(series);\n            chart.removeSeries(volumeSeries);\n            chart.unsubscribeCrosshairMove(crosshairMoveHandler);\n            setPrice(undefined);\n        };\n    }, [seriesData, chart, seriesType, options, markers, volumes]);\n\n    useEffect(() => {\n        if (!chart || !seriesData.length) {\n            return;\n        }\n\n        if (!visibleRange) {\n            chart.timeScale().fitContent();\n            return;\n        }\n\n        chart.timeScale().setVisibleLogicalRange(getDataRange(seriesData.length, visibleRange));\n    }, [chart, visibleRange, seriesData]);\n\n    return { price };\n};\n\n/**\n * Series default options.\n */\nconst seriesDefaultOptions: Partial<SeriesOptionsCommon> = {\n    priceFormat: {\n        type: 'price',\n        precision: 4,\n        minMove: 0.0001,\n    },\n};\n\n/**\n * Volume series default options.\n */\nconst volumeSeriesDefaultOptions: DeepPartial<HistogramStyleOptions & SeriesOptionsCommon> = {\n    color: colors.transparentBaseLightColor,\n    priceFormat: {\n        type: 'volume',\n    },\n    priceScaleId: '',\n    scaleMargins: {\n        top: 0.8,\n        bottom: 0,\n    },\n};\n\n/**\n * Creates chart data Range {@link Range} object, subtracting distance from provided right edge date.\n *\n * @param rightEdge Last date in range.\n * @param visibleRange Visible range.\n * @returns Range.\n */\nconst getDataRange = (rightEdge: number, visibleRange: DateUnit): Range<number> => {\n    let distance = 0;\n\n    switch (visibleRange) {\n        case DateUnit.minute:\n            distance = 60;\n            break;\n        case DateUnit.hour:\n            distance = 24;\n            break;\n        case DateUnit.day:\n        case DateUnit.quaterMinute:\n        case DateUnit.halfHour:\n            distance = 30;\n    }\n\n    return {\n        from: rightEdge - distance,\n        to: rightEdge,\n    };\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useMemo, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { SortByFn } from 'react-table';\nimport { dequal as deepEqual } from 'dequal';\nimport sum from 'lodash/sum';\nimport round from 'lodash/round';\nimport {\n    Ask,\n    Bid,\n    CostAndEvalTime,\n    LastOrderData,\n    OrderBookTableColumn,\n    OrderBookTableData,\n} from 'src/models';\nimport {\n    selectBidsList,\n    selectAsksList,\n    useAppSelector,\n    selectCurrentUserAsks,\n    selectCurrentUserBids,\n} from 'src/redux';\nimport { OrderBookPriceStep } from 'src/enums';\n\n/**\n * Hook props.\n */\nexport type UseGetOrderBookDataProps = {\n    priceStep: keyof typeof OrderBookPriceStep;\n    itemsLimit?: number;\n};\n\n/**\n * Hook return type.\n */\nexport type UseGetOrderBookDataReturnType = {\n    columns: OrderBookTableColumn[];\n    data: OrderBookTableData[];\n    loadingData: boolean;\n    isError: boolean;\n    lastOrderData?: LastOrderData;\n    maxVolume: number;\n};\n\n/**\n * Groupped orders map.\n */\ntype GrouppedOrdersMap = Map<string, Array<Bid | Ask>>;\n\n/**\n * Hook to get order book data structured for rendering table.\n *\n * @param {UseGetOrderBookDataProps} props - Orderbook props.\n * @returns Data to render order book table.\n */\nexport const useGetOrderBookData = ({\n    priceStep,\n    itemsLimit = 25,\n}: UseGetOrderBookDataProps): UseGetOrderBookDataReturnType => {\n    const loadingData = useAppSelector(s => s.bidsState.isLoading || s.asksState.isLoading);\n    const asks = useSelector(selectAsksList, deepEqual);\n    const bids = useSelector(selectBidsList, deepEqual);\n    const userAsks = useSelector(selectCurrentUserAsks, deepEqual);\n    const userBids = useSelector(selectCurrentUserBids, deepEqual);\n    const isError = useAppSelector(s => s.asksState.error || s.bidsState.error);\n\n    const lastOrderData: LastOrderData = useMemo(() => getLastOrderData(asks), [asks]);\n\n    const columns = useMemo(\n        (): OrderBookTableColumn[] => [\n            {\n                Header: 'Orders',\n                accessor: 'ordersAmount',\n                disableSortBy: true,\n            },\n            {\n                Header: 'Cost',\n                accessor: 'cost',\n                sortType: customSortFunction,\n                sortDescFirst: true,\n            },\n            {\n                Header: 'Generation time',\n                accessor: 'eval_time',\n                sortType: customSortFunction,\n                sortDescFirst: true,\n            },\n            {\n                accessor: 'type',\n            },\n            {\n                accessor: 'userOrdersAmount',\n            },\n        ],\n        [],\n    );\n\n    /**\n     * Takes orders array and returns dict, where keys are costs, and values are arrays of orders.\n     *\n     * @param previousValue Initial value.\n     * @param currentValue Current value.\n     * @returns Orders, grouped by date.\n     */\n    const reduceOrdersByCostAndEvalTime = useCallback(\n        (previousValue: GrouppedOrdersMap, currentValue: Ask | Bid) => {\n            const precision = OrderBookPriceStep[priceStep];\n            const mapKey = JSON.stringify({\n                cost: round(currentValue.cost, precision),\n                eval_time: currentValue.eval_time\n                    ? round(currentValue.eval_time, precision)\n                    : undefined,\n            });\n\n            const value = previousValue.get(mapKey);\n\n            if (!value) {\n                previousValue.set(mapKey, [currentValue]);\n            } else {\n                previousValue.set(mapKey, [...value, currentValue]);\n            }\n\n            return previousValue;\n        },\n        [priceStep],\n    );\n\n    const asksData = useMemo(() => {\n        return createOrderBookData(\n            asks\n                .filter(x => x.status === 'created')\n                .reduce(reduceOrdersByCostAndEvalTime, new Map()),\n            'ask',\n            userAsks,\n        ).slice(-itemsLimit);\n    }, [asks, userAsks, itemsLimit, reduceOrdersByCostAndEvalTime]);\n\n    const bidsData = useMemo(() => {\n        return createOrderBookData(\n            bids\n                .filter(x => x.status === 'created')\n                .reduce(reduceOrdersByCostAndEvalTime, new Map()),\n            'bid',\n            userBids,\n        ).slice(0, itemsLimit);\n    }, [bids, userBids, itemsLimit, reduceOrdersByCostAndEvalTime]);\n\n    const data = useMemo(\n        (): OrderBookTableData[] => asksData.concat(bidsData),\n        [asksData, bidsData],\n    );\n\n    const maxVolume = useMemo(\n        () =>\n            Math.max(\n                sum(asksData.map(x => x.ordersAmount)) ?? 0,\n                sum(bidsData.map(x => x.ordersAmount)) ?? 0,\n            ),\n        [asksData, bidsData],\n    );\n\n    return { columns, data, loadingData, isError, lastOrderData, maxVolume };\n};\n\n/**\n * Map groupped trade orders to order book data.\n *\n * @param grouppedOrders Trade orders.\n * @param orderType Bid or Ask.\n * @param userOrders - Orders, created by user.\n * @returns Order book data.\n */\nconst createOrderBookData = <T extends Bid | Ask>(\n    grouppedOrders: GrouppedOrdersMap,\n    orderType: 'bid' | 'ask',\n    userOrders: T[],\n): OrderBookTableData[] => {\n    const result: OrderBookTableData[] = [];\n\n    grouppedOrders.forEach((value, key) => {\n        const parsedKey: CostAndEvalTime = JSON.parse(key);\n\n        result.push({\n            cost: parsedKey?.cost,\n            eval_time: parsedKey?.eval_time,\n            ordersAmount: value.length,\n            type: orderType,\n            userOrdersAmount: value.filter(x => userOrders.some(y => y._key === x._key)).length,\n        });\n    });\n\n    return result;\n};\n\n/**\n * Counts current price value and price changing direction.\n *\n * @param currentAsks Current ask list.\n * @see {CurrentPrice}\n * @returns Current price.\n */\nconst getLastOrderData = (currentAsks: Ask[]): LastOrderData => {\n    const completedAsks = currentAsks.filter(x => x.status === 'completed');\n\n    const latestCost = completedAsks.at(-1)?.cost;\n    const prevCost = completedAsks.at(-2)?.cost;\n\n    const getType = () => (latestCost! > prevCost! ? 'grow' : 'loss');\n    const type = latestCost && prevCost ? getType() : undefined;\n\n    return {\n        cost: latestCost,\n        eval_time: completedAsks.at(-1)?.eval_time,\n        type,\n    };\n};\n\n/**\n * Creates react table sort by provided field fucntion.\n *\n * @param firstRow First row.\n * @param  secondRow Second row.\n * @param columnId Sorted column id.\n * @returns Sort function.\n */\nconst customSortFunction: SortByFn<OrderBookTableData> = (firstRow, secondRow, columnId) => {\n    const firstValue = firstRow.values[columnId];\n    const secondValue = secondRow.values[columnId];\n\n    if (firstValue === secondValue) {\n        return 0;\n    }\n\n    return firstValue - secondValue > 0 ? -1 : 1;\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { dequal as deepEqual } from 'dequal';\nimport { useAppSelector, selectCompletedAsks } from 'src/redux';\nimport { Ask, TradeHistoryData, TradeHistoryTableColumn, TradeOrderChange } from 'src/models';\nimport { formatDate } from 'src/utils';\n\n/**\n * UseGetTradeHistoryData hook return type.\n */\nexport type UseGetTradeHistoryDataReturnType = {\n    data: TradeHistoryData[];\n    columns: TradeHistoryTableColumn[];\n    loadingData: boolean;\n    isError: boolean;\n};\n\n/**\n * Get data to render trade history table.\n *\n * @param itemsLimit - Limit items to display.\n * @returns Data to render trade history table.\n */\nexport const useGetTradeHistoryData = (itemsLimit = 25): UseGetTradeHistoryDataReturnType => {\n    const loadingData = useAppSelector(s => s.circuitsState.isLoading || s.asksState.isLoading);\n    const asks = useSelector(selectCompletedAsks, deepEqual);\n    const isError = useAppSelector(s => s.asksState.error || s.bidsState.error);\n\n    const columns = useMemo(\n        (): TradeHistoryTableColumn[] => [\n            {\n                Header: 'Time',\n                accessor: 'timestamp',\n            },\n            {\n                Header: 'Cost',\n                accessor: 'cost',\n                disableSortBy: true,\n            },\n            {\n                Header: 'Generation time',\n                accessor: 'eval_time',\n                disableSortBy: true,\n            },\n            {\n                accessor: 'type',\n            },\n        ],\n        [],\n    );\n\n    const data = useMemo(\n        () => asks.map(mapToTradeHistoryData).slice(-itemsLimit),\n        [asks, itemsLimit],\n    );\n\n    return { data, columns, loadingData, isError };\n};\n\n/**\n * Maps asks list to trade history table data list.\n *\n * @param {Ask} ask - Current ask.\n * @param i Current index.\n * @param asks Asks array.\n * @returns Trade history table data list.\n */\nconst mapToTradeHistoryData = (\n    { matched_time, cost, eval_time }: Ask,\n    i: number,\n    asks: Ask[],\n): TradeHistoryData => ({\n    timestamp: formatDate(matched_time!, 'DD.MM HH:mm'),\n    cost,\n    eval_time,\n    type: i !== 0 ? getType(asks.at(i - 1)!.cost, cost) : undefined,\n});\n\n/**\n * Returns trade order change type.\n *\n * @param costA Prev cost.\n * @param costB Current cost.\n * @returns Trade order type.\n */\nconst getType = (costA: number, costB: number): TradeOrderChange => {\n    if (costA === costB) {\n        return undefined;\n    }\n\n    return costA > costB ? 'loss' : 'grow';\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { dequal as deepEqual } from 'dequal';\nimport {\n    useAppSelector,\n    selectCurrentUserCreatedBids,\n    selectCurrentUserCompletedBids,\n    selectCurrentUserActiveAsks,\n    selectCurrentUserCompletedAsks,\n} from 'src/redux';\nimport { Ask, Bid, ManageOrdersData, TradeOrderType } from 'src/models';\nimport { formatDate } from 'src/utils';\n\n/**\n * UseGetManageOrdersData hook return type.\n */\nexport type UseGetManageOrdersDataReturnType = {\n    loadingData: boolean;\n    isError: boolean;\n    activeOrdersData: ManageOrdersData[];\n    historyOrdersData: ManageOrdersData[];\n};\n\n/**\n * Get data to render manage orders panel.\n *\n * @returns Data to render manage orders panel.\n */\nexport const useGetManageOrdersData = (): UseGetManageOrdersDataReturnType => {\n    const loadingData = useAppSelector(s => s.bidsState.isLoading || s.asksState.isLoading);\n    const createdBids = useSelector(selectCurrentUserCreatedBids, deepEqual);\n    const completedBids = useSelector(selectCurrentUserCompletedBids, deepEqual);\n    const createdAsks = useSelector(selectCurrentUserActiveAsks, deepEqual);\n    const completedAsks = useSelector(selectCurrentUserCompletedAsks, deepEqual);\n    const isError = useAppSelector(s => s.asksState.error || s.bidsState.error);\n\n    const activeOrdersData = useMemo(() => {\n        const mappedAsks = createdAsks.map(x => mapToManageOrdersData(x, TradeOrderType.sell));\n        const mappedBids = createdBids.map(x => mapToManageOrdersData(x, TradeOrderType.buy));\n\n        return [...mappedAsks, ...mappedBids];\n    }, [createdAsks, createdBids]);\n\n    const historyOrdersData = useMemo(() => {\n        const mappedAsks = completedAsks.map(x => mapToManageOrdersData(x, TradeOrderType.sell));\n        const mappedBids = completedBids.map(x => mapToManageOrdersData(x, TradeOrderType.buy));\n\n        return [...mappedAsks, ...mappedBids];\n    }, [completedAsks, completedBids]);\n\n    return { loadingData, isError, activeOrdersData, historyOrdersData };\n};\n\n/**\n * Maps trade orders list to manage orders table data list.\n *\n * @param {Ask | Bid} order - Current order.\n * @param type Type.\n * @returns Manage orders table data list.\n */\nconst mapToManageOrdersData = <T extends Ask | Bid>(\n    { createdOn, matched_time, cost, eval_time, _key, status }: T,\n    type: TradeOrderType,\n): ManageOrdersData => ({\n    init_time: formatDate(createdOn, 'DD.MM HH:mm'),\n    timestamp: formatDate(matched_time!, 'DD.MM HH:mm'),\n    cost,\n    eval_time,\n    type,\n    orderId: _key,\n    status,\n});\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { selectCurrentCircuitId, UpdateSelectedCircuitId, useAppSelector } from 'src/redux';\nimport { RouterParam } from 'src/enums';\n\n/**\n * Hook to manage selected circuit id state.\n */\nexport const useSelectedCircuitId = (): void => {\n    const selectedCircuitId = useAppSelector(selectCurrentCircuitId);\n    const circuitId = useParams()[RouterParam.circuitId];\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (selectedCircuitId === circuitId) {\n            return;\n        }\n\n        if (circuitId !== undefined) {\n            dispatch(UpdateSelectedCircuitId(circuitId));\n            return;\n        }\n\n        selectedCircuitId !== undefined && navigate(`${selectedCircuitId}`);\n    }, [circuitId, dispatch, selectedCircuitId, navigate]);\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { selectSelectedProofId, UpdateSelectedProofId, useAppSelector } from 'src/redux';\nimport { RouterParam } from 'src/enums';\n\n/**\n * Hook to manage selected proof id state.\n */\nexport const useSelectedProofId = (): void => {\n    const dispatch = useDispatch();\n    const selectedProofId = useAppSelector(selectSelectedProofId);\n    const proofId = useParams()[RouterParam.proofId];\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        if (selectedProofId === proofId) {\n            return;\n        }\n\n        if (proofId !== undefined) {\n            dispatch(UpdateSelectedProofId(proofId));\n            return;\n        }\n\n        selectedProofId !== undefined && navigate(`${selectedProofId}`);\n    }, [proofId, dispatch, selectedProofId, navigate]);\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useCallback, useState } from 'react';\n\n/**\n * Hook params.\n */\ntype UseDownloadJsonParams<T extends Record<string, unknown>> = {\n    fileName: string;\n    source?: T;\n    fetcher?: () => Promise<T>;\n};\n\n/**\n * Hook return type.\n */\ntype UseDownloadJsonReturnType = {\n    downloadJson: () => void;\n    loading: boolean;\n};\n\n/**\n * Hook to download data as json.\n *\n * @param {UseDownloadJsonParams} params Hook params.\n * @returns Callback to download data as json file and loading data state.\n */\nexport const useDownloadJson = <T extends Record<string, unknown>>({\n    fileName,\n    source,\n    fetcher,\n}: UseDownloadJsonParams<T>): UseDownloadJsonReturnType => {\n    const [loading, setLoading] = useState(false);\n\n    const downloadJson = useCallback(async () => {\n        switch (true) {\n            case !!source: {\n                processDownload(fileName, source!);\n                return;\n            }\n            case !!fetcher: {\n                setLoading(true);\n                const remoteData = await fetcher!();\n                processDownload(fileName, remoteData);\n                setLoading(false);\n                return;\n            }\n        }\n    }, [source, fileName, setLoading, fetcher]);\n\n    return { downloadJson, loading };\n};\n\n/**\n * Creates invisible anchor element to process downloading.\n *\n * @param fileName Name of file to save.\n * @param data Data.\n */\nconst processDownload = <T extends Record<string, unknown>>(fileName: string, data: T) => {\n    const a = document.createElement('a');\n\n    a.download = `${fileName}.json`;\n    a.href = window.URL.createObjectURL(new Blob([JSON.stringify(data)], { type: 'text/json' }));\n\n    const clickEvt = new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true,\n    });\n\n    a.dispatchEvent(clickEvt);\n    a.remove();\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n *\n * Credits to https://usehooks.com/useLocalStorage/\n */\n\nimport { useCallback, useState } from 'react';\nimport { dequal as deepEqual } from 'dequal';\nimport { getItemFromLocalStorage, setItemIntoLocalStorage } from 'src/packages/LocalStorage';\n\n/**\n * Hook to use localStorage in a useState() hook way.\n *\n * @param key LocalStorage key.\n * @param initialValue Inital value. Used when localStorage is empty.\n * @returns Persisited state.\n */\nexport const useLocalStorage = <T extends unknown>(\n    key: string,\n    initialValue: T,\n): [T, (value: T) => void] => {\n    const [storedValue, setStoredValue] = useState<T>(\n        () => getItemFromLocalStorage(key) ?? initialValue,\n    );\n\n    const setValue = useCallback(\n        (value: T) => {\n            if (deepEqual(storedValue, value)) {\n                return;\n            }\n\n            setStoredValue(value);\n            setItemIntoLocalStorage(key, value);\n        },\n        [key, storedValue],\n    );\n\n    return [storedValue, setValue];\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useEffect, useState } from 'react';\n\n/**\n * Hook to use debounce inside react component.\n * Debounces set state, preventing unnecessary rerender.\n *\n * @param value Value.\n * @param delay Delay.\n * @returns Debounced value.\n */\nexport const useDebounce = <T extends unknown>(value: T, delay: number): T => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value, delay]);\n\n    return debouncedValue;\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useCallback } from 'react';\nimport { dequal as deepEqual } from 'dequal';\nimport { TableState } from 'react-table';\nimport { useLocalStorage } from '../useLocalStorage';\n\n/**\n * Partial table state.\n */\ntype PartalState<T extends Record<string, unknown>> = Partial<TableState<T>>;\n\n/**\n * Hook to keep persisited react-table state between data updates.\n *\n * @param name Table name.\n * @param [defaultState] Default table state.\n * @returns Table state handlers.\n * InitialState is taken from localStorage and can be rewrited with setInitialState.\n */\nexport const useInitialTableState = <T extends Record<string, unknown>>(\n    name: string,\n    defaultState: PartalState<T> = {},\n): [PartalState<T>, (newState: PartalState<T>) => void] => {\n    const [initialState, setInitialState] = useLocalStorage(name, defaultState);\n\n    const setNewState = useCallback(\n        (input: PartalState<T>) => {\n            const { sortBy, filters, hiddenColumns, columnOrder, groupBy } = input;\n            setInitialState({\n                columnOrder,\n                filters,\n                hiddenColumns,\n                sortBy,\n                groupBy,\n            });\n        },\n        [setInitialState],\n    );\n\n    const value = deepEqual(initialState, defaultState) ? defaultState : initialState;\n\n    return [value, setNewState];\n};\n","/**\n * @file Api.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { Bid, CreateBid } from 'src/models';\nimport { createBearerHttpClient } from '../common';\n\nconst databaseUrl = `_db/${process.env.REACT_APP_DBMS_DEFAULT_DATABASE}`;\nconst apiUrl = `${databaseUrl}/_api/`;\nconst httpFetcher = createBearerHttpClient(apiUrl);\n\nconst createFetcher = createBearerHttpClient('/market/bid');\n\n/**\n * Get bids.\n *\n * @param circuitId Circuit id.\n * @returns Bids.\n */\nexport const getBidsByCircuitId = (circuitId: string): Promise<Bid[]> =>\n    httpFetcher\n        .post('cursor', {\n            query: `\n                FOR x IN @@relation\n                    FILTER x.statement_key == '${circuitId}'\n                    RETURN x`,\n            bindVars: {\n                '@relation': 'bid',\n            },\n            batchSize: 10000,\n        })\n        .then((x: any) => x.result);\n\n/**\n * Create Bid.\n *\n * @param data - Bid dto.\n * @returns Bid.\n */\nexport const createBid = (data: CreateBid): Promise<Bid> =>\n    createFetcher.post('', data).then((x: any) => x);\n\n/**\n * Remove Bid.\n *\n * @param bidToRemoveId Bid to remove id.\n * @returns Ask.\n */\nexport const removeBid = (bidToRemoveId: Bid['_key']): Promise<void> =>\n    httpFetcher\n        .post('cursor', {\n            query: `\n            FOR x IN @@relation\n                FILTER x._key == ${bidToRemoveId}\n                REMOVE { _key: x._key } IN @@relation\n            `,\n            bindVars: {\n                '@relation': 'bid',\n            },\n        })\n        .then((x: any) => x.result);\n","/**\n * @file Api.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { Ask, CreateAsk } from '../../models';\nimport { createBearerHttpClient } from '../common';\n\nconst databaseUrl = `_db/${process.env.REACT_APP_DBMS_DEFAULT_DATABASE}`;\nconst apiUrl = `${databaseUrl}/_api/`;\nconst httpFetcher = createBearerHttpClient(apiUrl);\nconst createFetcher = createBearerHttpClient('/market/ask');\n\n/**\n * Get asks.\n *\n * @param circuitId Circuit id.\n * @returns Asks.\n */\nexport const getAsksByCircuitId = (circuitId: string): Promise<Ask[]> =>\n    httpFetcher\n        .post('cursor', {\n            query: `\n                FOR x IN @@relation\n                FILTER x.statement_key == '${circuitId}'\n                RETURN x`,\n            bindVars: {\n                '@relation': 'ask',\n            },\n            batchSize: 10000,\n        })\n        .then((x: any) => x.result);\n\n/**\n * Create Ask.\n *\n * @param data Ask dto.\n * @returns Ask.\n */\nexport const createAsk = (data: CreateAsk): Promise<Ask> => createFetcher.post('', data);\n\n/**\n * Remove Ask.\n *\n * @param askToRemoveId Ask to remove id.\n * @returns Ask.\n */\nexport const removeAsk = (askToRemoveId: Ask['_key']): Promise<void> =>\n    httpFetcher.post('cursor', {\n        query: `\n            FOR x IN @@relation\n                FILTER x._key == ${askToRemoveId}\n                REMOVE { _key: x._key } IN @@relation\n            `,\n        bindVars: {\n            '@relation': 'ask',\n        },\n    });\n","/**\n * @file Enum declaration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Currency type.\n */\nexport enum Currency {\n    Solana = 'Solana',\n    Mina = 'Mina',\n    Ethereum = 'Ethereum',\n}\n\n/**\n *\n * @param currency Currency.\n * @returns Path to currency image.\n */\nexport const getCurrencyImage = (currency: Currency): string | null => {\n    if (!Object.keys(Currency).includes(currency)) {\n        return null;\n    }\n\n    return `${process.env.PUBLIC_URL}currencies/${currency}-icon.svg`;\n};\n","/**\n * @file Enum declaration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Chart type.\n */\nexport enum ChartType {\n    proofCostChart = 'Proof Cost',\n    proofGetTimeChart = 'Proof Generation Time',\n}\n","/**\n * @file Enum declaration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Date range variant.\n */\nexport enum DateUnit {\n    minute = '1m',\n    quaterMinute = '15m',\n    halfHour = '30m',\n    hour = '1h',\n    day = 'D',\n}\n\n/**\n * Returns time scale date format based on provided date unit.\n *\n * @param unit Date unit.\n * @returns Date format.\n */\nexport const getDateFormatBasedOnDateUnit = (unit: DateUnit): string => {\n    switch (unit) {\n        case DateUnit.minute:\n        case DateUnit.quaterMinute:\n        case DateUnit.halfHour:\n        case DateUnit.hour:\n            return 'DD.MM HH:mm';\n        case DateUnit.day:\n            return 'DD.MM';\n        default:\n            return '';\n    }\n};\n","/**\n * @file Enum declaration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Url query param.\n */\nexport const enum UrlQueryParam {\n    /**\n     * Used for saving in url previous page pathname.\n     */\n    ref = 'ref',\n}\n","/**\n * @file Enum declaration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * React router param.\n */\nexport const enum RouterParam {\n    proofId = 'proofId',\n    circuitId = 'circuitId',\n}\n","/**\n * @file Enum declaration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Order book price step.\n */\nexport const OrderBookPriceStep = {\n    '0.001': 3,\n    '0.01': 2,\n    '0.1': 1,\n    '1': 0,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TradeHistory_container__1JvuS\",\"table\":\"TradeHistory_table__3qP19\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProofContentCard_container__11UKR\",\"toolbar\":\"ProofContentCard_toolbar__iUq4W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"AuthContainer_loginContainer__3AkV9\",\"copyright\":\"AuthContainer_copyright__2DGTy\",\"back\":\"AuthContainer_back__2ygtP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumbs\":\"Breadcrumbs_breadcrumbs__1_0bQ\",\"item\":\"Breadcrumbs_item__wXuDg\",\"active\":\"Breadcrumbs_active__2ubF0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__2uQq1\",\"nav\":\"Header_nav__hD99J\",\"navbar\":\"Header_navbar__25ekV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"socialLinks\":\"SocialLinks_socialLinks__j4XIK\",\"bottomIndent\":\"SocialLinks_bottomIndent__2OAp6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"MobileMenu_menu__3eb25\",\"button\":\"MobileMenu_button__2Cjo_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Details_title__7XfVG\",\"bottomIndent\":\"Details_bottomIndent__1rV3q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewer\":\"ObjectAsPlainTextViewer_viewer__1Sq3u\",\"item\":\"ObjectAsPlainTextViewer_item__1Ao-_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chartLegend\":\"ChartLegend_chartLegend__3J6ik\",\"chartName\":\"ChartLegend_chartName__12Pfj\"};","/**\n * @file Utility function.\n * @copyright Yury Korotovskikh <u.korotovskiy@nil.foundation>\n */\n\nimport jwt_decode from 'jwt-decode';\n\n/**\n * Parse jwt to get username.\n *\n * @param jwt - Jwt.\n * @throws Will throw an error if can't get user from token.\n * @returns Username or null.\n */\nexport const getUserFromJwt = (jwt: string): string => {\n    const decoded = decodeJwt(jwt);\n\n    if (!decoded.preferred_username) {\n        throw new Error('Invalid token!');\n    }\n\n    return decoded.preferred_username as string;\n};\n\n/**\n * Parse jwt to get expired at time.\n *\n * @param jwt - Jwt.\n * @throws Will throw an error if can't get expired at from token.\n * @returns Expired at.\n */\nexport const getExpiredAtFromJwt = (jwt: string): number => {\n    const decoded = decodeJwt(jwt);\n\n    if (!decoded.exp) {\n        throw new Error('Invalid token!');\n    }\n\n    return decoded.exp as number;\n};\n\n/**\n * Returns decoded jwt token.\n *\n * @param jwt - Jwt.\n * @returns .\n */\nconst decodeJwt = (jwt: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const decoded: any = jwt_decode(jwt);\n\n    if (!decoded) {\n        throw new Error('Invalid token!');\n    }\n\n    return decoded;\n};\n","/**\n * @file Utility function.\n * @copyright Yury Korotovskikh <u.korotovskiy@nil.foundation>\n */\n\nimport dayjs from 'dayjs';\nimport { getExpiredAtFromJwt } from './jwtHelpers';\n\nconst renewExpiraitionDifference = 0.25 * 60;\n\n/**\n * Returns revalidate jwt timeout in milliseconds.\n *\n * @param jwt Jwt.\n * @throws If token is invalid.\n * @returns Milliseconds.\n */\nexport const calculateRenewJwtTimeGap = (jwt: string): number => {\n    const expiredAt = getExpiredAtFromJwt(jwt);\n\n    return (expiredAt - dayjs().unix() - renewExpiraitionDifference) * 1000;\n};\n","/**\n * @file Utility function.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport dayjs from 'dayjs';\n\n/**\n * Format UTCTimestamp.\n *\n * @param timestamp - Timestamp.\n * @param format Format.\n * @returns Formatted timestamp string.\n */\nexport const formatUTCTimestamp = (timestamp: number, format: string): string =>\n    dayjs(timestamp * 1000).format(format);\n","/**\n * @file Utility function.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { DateUnit } from 'src/enums';\n\n/**\n * Round date string to provided time value. Always rounds down.\n *\n * @param dateString Date string.\n * @param floorTo Round date to.\n * @returns Date.\n */\nexport const floorDateTo = (dateString: string, floorTo: DateUnit): Date => {\n    const date = new Date(dateString);\n\n    switch (floorTo) {\n        case DateUnit.minute:\n            date.setSeconds(0, 0);\n            break;\n        case DateUnit.quaterMinute:\n            floorToQuaterMinute(date);\n            break;\n        case DateUnit.halfHour:\n            date.setMinutes(date.getMinutes() >= 30 ? 30 : 0, 0, 0);\n            break;\n        case DateUnit.hour:\n            date.setMinutes(0, 0, 0);\n            break;\n        case DateUnit.day:\n            date.setHours(0, 0, 0, 0);\n            break;\n    }\n\n    return date;\n};\n\nconst floorToQuaterMinute = (date: Date): void => {\n    const minutes = date.getMinutes();\n    let minutesToSet = 0;\n\n    if (minutes >= 15 && minutes < 30) {\n        minutesToSet = 15;\n    }\n\n    if (minutes >= 30 && minutes < 45) {\n        minutesToSet = 30;\n    }\n\n    if (minutes >= 45) {\n        minutesToSet = 45;\n    }\n\n    date.setMinutes(minutesToSet, 0, 0);\n};\n","/**\n * @file Utility function.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { UTCTimestamp } from 'lightweight-charts';\nimport { DateUnit } from 'src/enums';\nimport { floorDateTo } from './floorDateTo';\n\n/**\n * Get UTCTimestamp from date string.\n *\n * @param dateString - Date string.\n * @param floorTo - Date unit floor to.\n * @returns UTCTimestamp.\n */\nexport const getUTCTimestamp = (dateString: string, floorTo?: DateUnit): UTCTimestamp => {\n    const date = floorTo ? floorDateTo(dateString, floorTo) : new Date(dateString);\n\n    return Math.trunc(date.getTime() / 1000) as UTCTimestamp;\n};\n","/**\n * @file Utility function.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport dayjs from 'dayjs';\n\n/**\n * Formats date string.\n *\n * @param dateString - Date string.\n * @param format - Format.\n * @returns Formatted date string representation.\n */\nexport const formatDate = (dateString: string, format: string): string =>\n    dayjs(dateString).format(format);\n","/**\n * @file Utility function.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Drops all nullable values from array in a type safe manner.\n *\n * @param value Any value.\n * @returns True if value is not nullable.\n */\nexport const notEmpty = <T>(value: T): value is NonNullable<T> => {\n    return value !== null && value !== undefined;\n};\n","/**\n * @file Symbol.\n * @copyright Yury Korotovskikh <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Long dash HTML symbol.\n */\nexport const longDash = '—';\n","/**\n * @file Utility function.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { longDash } from './longDashSymbol';\n\n/**\n * Renders value or long dash symbol if value is empty.\n *\n * @param value Numeric value.\n * @param [fractionDigits] Number of digits after the value decimal point.\n * @returns Value or long dash symbol.\n */\nexport const renderDashOnEmptyValue = (value?: number | null, fractionDigits = 4): string =>\n    value ? value?.toFixed(fractionDigits) : longDash;\n","/**\n * @file Regexp.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Regexp to validate emails.\n */\nexport const emailRegExp = /^(.+)@(.+)\\.(.{2,})$/i;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__PzL7i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authCard\":\"AuthCard_authCard__aQdMN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProtectedContent_container__w-v9m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboardCard\":\"DashboardCard_dashboardCard__fXvxj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sortableColumnHeader\":\"ReactTable_sortableColumnHeader__1IJqY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullScreenView\":\"FullScreenView_fullScreenView__3q9rV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClicableIcon_button__qhkwu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Overlay_overlay__3RcD2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"priceChangeIndicator\":\"PriceChangeIndicator_priceChangeIndicator__1WYpS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"#776475\",\"dangerColor\":\"#f44336\",\"successColor\":\"#57965a\",\"baseColor\":\"#222\",\"infoColor\":\"#2677f0\",\"baseDarkerColor\":\"#151515\",\"baseLightColor\":\"#3c3c3c\",\"secondaryColor\":\"#f5f2f1\",\"secondaryDarkerColor\":\"#d3d3d3\",\"transparentSuccessColor\":\"rgba(87,150,90,.3)\",\"transparentDangerColor\":\"rgba(244,67,54,.3)\",\"transparentBaseLightColor\":\"rgba(60,60,60,.4)\"};","/**\n * @file Enum declaration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Paths.\n */\nexport enum Path {\n    root = '/',\n    any = '*',\n    login = '/login',\n    portfolio = '/portfolio',\n    register = '/register',\n    market = '/market',\n}\n","/**\n * @file React functional component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useCallback } from 'react';\nimport { Navigate, Outlet, useLocation } from 'react-router-dom';\nimport { Path } from 'src/routing';\nimport { useAuth } from 'src/hooks';\nimport { UrlQueryParam } from 'src/enums';\n\n/**\n * Props.\n */\ntype ProtectedRouteProps = {\n    readonlyAccess?: boolean;\n    redirectPath?: Path;\n};\n\n/**\n * Component to restrict non-authorized users access.\n *\n * @param {ProtectedRouteProps} props - Props.\n * @returns React component.\n */\nconst ProtectedRoute = ({\n    readonlyAccess = false,\n    redirectPath = Path.login,\n}: ProtectedRouteProps): ReactElement => {\n    const { isAuthentificated, isReadonly } = useAuth();\n    const { pathname } = useLocation();\n\n    const getNavigateTo = useCallback(\n        () => `${redirectPath}/?${UrlQueryParam.ref}=${pathname}`,\n        [pathname, redirectPath],\n    );\n\n    return (\n        <>\n            {isAuthentificated && (readonlyAccess ? true : !isReadonly) ? (\n                <Outlet />\n            ) : (\n                <Navigate\n                    replace\n                    to={getNavigateTo()}\n                />\n            )}\n        </>\n    );\n};\n\nexport default ProtectedRoute;\n","/**\n * @file App.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { AuthContainer } from 'src/components';\n\n/**\n * Auth layout.\n *\n * @returns React element.\n */\nconst AuthLayout = (): ReactElement => {\n    return (\n        <AuthContainer>\n            <Outlet />\n        </AuthContainer>\n    );\n};\n\nexport default AuthLayout;\n","/**\n * @file App.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Layout, Spinner } from '@nilfoundation/react-components';\nimport { Outlet } from 'react-router-dom';\nimport { Header, Footer, ReadonlyAccessProvider } from '../components';\n\n/**\n * Main app layout.\n *\n * @returns React element.\n */\nconst MainLayout = (): ReactElement => {\n    return (\n        <Layout\n            header={<Header />}\n            footer={<Footer />}\n            stickyHeader\n        >\n            <ReadonlyAccessProvider fallback={<Spinner grow />}>\n                <Outlet />\n            </ReadonlyAccessProvider>\n        </Layout>\n    );\n};\n\nexport default MainLayout;\n","/**\n * @file React routing.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { lazy } from 'react';\nimport { Navigate, RouteObject } from 'react-router-dom';\nimport { RouterParam } from 'src/enums';\nimport ProtectedRoute from 'src/components/login/ProtectedRoute/ProtectedRoute';\nimport { Path } from './Paths';\nimport AuthLayout from '../layouts/AuthLayout';\nimport MainLayout from '../layouts/MainLayout';\n\nconst MarketView = lazy(() => import('../views/MarketView'));\nconst LoginView = lazy(() => import('../views/LoginView'));\nconst PortfolioView = lazy(() => import('../views/PortfolioView'));\nconst Page404 = lazy(() => import('../views/404'));\nconst RegisterView = lazy(() => import('../views/RegisterView'));\n\n/**\n * App routes.\n */\nexport const routesConfig: RouteObject[] = [\n    {\n        path: Path.root,\n        element: (\n            <Navigate\n                to={Path.market}\n                replace\n            />\n        ),\n    },\n    {\n        element: <AuthLayout />,\n        children: [\n            {\n                path: Path.login,\n                element: <LoginView />,\n            },\n            {\n                path: Path.register,\n                element: <RegisterView />,\n            },\n        ],\n    },\n    {\n        element: <MainLayout />,\n        children: [\n            {\n                element: <ProtectedRoute readonlyAccess />,\n                children: [\n                    {\n                        path: Path.market,\n                        element: <MarketView />,\n                        children: [\n                            {\n                                path: `:${RouterParam.circuitId}`,\n                                element: <MarketView />,\n                            },\n                        ],\n                    },\n                ],\n            },\n            {\n                element: <ProtectedRoute />,\n                children: [\n                    {\n                        path: Path.portfolio,\n                        element: <PortfolioView />,\n                        children: [\n                            {\n                                path: `:${RouterParam.proofId}`,\n                                element: <PortfolioView />,\n                            },\n                        ],\n                    },\n                ],\n            },\n            {\n                path: Path.any, // This should always be the last\n                element: <Page404 />,\n            },\n        ],\n    },\n];\n","/**\n * @file React routing.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useRoutes } from 'react-router-dom';\nimport { routesConfig } from './routesConfig';\n\n/**\n * Returns React element you can use to render the route tree.\n *\n * @returns Routes.\n */\nexport const Router = (): ReturnType<typeof useRoutes> => {\n    const routes = useRoutes(routesConfig);\n\n    return routes;\n};\n","/**\n * @file Api.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createBearerHttpClient } from '../common';\nimport { LoginData, LoginDto } from '../../models';\n\nconst httpFetcher = createBearerHttpClient();\nconst databaseUrl = `_db/${process.env.REACT_APP_DBMS_DEFAULT_DATABASE}`;\n\n/**\n * Login.\n *\n * @param loginData - Login data.\n * @returns .\n */\nexport const login = (loginData: LoginData): Promise<LoginDto> =>\n    httpFetcher.post<LoginDto, LoginData>(`${databaseUrl}/_open/auth`, loginData);\n\n/**\n * Renew jtw tocken.\n *\n * @param username Username.\n * @returns .\n */\nexport const renewJwt = (username: string): Promise<LoginDto | Record<string, never>> =>\n    httpFetcher.post(`${databaseUrl}/_open/auth/renew`, { username });\n","/**\n * @file Api.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createBearerHttpClient } from '../common';\n\nconst db = process.env.REACT_APP_DBMS_DEFAULT_DATABASE;\nconst apiUrl = `_db/${db}/${db}/user/`;\nconst httpFetcher = createBearerHttpClient(apiUrl);\n\n/**\n * Get user balance.\n *\n * @param user - User to get balance.\n * @returns .\n */\nexport const getUserBalance = (user: string): Promise<number | undefined> =>\n    httpFetcher.get(`${user}/balance`);\n","/**\n * @file Api.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { Circuit, CircuitInfo, CircuitStats } from 'src/models';\nimport { createBearerHttpClient } from '../common';\n\nconst dbName = process.env.REACT_APP_DBMS_DEFAULT_DATABASE;\n\nconst apiUrl = `_db/${dbName}/${dbName}`;\nconst httpFetcher = createBearerHttpClient(apiUrl);\n\n/**\n * Get circuits.\n *\n * @returns Circuit list.\n */\nexport const getCircuits = (): Promise<Circuit> => httpFetcher.get('/statement');\n\n/**\n * Get circuits info.\n *\n * @returns .\n */\nexport const getCircuitsInfo = (): Promise<CircuitInfo> => httpFetcher.get(`/statement/?info`);\n\n/**\n * Get circuits stats.\n *\n * @returns .\n */\nexport const getCircuitsStats = (): Promise<CircuitStats> =>\n    httpFetcher.get(`/statement/?statistics`);\n","/**\n * @file Api.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { Proof } from '../../models';\nimport { createBearerHttpClient } from '../common';\n\nconst databaseUrl = `_db/${process.env.REACT_APP_DBMS_DEFAULT_DATABASE}`;\nconst apiUrl = `${databaseUrl}/_api/`;\nconst httpFetcher = createBearerHttpClient(apiUrl);\n\n/**\n * Get proofs.\n *\n * @param currentUser Current user.\n * @returns Proofs.\n */\nexport const getProofs = (currentUser: string): Promise<Proof> =>\n    httpFetcher\n        .post('cursor', {\n            query: `\n                FOR x IN @@relation\n                    RETURN UNSET(x, 'proof')\n            `,\n            bindVars: {\n                '@relation': 'proof',\n            },\n        })\n        .then((x: any) => x.result);\n\n/**\n * Get proof by its id.\n *\n * @param proofId Proof id.\n * @returns Proofs.\n */\nexport const getProofById = (proofId: string): Promise<Proof> =>\n    httpFetcher\n        .post('cursor', {\n            query: `\n                FOR x IN @@relation\n                    FILTER x.id == '${proofId}'\n                    RETURN x\n            `,\n            bindVars: {\n                '@relation': 'proof',\n            },\n        })\n        .then((x: any) => x.result);\n","/**\n * @file Enum declaration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Trade order type.\n */\nexport enum TradeOrderType {\n    buy = 'BUY',\n    sell = 'SELL',\n}\n","/**\n * @file Http client.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\n\n/**\n * Http client.\n *\n * @class HttpClient\n */\nexport class HttpClient {\n    protected readonly client: AxiosInstance;\n\n    /**\n     * Constructor.\n     *\n     * @param requestConfig - Config.\n     * @param configureClient - Configuration callback.\n     */\n    constructor(\n        requestConfig?: AxiosRequestConfig,\n        configureClient?: (client: AxiosInstance) => void,\n    ) {\n        this.client = axios.create(requestConfig);\n        configureClient && configureClient(this.client);\n    }\n\n    /**\n     * GET.\n     *\n     * @param url - Url.\n     * @param config - Config.\n     * @memberof HttpClient\n     */\n    public async get<TResponse>(url: string, config?: AxiosRequestConfig): Promise<TResponse> {\n        const response = await this.client.get<TResponse>(url, config);\n        return response.data;\n    }\n\n    /**\n     * POST.\n     *\n     * @param url - Url.\n     * @param data - Data.\n     * @param config - Config.\n     * @memberof HttpClient\n     */\n    public async post<TResponse, TRequest = undefined>(\n        url: string,\n        data?: TRequest,\n        config?: AxiosRequestConfig,\n    ): Promise<TResponse> {\n        const response = await this.client.post<TResponse>(url, data, config);\n        return response.data;\n    }\n\n    /**\n     * PUT.\n     *\n     * @param url - Url.\n     * @param payload - Payload.\n     * @param config - Config.\n     * @memberof HttpClient\n     */\n    public async put<TResponse, TRequest = undefined>(\n        url: string,\n        payload?: TRequest,\n        config?: AxiosRequestConfig,\n    ): Promise<TResponse> {\n        const response = await this.client.put(url, payload, config);\n        return response.data;\n    }\n\n    /**\n     * DELETE.\n     *\n     * @param url - Url.\n     * @param config - Config.\n     * @memberof HttpClient\n     */\n    public async delete<TResponse>(url: string, config?: AxiosRequestConfig): Promise<TResponse> {\n        const response = await this.client.delete(url, config);\n        return response.data;\n    }\n}\n","/**\n * @file Bearer http client.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { AxiosRequestConfig } from 'axios';\nimport { HttpClient } from './HttpClient';\nimport { getItemFromLocalStorage } from '../../packages/LocalStorage';\n\nconst { REACT_APP_BASE_API_URL } = process.env;\n\n/**\n * Creates HTTP client with authorization.\n *\n * @param baseUrl - Base api url.\n * @param withCredentials - Include credentials.\n * @param injectToken - Should inject token.\n * @returns Bearer http client.\n */\nexport const createBearerHttpClient = (\n    baseUrl?: string,\n    withCredentials?: boolean,\n    injectToken = true,\n): HttpClient =>\n    new HttpClient(\n        {\n            baseURL: baseUrl ? `${REACT_APP_BASE_API_URL}/${baseUrl}` : `${REACT_APP_BASE_API_URL}`,\n            withCredentials,\n        },\n        injectToken ? client => client.interceptors.request.use(injectJwtToken) : undefined,\n    );\n\nconst getJwtToken = (): string | undefined => {\n    const tokenStorageKey = 'jwt';\n    return getItemFromLocalStorage<string>(tokenStorageKey);\n};\n\nconst injectJwtToken = (config: AxiosRequestConfig): AxiosRequestConfig => {\n    const jwtToken = getJwtToken();\n    if (jwtToken && config.headers) {\n        config.headers.Authorization = `Bearer ${jwtToken}`;\n    }\n    return config;\n};\n","/**\n * @file Constant data.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nexport const socialLinks = [\n    {\n        icon: 'twitter',\n        url: 'https://twitter.com/nil_foundation',\n    },\n    {\n        icon: 'linkedin',\n        url: 'https://www.linkedin.com/company/nil-foundation',\n    },\n    {\n        icon: 'github',\n        url: 'http://github.com/nilfoundation',\n    },\n    {\n        icon: 'telegram',\n        url: 'https://t.me/nilfoundation',\n    },\n    {\n        icon: 'discord',\n        url: 'https://discord.gg/KmTAEjbmM3',\n    },\n];\n","/**\n * @file Constant data.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { Path } from 'src/routing';\n\n/**\n * App navigation links.\n */\nexport const navigationLinks = [\n    {\n        title: 'Market',\n        path: Path.market,\n    },\n    {\n        title: 'Portfolio',\n        path: Path.portfolio,\n    },\n];\n","/**\n * @file Constant data.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport colors from 'src/styles/export.module.scss';\n\n/**\n * Json viewer custom theme.\n */\nexport const jsonViewerTheme = {\n    base00: 'transparent', // background\n    base01: colors.secondaryDarkerColor,\n    base02: colors.baseLightColor, // left vertical bar color\n    base03: colors.secondaryDarkerColor,\n    base04: colors.primaryColor, // helpers text color\n    base05: colors.secondaryDarkerColor,\n    base06: colors.secondaryDarkerColor,\n    base07: colors.secondaryDarkerColor,\n    base08: colors.secondaryDarkerColor,\n    base09: colors.secondaryDarkerColor,\n    base0A: colors.secondaryColor,\n    base0B: colors.secondaryColor,\n    base0C: colors.secondaryColor,\n    base0D: colors.primaryColor,\n    base0E: colors.primaryColor,\n    base0F: colors.secondaryDarkerColor, // copy icons color\n};\n","/**\n * @file Constant data.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Main site url.\n */\nexport const mainSiteAddress = 'https://nil.foundation';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderBook\":\"OrderBook_orderBook__2unJV\",\"checkboxContainer\":\"OrderBook_checkboxContainer__2-Vmt\",\"checkbox\":\"OrderBook_checkbox__2ene7\",\"label\":\"OrderBook_label__2B6cv\",\"header\":\"OrderBook_header__xa3Di\",\"orderBookTable\":\"OrderBook_orderBookTable__2siIb\",\"rowsContainer\":\"OrderBook_rowsContainer__3Lv0E\",\"ask\":\"OrderBook_ask__3fnXa\",\"bid\":\"OrderBook_bid__2G52c\",\"lastOrderDataContainer\":\"OrderBook_lastOrderDataContainer__3tzRt\",\"grow\":\"OrderBook_grow__i1wx2\",\"loss\":\"OrderBook_loss__a8PaE\",\"changePriceStepButton\":\"OrderBook_changePriceStepButton__3F1jr\"};","/**\n * @file Polyfills entrypoint.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport 'react-app-polyfill/ie11';\n/**\n * Injects core-js polyfills into bundle to provide old browsers support.\n *\n * @see {@link https://stackoverflow.com/questions/73194573/why-does-babel-in-create-react-app-not-polyfill-array-prototype-at-properly}.\n */\n// eslint-disable-next-line\nconst r = require('core-js/stable');\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Container, Row, Col } from '@nilfoundation/react-components';\nimport { mainSiteAddress } from 'src/constants';\n\n/**\n * App Error view.\n *\n * @returns React component.\n */\nconst ErrorView = (): ReactElement => (\n    <Container\n        as=\"main\"\n        fluid\n    >\n        <Row>\n            <Col\n                xs={12}\n                className=\"text-center\"\n            >\n                <h4>Sorry, unknown error occured.</h4>\n                <p className=\"text-muted\">\n                    Please, try to reload page or leave message to support.\n                </p>\n                <p>\n                    <a href={mainSiteAddress}>{mainSiteAddress}</a>\n                </p>\n            </Col>\n        </Row>\n    </Container>\n);\n\nexport default ErrorView;\n","/**\n * @file App.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, Suspense } from 'react';\nimport { NotificationProvider, Spinner } from '@nilfoundation/react-components';\nimport { ErrorBoundary, withProfiler } from '@sentry/react';\nimport { Helmet } from 'react-helmet-async';\nimport { GALocationTracker, NetConnectionHandler } from './components';\nimport { Router } from './routing';\nimport ErrorView from './views/ErrorView';\n\nconst baseDocumentTitle = process.env.REACT_APP_SITE_DEFAULT_TITLE;\n\n/**\n * @returns App.\n */\nfunction App(): ReactElement {\n    return (\n        <ErrorBoundary fallback={<ErrorView />}>\n            <NotificationProvider>\n                <Helmet\n                    titleTemplate={`${baseDocumentTitle} | %s`}\n                    defaultTitle={baseDocumentTitle}\n                />\n                <NetConnectionHandler>\n                    <Suspense fallback={<Spinner grow />}>\n                        <Router />\n                    </Suspense>\n                </NetConnectionHandler>\n            </NotificationProvider>\n            <GALocationTracker />\n        </ErrorBoundary>\n    );\n}\n\nexport default withProfiler(App);\n","/**\n * @file Env variables checker.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nconst requiredEnv = [\n    process.env.REACT_APP_BASE_API_URL,\n    process.env.REACT_APP_DBMS_DEFAULT_DATABASE,\n    process.env.REACT_APP_READONLY_USER,\n    process.env.REACT_APP_FORMSPREE_FORM_ID,\n    process.env.REACT_APP_SITE_DEFAULT_TITLE,\n];\n\n/**\n * Checks env variables definition.\n *\n * @throws An error if any required env is not defined.\n * @returns .\n */\nexport const checkEnvVariablesAreDefined = (): void =>\n    requiredEnv.forEach(x => {\n        if (!x) {\n            throw new Error(\n                'All required environment variables should be defined before running this app',\n            );\n        }\n    });\n","/**\n * @file Google analytics setup.\n * @copyright Yury Korotovskikh 2023 <u.korotovskiy@nil.foundation>\n */\n\nimport ReactGa from 'react-ga4';\n\n/**\n * Ga initialize options.\n */\nconst gaInitOptions = {\n    testMode: process.env.NODE_ENV !== 'production',\n};\n\n/**\n * Configures ga for the app. Should be called before any other tracking functions will record any data.\n */\nexport default function configureGA(): void {\n    const measurementId = process.env.REACT_APP_GA_TRACKING_ID;\n\n    if (!measurementId) {\n        return;\n    }\n\n    ReactGa.initialize(measurementId, gaInitOptions);\n}\n","/**\n * @file Web vitals.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReportHandler } from 'web-vitals';\n\n// eslint-disable-next-line jsdoc/require-jsdoc\nexport const reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n","/**\n * @file Sentry configuration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport * as Sentry from '@sentry/react';\nimport { BrowserTracing } from '@sentry/tracing';\n\n/**\n * Configures sentry for app.\n *\n * @see {@link https://docs.sentry.io/platforms/javascript/guides/react/}\n */\nexport const configureSentry = (): void => {\n    if (process.env.NODE_ENV !== 'production') {\n        return;\n    }\n\n    const dsn = process.env.REACT_APP_SENTRY_DSN;\n\n    if (!dsn) {\n        return;\n    }\n\n    Sentry.init({\n        dsn,\n        integrations: [new BrowserTracing()],\n        tracesSampleRate: 0.2,\n    });\n};\n","/**\n * @file Root index.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n// eslint-disable-next-line import/order\nimport './polyfills';\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\n// TODO - replace HashRouter with BrowserRouter after migrating from gh pages\nimport { HashRouter } from 'react-router-dom';\nimport { HelmetProvider } from 'react-helmet-async';\nimport App from './App';\nimport { store } from './redux';\nimport { configureSentry } from './sentry';\nimport { reportWebVitals } from './reportWebVitals';\nimport { checkEnvVariablesAreDefined } from './checkEnv';\nimport configureGA from './ga';\nimport './index.scss';\n\ncheckEnvVariablesAreDefined();\nconfigureSentry();\nconfigureGA();\n\nrender(\n    <React.StrictMode>\n        <HelmetProvider>\n            <Provider store={store}>\n                <HashRouter>\n                    <App />\n                </HashRouter>\n            </Provider>\n        </HelmetProvider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\nreportWebVitals();\n","/**\n * @file Local storage API.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Get localStorage item.\n *\n * @param ItemKey - Key.\n * @returns Item value.\n */\nexport const getItemFromLocalStorage = <T>(ItemKey: string): T | undefined => {\n    try {\n        const serialisedValue = localStorage.getItem(ItemKey);\n        if (serialisedValue === null) {\n            return undefined;\n        }\n        return JSON.parse(serialisedValue);\n    } catch {\n        return undefined;\n    }\n};\n\n/**\n * Set localStorage item.\n *\n * @param ItemKey - Key.\n * @param ItemValue - Value.\n */\nexport const setItemIntoLocalStorage = <T>(ItemKey: string, ItemValue: T): void => {\n    try {\n        const serialisedValue = JSON.stringify(ItemValue);\n        localStorage.setItem(ItemKey, serialisedValue);\n    } catch {\n        // Do nothing\n    }\n};\n\n/**\n * Remove item from localStorage.\n *\n * @param ItemKey - Key.\n */\nexport const removeItemFromLocalStorage = (ItemKey: string): void => {\n    try {\n        localStorage.removeItem(ItemKey);\n    } catch {\n        // Do nothing\n    }\n};\n"],"sourceRoot":""}