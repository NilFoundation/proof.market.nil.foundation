{"version":3,"sources":["packages/LocalStorage/LocalStorage.ts","redux/login/actions/UserActions.ts","redux/login/reducers/UserReducer.ts","redux/login/sagas/AuthSaga.ts","redux/login/sagas/ProtectedCall.ts","redux/login/selectors/UserSelectors.ts","redux/market/actions/CircuitsActions.ts","redux/market/actions/BidActions.ts","redux/market/actions/AskActions.ts","redux/market/reducers/CircuitsReducer.ts","redux/market/reducers/AsksReducer.ts","redux/market/reducers/BidsReducer.ts","redux/market/selectors/CircuitsSelectors.ts","redux/market/selectors/BidsSelectors.ts","redux/market/selectors/AsksSelectors.ts","redux/common/sagas/RevalidateSaga.tsx","redux/market/sagas/CircuitsSaga.ts","redux/market/sagas/BidsSaga.ts","redux/market/sagas/AsksSaga.ts","redux/portfolio/actions/ProofActions.ts","redux/portfolio/reducers/ProofReducer.ts","redux/portfolio/selectors/ProofSelectors.ts","redux/portfolio/sagas/ProofSaga.ts","redux/rootReducer.ts","redux/RootSaga.ts","redux/store.ts","redux/reduxHooks/useAppSelector.ts","components/market/CircuitDetailedInfo/CircuitDetailedInfo.module.scss","components/market/OrderBook/OrderBook.module.scss","models/market/TradeOrder/TradeOrderType.ts","components/common/SocialLinks/SocialLinks.tsx","components/common/Copyright/Copyright.tsx","components/common/Footer/Footer.tsx","hooks/login/loginHooks.ts","hooks/market/charts/useChart.ts","hooks/market/charts/useGetCircuitDashboardData.ts","hooks/market/charts/useRenderChartData.ts","hooks/market/orderBook/useGetOrderBookData.ts","hooks/market/tradeHistory/useGetTradeHistoryData.ts","hooks/market/manageOrders/useGetManageOrdersData.ts","components/market/CircuitDetailedInfo/DetailedInfoTab.ts","hooks/common/useLocalStorage.tsx","components/common/MobileMenu/MobileMenu.tsx","components/login/AuthCard/AuthCard.tsx","components/login/LoginForm/LoginForm.tsx","components/login/AuthContainer/AuthContainer.tsx","components/login/ProtectedRoute/ProtectedRoute.tsx","components/login/RegisterForm/RegisterForm.tsx","components/login/ReadonlyAccessProvider/ReadonlyAccessProvider.tsx","components/login/UserMenu/UserMenu.tsx","components/login/ProtectedContent/ProtectedContent.tsx","components/common/BreadCrumbs/Breadcrumbs.tsx","components/common/Header/Header.tsx","components/common/Details/Details.tsx","components/common/DashboardCard/DashboardCard.tsx","components/common/Table/Table.tsx","components/common/Table/TBody.tsx","components/common/Table/TCell.tsx","components/common/Table/THead.tsx","components/common/Table/THeader.tsx","components/common/Table/TRow.tsx","components/common/ReactTable/ReactTableHeader.tsx","components/common/ReactTable/ReactTable.tsx","hooks/common/table/useInitialTableState.ts","hooks/common/useDebounce.tsx","components/common/FileUploader/FileUploader.tsx","components/common/FullScreenView/FullScreenView.tsx","components/common/ClicableIcon/ClicableIcon.tsx","views/OfflineView.tsx","components/common/NetConnectionHandler/NetConnectionHandler.tsx","components/common/Overlay/Overlay.tsx","components/market/PriceChangeIndicator/PriceChangeIndicator.tsx","components/market/CircuitsList/CircuitsListItemInfo.tsx","components/market/CircuitsList/CircuitsListItem.tsx","components/market/CircuitsList/CircuitsListTable.tsx","components/market/CircuitsList/CircuitsList.tsx","components/market/CircuitDetailedInfo/CircuitInfoCard.tsx","components/market/ManageOrdersPanel/ManageOrdersTab.ts","components/market/CircuitDetailedInfo/CircuitJsonView.tsx","components/market/CircuitDetailedInfo/CircuitStatsCard.tsx","components/market/CircuitDetailedInfo/CircuitDetailedInfo.tsx","components/market/CircuitDashboard/ChartTypeSelect.tsx","components/market/CircuitDashboard/ChartSettingsContext.ts","components/market/CircuitDashboard/DataRangeSelect.tsx","components/market/ChartLegend/ChartLegend.tsx","components/market/ChartTemplate/ChartTemplate.tsx","components/market/CircuitCharts/ProofCostChart.tsx","components/market/CircuitCharts/ProofGenTimeChart.tsx","components/market/CircuitDashboard/ChartSettingsProvider.tsx","components/market/CircuitDashboard/DashboardToolbar.tsx","components/market/CircuitInfoPanel/CircuitInfoPanel.tsx","components/market/CircuitDashboard/CircuitDashboard.tsx","components/market/OrderManagementContextProvider/OrderManagementContext.ts","components/market/OrderManagementContextProvider/OrderManagementContextProvider.tsx","components/market/OrderBook/OrderBookTableCell.tsx","components/market/OrderBook/OrderBookTableRow.tsx","components/market/OrderBook/OrderBookTable.tsx","components/market/OrderBook/OrderBook.tsx","components/market/CreateTradeOrderForm/BaseFormGroup.tsx","components/market/CreateTradeOrderForm/CreateTradeOrderForm.tsx","components/market/CreateBidForm/PublicInput.tsx","components/market/CreateBidForm/CreateBidForm.tsx","components/market/CreateAskForm/CreateAskForm.tsx","components/market/CreateOrdersPanel/CreateOrdersTabs.tsx","components/market/CreateOrdersPanel/CreateOrdersPanel.tsx","components/market/TradeHistory/TradeHistoryTable.tsx","components/market/TradeHistory/TradeHistory.tsx","components/market/ManageOrdersPanel/ManageOrdersPanelTabs.tsx","components/market/ManageOrdersPanel/ToolbarPanel.tsx","components/market/ManageOrdersPanel/ActiveOrdersTable.tsx","components/market/ManageOrdersPanel/HistoryOrdersTable.tsx","components/market/ManageOrdersPanel/ManageOrdersPanel.tsx","components/portfolio/SelectedProofContextProvider/SelectedProofContext.ts","components/portfolio/SelectedProofContextProvider/SelectedProofContextProvider.tsx","hooks/portfolio/useProofIdState.ts","components/portfolio/ProofList/ProofList.tsx","components/portfolio/ProofView/ProofViewHeader.tsx","hooks/portfolio/useDownloadJsonFile.ts","components/portfolio/ProofView/ProofViewJson.tsx","components/portfolio/ProofView/ProofView.tsx","components/login/RegisterForm/RegisterForm.module.scss","components/market/CircuitInfoPanel/CircuitInfoPanel.module.scss","components/login/LoginForm/LoginForm.module.scss","components/common/Table/Table.module.scss","components/market/CreateTradeOrderForm/CreateTradeOrderForm.module.scss","api/market/BidsApi.ts","api/market/AsksApi.ts","components/market/TradeHistory/TradeHistory.module.scss","components/login/UserMenu/UserMenu.module.scss","components/common/BreadCrumbs/Breadcrumbs.module.scss","components/common/Header/Header.module.scss","components/common/SocialLinks/SocialLinks.module.scss","components/common/MobileMenu/MobileMenu.module.scss","components/login/AuthContainer/AuthContainer.module.scss","components/common/Details/Details.module.scss","components/market/ChartLegend/ChartLegend.module.scss","utils/login/getUserFromJwt.ts","utils/dates/formatUTCTimestamp.ts","utils/dates/floorDateTo.ts","utils/dates/getUTCTimestamp.ts","utils/dates/formatDate.ts","utils/common/notEmpty.ts","utils/common/renderDashOnEmptyValue.ts","utils/regexp/emailRegExp.ts","components/common/Footer/Footer.module.scss","components/login/AuthCard/AuthCard.module.scss","components/login/ProtectedContent/ProtectedContent.module.scss","components/common/DashboardCard/DashboardCard.module.scss","components/common/ReactTable/ReactTable.module.scss","components/common/FullScreenView/FullScreenView.module.scss","components/common/ClicableIcon/ClicableIcon.module.scss","components/common/Overlay/Overlay.module.scss","components/market/PriceChangeIndicator/PriceChangeIndicator.module.scss","styles/export.module.scss","enums/market/Currency.ts","enums/market/ChartType.ts","enums/market/DateUnit.ts","routing/Paths.ts","routing/Routes.ts","constants/common/socialLinks.ts","constants/common/navigationLinks.ts","constants/common/jsonViewerTheme.ts","constants/common/mainSiteAddress.ts","api/login/LoginApi.ts","api/market/CircuitsApi.ts","api/portfolio/ProofApi.ts","api/common/HttpClient.ts","api/common/BearerHttpClient.ts","polyfills.ts","views/ErrorView.tsx","App.tsx","reportWebVitals.ts","checkEnv.ts","sentry.ts","index.tsx"],"names":["getItemFromLocalStorage","ItemKey","serialisedValue","localStorage","getItem","JSON","parse","setItemIntoLocalStorage","ItemValue","stringify","setItem","removeItemFromLocalStorage","removeItem","UpdateUser","createAction","UserReducer","createReducer","user","builder","addCase","state","payload","AuthSaga","TryGetUserFromLocalStorageTokenSaga","fork","jwt","getUserFromJwt","put","ProtectedCall","fn","args","call","result","response","data","code","selectCurrentUser","s","userState","UpdateCircuitsList","UpdateSelectedCircuitId","UpdateIsLoadingCircuits","UpdateCircuitsError","UpdateCircuitsInfoList","UpdateIsLoadingCircuitsInfo","UpdateCircuitsStats","UpdateIsLoadingCircuitsStats","UpdateBidsList","AddBid","UpdateIsLoadingBids","UpdateBidsError","RemoveBid","UpdateAsksList","AddAsk","UpdateIsLoadingAsks","UpdateAsksError","RemoveAsk","initialState","circuits","selectedid","undefined","isLoading","error","circuitsInfo","isLoadingCircuitsInfo","circuitsStats","isLoadingCircuitsStats","CircuitsReducer","AsksReducer","asks","push","filter","x","id","BidsReducer","bids","selectCurrentCircuitId","circuitsState","selectCircuits","createSelector","selectCurrentCircuit","find","selectBidsList","bidsState","selectCurrentUserBids","sender","selectCurrentUserCreatedBids","status","selectCurrentUserCompletedBids","selectAsksList","asksState","selectCompletedAsks","selectCurrentUserAsks","selectCurrentUserActiveAsks","selectCurrentUserCompletedAsks","RevalidateSaga","Revalidate","fnToRevalidate","revalidateInterval","take","delay","task","cancel","CircuitsSaga","GetCircuitsInfoSaga","GetCircuitsStatsSaga","GetCircuitsAdditionalData","revalidateCircuitsInfoInterval","Number","process","takeLatest","GetCircuitsSaga","SelectCircuitSaga","getCircuits","circuitsList","select","length","getCircuitsInfo","circutsInfo","getCircuitsStats","circutsStats","all","BidsSaga","GetBidsSaga","revalidateBidsDelay","circuitId","getBidsByCircuitId","AsksSaga","GetAsksSaga","revalidateAsksDelay","getAsksByCircuitId","UpdateProofList","UpdateIsLoadingProofs","UpdateProofsError","ProofReducer","proofs","isLoadingProofs","selectPartialProofList","proofState","map","bid_id","ProofSaga","GetProofSaga","selectUser","getProofs","proofList","RootReducer","combineReducers","RootSaga","sagaMiddleware","createSagaMiddleware","middlewares","store","configureStore","reducer","middleware","getDefaultMiddleware","thunk","devTools","run","useAppSelector","useSelector","module","exports","TradeOrderType","SocialLinks","className","bottomIndent","styles","socialLinks","icon","url","href","iconName","srOnlyText","Copyright","Date","getFullYear","Footer","footer","readonlyUser","useAuth","isAuthentificated","useMemo","isReadonly","useLogin","dispatch","useDispatch","navigate","useNavigate","useCallback","Path","root","replace","notificationActions","create","title","message","variant","Variant","success","chartDefaultTheme","background","colors","baseDarkerColor","fontFamily","layoutTextColor","secondaryDarkerColor","gridLineColor","baseLightColor","chartDefaultOptions","layout","type","ColorType","Solid","color","textColor","grid","vertLines","horzLines","useGetCircuitDashboardData","withVolumes","dataRange","DateUnit","day","loadingData","deepEqual","grouppedOrders","reduceOrdersByDate","chartData","candlestickChartData","getCandlestickData","proofGenTimeData","getProofGenTimeData","volumesData","getVolumesData","reduce","previousValue","currentValue","date","getUTCTimestamp","timestamp","ordersGrouppedByDate","keys","Object","index","ordersCosts","cost","high","Math","max","low","min","open","at","close","time","ordersEvalTime","eval_time","averageEvalTime","sum","value","costs","transparentSuccessColor","transparentDangerColor","seriesDefaultOptions","priceFormat","precision","minMove","volumeSeriesDefaultOptions","transparentBaseLightColor","priceScaleId","scaleMargins","top","bottom","getDataRange","rightEdge","visibleRange","distance","minute","hour","quaterMinute","halfHour","from","to","createOrderBookData","orderType","userOrders","forEach","key","parsedKey","ordersAmount","userOrdersAmount","some","y","reduceOrdersByCostAndEvalTime","mapKey","get","set","getLastOrderData","currentAsks","completedAsks","latestCost","prevCost","customSortFunction","firstRow","secondRow","columnId","firstValue","values","secondValue","mapToTradeHistoryData","i","formatDate","getType","costA","costB","DetailedInfoTab","mapToManageOrdersData","init_time","orderId","useLocalStorage","initialValue","useState","storedValue","setStoredValue","setValue","MobileMenu","menu","Button","button","iconNameDropdownClosed","iconNameDropdownOpend","Menu","align","navigationLinks","path","Item","AuthCard","children","authCard","LoginForm","nodeRef","useRef","userNameInputRef","processLogin","errorMessage","setErrorMessage","pwdInputType","setPwdInputType","pwdInputIconName","useForm","mode","register","formState","isSubmitting","isValid","errors","onSubmitLogin","handleSubmit","login","useEffect","current","focus","required","ref","restRegister","source","alt","responsive","rounded","logoImage","Group","hasError","size","Size","lg","control","Addon","placeholder","e","autoComplete","Buttons","onClick","block","disabled","CSSTransition","classNames","timeout","in","unmountOnExit","AuthContainer","showFullScreen","loginContainer","copyright","ProtectedRoute","RegisterForm","emailInputRef","defaultValues","isSubmitSuccessful","reset","axios","post","then","Error","statusText","catch","pattern","emailRegExp","form","description","social","successMessage","ReadonlyAccessProvider","fallback","errorView","setError","loginWithReadonly","username","password","UserMenu","processLogout","useLogout","dropdown","onSelect","ProtectedContent","overlayTitle","overlayButtonText","container","Breadcrumbs","breadcrumbs","mainSiteAddress","item","renderLink","Header","pathname","useLocation","navbar","fluid","nav","active","props","portfolio","Details","defaultOpen","unmountOnClose","isOpen","setIsOpen","toggleIsOpen","iconClassName","onKeyDown","role","tabIndex","Children","child","isValidElement","cloneElement","DashboardCard","dashboardCard","Table","rest","table","TBody","TCell","THead","sticky","isFooterHeader","tHeadClassName","clsx","tableHead","stickyHead","footerHead","THeader","TRow","ReactTableHeader","column","onlySortBy","canSort","isSorted","isSortedDesc","toggleSortBy","shouldToggleSort","useLayoutEffect","getHeaderProps","getSortByToggleProps","sortableColumnHeader","preventDefault","render","tableHooks","useFilters","useSortBy","notEmpty","ReactTable","name","renderRows","renderHeaders","defaultInitialState","footerHeader","showTableHeader","restOptions","defaultState","setInitialState","setNewState","input","sortBy","filters","hiddenColumns","columnOrder","groupBy","useInitialTableState","tableInstance","useTable","getTableBodyProps","visibleColumns","debouncedState","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","renderTableHeadersFallback","columns","FileUploader","onDrop","textMessage","setTextMessage","useDropzone","acceptedFiles","fileRejections","event","getRootProps","getInputProps","isDragActive","FullScreenView","fullScreenView","ClicableIcon","OfflineView","as","xs","NetConnectionHandler","window","navigator","onLine","online","setOnline","setIsOnline","setIsOffline","addEventListener","removeEventListener","Overlay","overlay","PriceChangeIndicator","change","toFixed","isGrow","computedClassName","priceChangeIndicator","abs","CircuitsListItemInfo","memo","isSelected","isLoadingInfo","position","CurcuitsListItem","selectedItem","prev","next","Body","accessor","Filter","setFilter","debouncedSearch","debounce","onChange","target","disableFilters","defaultTableState","desc","CircuitsListTable","tableData","info","circuit_id","toUpperCase","daily_change","rows","prepareRow","canFilter","row","CircuitsList","loadingCircuits","grow","CircuitInfoCard","circuit","repository","ManageOrdersTab","CircuitJsonView","jsonView","src","collapsed","displayDataTypes","displayObjectSize","theme","jsonViewerTheme","CircuitStatsCard","isLoadingStats","stats","avg_cost","avg_eval_time","completed","CircuitDetailedInfo","intoType","setInfoType","currentSelectedCircuit","justified","toolbar","t","imageContainer","getCurrencyImage","content","CircuitDetailedInfoFactory","ChartTypeSelect","chartType","onSelectChartType","useBreakpoints","sm","tabs","vertical","ChartType","ChartSettingsContext","createContext","DataRangeSelect","useContext","setDataRange","ChartLegend","price","chartLegend","chartName","ChartTemplate","seriesType","seriesData","seriesOptions","chartOptions","displayVolumes","options","chart","setChart","htmlElement","createChart","width","clientWidth","height","clientHeight","timeScale","fitContent","handleResize","applyOptions","remove","useChart","localization","timeFormatter","formatUTCTimestamp","getDateFormatBasedOnDateUnit","tickMarkFormatter","fixRightEdge","rightPriceScale","markers","volumes","setPrice","series","addLineSeries","bind","addCandlestickSeries","setData","setMarkers","volumeSeries","addHistogramSeries","crosshairMoveHandler","param","seriesPrices","subscribeCrosshairMove","removeSeries","unsubscribeCrosshairMove","setVisibleLogicalRange","useRenderChartData","ProofCostChart","upColor","successColor","downColor","dangerColor","priceLineWidth","isLoadingChartData","ProofTimeGenChart","infoColor","ChartSettingsProvider","setDisplayVolumes","Provider","DashboardToolbar","isFullscreen","setFullScreen","CircuitInfoPanel","currentCircuit","circuitInfo","panel","renderDashOnEmptyValue","volume","CircuitDashboard","proofCostChart","setChartType","fullScreen","ChartFactory","proofGetTimeChart","OrderManagementContext","OrderManagementContextProvider","processing","setProcessing","selectedValues","setSelectedValues","OrderBookTableCell","cell","getCellProps","OrderBookTableRow","propsClassName","onClickRow","getRowProps","style","combinedStyle","combinedClassName","cells","defaultOrderBookState","OrderBookTable","lastOrderData","maxVolume","rowsContainer","getDataWithVolumes","renderRow","ask","lastOrderDataContainer","reverse","bid","orderBookTable","disableSortRemove","count","OrderBook","itemsLimit","userAsks","userBids","isError","disableSortBy","sortType","sortDescFirst","asksData","Map","slice","bidsData","concat","useGetOrderBookData","orderBook","OrderBookViewFactory","BaseFormGroup","hintText","labelText","uniqueId","Label","htmlFor","validateFn","v","isNaN","CreateTradeOrderForm","onSubmit","useFormContext","setValueOpts","shouldDirty","shouldValidate","valueAsNumber","detailsTitle","validate","PublicInput","rules","val","field","handleJsonFile","reader","FileReader","onload","obj","onerror","onabort","file","readAsText","multiple","accept","CreateBidForm","selectedCircuitId","onSubmitBid","createBid","CreateAskForm","onSubmitAsk","createAsk","CreateOrdersTabs","currentTab","onSetTab","CreateOrdersPanel","buy","tab","setTab","tabFactory","sell","TradeHistoryTable","getCellClassName","TradeHistory","useGetTradeHistoryData","TradeHistoryViewFactory","ManageOrdersPanelTabs","ToolbarPanel","onAccept","onDecline","danger","ActiveOrdersTable","selectedRow","setSelectedRow","onAcceptRemoveOrder","fetcher","removeBid","removeAsk","action","canRemove","shouldUseToFixed","activeOrders","inProgressOrders","HistoryOrdersTable","ManageOrdersPanel","createdBids","completedBids","createdAsks","activeOrdersData","mappedAsks","mappedBids","historyOrdersData","useGetManageOrdersData","loading","history","SelectedProofContext","SelectedProofContextProvider","selectedProofId","setSelectedProofId","useProofIdState","ProofList","loadingProofs","getProofsError","ProofListViewFactory","Heading","ProofViewHeader","fileName","proof","downloadJson","blob","Blob","a","document","createElement","download","URL","createObjectURL","clickEvt","MouseEvent","view","bubbles","cancelable","dispatchEvent","ProofViewJson","collapseStringsAfterLength","ProofView","proofData","ProofViewFactory","databaseUrl","apiUrl","httpFetcher","createBearerHttpClient","createFetcher","query","bindVars","batchSize","bidToRemoveId","askToRemoveId","decoded","jwt_decode","preferred_username","format","dayjs","floorToQuaterMinute","minutes","getMinutes","minutesToSet","setMinutes","dateString","floorTo","setSeconds","setHours","floorDateTo","trunc","getTime","fractionDigits","longDash","Currency","currency","unit","MarketView","lazy","LoginView","PortfolioView","Page404","RegisterView","loginRoute","Component","registerRoute","routes","any","base00","base01","base02","base03","base04","primaryColor","base05","base06","base07","base08","base09","base0A","secondaryColor","base0B","base0C","base0D","base0E","base0F","loginData","dbName","newFetcher","currentUser","HttpClient","requestConfig","configureClient","client","this","config","delete","REACT_APP_BASE_API_URL","baseUrl","withCredentials","baseURL","interceptors","request","use","injectJwtToken","jwtToken","headers","Authorization","require","ErrorView","Sentry","onPerfEntry","header","stickyHeader","element","requiredEnv","dsn","integrations","BrowserTracing","tracesSampleRate","StrictMode","getElementById","Function","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.c7bc7f76.chunk.js","sourcesContent":["/**\n * @file Local storage API.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Get localStorage item.\n *\n * @param ItemKey - Key.\n * @returns Item value.\n */\nexport const getItemFromLocalStorage = <T>(ItemKey: string): T | undefined => {\n    try {\n        const serialisedValue = localStorage.getItem(ItemKey);\n        if (serialisedValue === null) {\n            return undefined;\n        }\n        return JSON.parse(serialisedValue);\n    } catch {\n        return undefined;\n    }\n};\n\n/**\n * Set localStorage item.\n *\n * @param ItemKey - Key.\n * @param ItemValue - Value.\n */\nexport const setItemIntoLocalStorage = <T>(ItemKey: string, ItemValue: T): void => {\n    try {\n        const serialisedValue = JSON.stringify(ItemValue);\n        localStorage.setItem(ItemKey, serialisedValue);\n    } catch {\n        // Do nothing\n    }\n};\n\n/**\n * Remove item from localStorage.\n *\n * @param ItemKey - Key.\n */\nexport const removeItemFromLocalStorage = (ItemKey: string): void => {\n    try {\n        localStorage.removeItem(ItemKey);\n    } catch {\n        // Do nothing\n    }\n};\n","/**\n * @file Redux action creators.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createAction } from '@reduxjs/toolkit';\n\n/**\n * Update current user.\n */\nexport const UpdateUser = createAction<string | null>('@user/UPDATE');\n","/**\n * @file Reducer.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport { UpdateUser } from '../actions';\n\n/**\n * State.\n */\nexport type UserReducerState = {\n    user: string | null;\n};\n\n/**\n * Initial state.\n */\nconst initialState: UserReducerState = {\n    user: null,\n};\n\n/**\n * Reducer of user info.\n */\nexport const UserReducer = createReducer(initialState, builder =>\n    builder.addCase(UpdateUser, (state, { payload }) => ({\n        ...state,\n        user: payload,\n    })),\n);\n","/**\n * @file Redux saga.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { SagaIterator } from '@redux-saga/core';\nimport { fork, put } from 'redux-saga/effects';\nimport { getItemFromLocalStorage } from '../../../packages/LocalStorage';\nimport { getUserFromJwt } from '../../../utils';\nimport { UpdateUser } from '../actions';\n\n/**\n * Auth main saga.\n *\n * @yields\n */\nexport function* AuthSaga(): SagaIterator<void> {\n    yield fork(TryGetUserFromLocalStorageTokenSaga);\n}\n\n/**\n * Tries to get user from localStorage token.\n *\n * @yields\n */\nfunction* TryGetUserFromLocalStorageTokenSaga(): SagaIterator<void> {\n    const jwt = getItemFromLocalStorage<string>('jwt');\n\n    if (!jwt) {\n        return;\n    }\n\n    const user = getUserFromJwt(jwt);\n\n    if (user) {\n        yield put(UpdateUser(user));\n    }\n}\n","/**\n * @file Redux saga.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { call, put, StrictEffect } from 'redux-saga/effects';\nimport { UpdateUser } from '../actions';\n\n/**\n * Removes current user if api call response returns 401 error.\n * Consider to wrap all significant api calls into this.\n *\n * @param fn Api call.\n * @param args - Api call arguments.\n * @returns Api call result or throws error.\n * @throws Api call error.\n * @yields\n * @example\n * ```ts\n * const result = yield call(ProtectedCall, callMethod, callArguments);\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function* ProtectedCall<T extends (...args: any[]) => any>(\n    fn: T,\n    ...args: Parameters<T>\n): Generator<StrictEffect, unknown, unknown> {\n    try {\n        const result: unknown = yield call(fn, ...args);\n\n        return result;\n    } catch (e) {\n        if (e.response.data.code === 401) {\n            yield put(UpdateUser(null));\n        }\n\n        throw e;\n    }\n}\n","/**\n * @file Selectors.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { RootStateType } from 'src/redux';\n\n/**\n * Select current user.\n *\n * @param s State.\n * @returns User.\n */\nexport const selectCurrentUser = (s: RootStateType): string | null => s.userState.user;\n","/**\n * @file Redux action creators.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createAction } from '@reduxjs/toolkit';\nimport { Circuit, CircuitInfo, CircuitStats } from 'src/models';\n\n/**\n * Update circuits list.\n */\nexport const UpdateCircuitsList = createAction<Circuit[]>('@circuits/UPDATE_CIRCUITS_LIST');\n\n/**\n * Update selected circuit id.\n */\nexport const UpdateSelectedCircuitId = createAction<string>('@circuits/UPDATE_SELECTED_CIRCUIT_ID');\n\n/**\n * Update circuits loading state.\n */\nexport const UpdateIsLoadingCircuits = createAction<boolean>('@circuits/UPDATE_IS_LOADING');\n\n/**\n * Update circuits error state.\n */\nexport const UpdateCircuitsError = createAction<boolean>('@circuits/UPDATE_ERROR');\n\n/**\n * Update circuit info list.\n */\nexport const UpdateCircuitsInfoList = createAction<CircuitInfo[]>('@circuits/UPDATE_CIRCUITS_INFO');\n\n/**\n * Update circuit info loading state.\n */\nexport const UpdateIsLoadingCircuitsInfo = createAction<boolean>(\n    '@circuits/UPDATE_IS_LOADING_CIRCUITS_INFO',\n);\n\n/**\n * Update circuit stats.\n */\nexport const UpdateCircuitsStats = createAction<CircuitStats[]>('@circuits/UPDATE_STATS');\n\n/**\n * Update circuit stats loading state.\n */\nexport const UpdateIsLoadingCircuitsStats = createAction<boolean>(\n    '@circuits/UPDATE_IS_LOADING_CIRCUITS_STATS',\n);\n","/**\n * @file Redux action creators.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createAction } from '@reduxjs/toolkit';\nimport { Bid } from 'src/models';\n\n/**\n * Update bids list.\n */\nexport const UpdateBidsList = createAction<Bid[]>('@bids/UPDATE_BIDS_LIST');\n\n/**\n * Add bid.\n */\nexport const AddBid = createAction<Bid>('@bids/ADD_BID');\n\n/**\n * Update bids loading state.\n */\nexport const UpdateIsLoadingBids = createAction<boolean>('@bids/UPDATE_IS_LOADING');\n\n/**\n * Update bids error state.\n */\nexport const UpdateBidsError = createAction<boolean>('@bids/UPDATE_ERROR');\n\n/**\n * Remove bid.\n */\nexport const RemoveBid = createAction<Bid['id']>('@bids/REMOVE_BID');\n","/**\n * @file Redux action creators.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createAction } from '@reduxjs/toolkit';\nimport { Ask } from 'src/models';\n\n/**\n * Update asks list.\n */\nexport const UpdateAsksList = createAction<Ask[]>('@asks/UPDATE_ASKS_LIST');\n\n/**\n * Add ask.\n */\nexport const AddAsk = createAction<Ask>('@asks/ADD_ASK');\n\n/**\n * Update asks loading state.\n */\nexport const UpdateIsLoadingAsks = createAction<boolean>('@asks/UPDATE_IS_LOADING');\n\n/**\n * Update asks error state.\n */\nexport const UpdateAsksError = createAction<boolean>('@asks/UPDATE_ERROR');\n\n/**\n * Remove ask.\n */\nexport const RemoveAsk = createAction<Ask['id']>('@asks/REMOVE_ASK');\n","/**\n * @file Reducer.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport { Circuit, CircuitInfo, CircuitStats } from 'src/models';\nimport {\n    UpdateCircuitsList,\n    UpdateSelectedCircuitId,\n    UpdateIsLoadingCircuits,\n    UpdateCircuitsError,\n    UpdateCircuitsInfoList,\n    UpdateIsLoadingCircuitsInfo,\n    UpdateCircuitsStats,\n    UpdateIsLoadingCircuitsStats,\n} from '../actions';\n\n/**\n * State.\n */\nexport type CircuitsReducerState = {\n    circuits: Circuit[];\n    selectedid?: string;\n    isLoading: boolean;\n    error?: boolean;\n    circuitsInfo: CircuitInfo[];\n    isLoadingCircuitsInfo: boolean;\n    circuitsStats: CircuitStats[];\n    isLoadingCircuitsStats: boolean;\n};\n\n/**\n * Initial state.\n */\nconst initialState: CircuitsReducerState = {\n    circuits: [],\n    selectedid: undefined,\n    isLoading: false,\n    error: false,\n    circuitsInfo: [],\n    isLoadingCircuitsInfo: false,\n    circuitsStats: [],\n    isLoadingCircuitsStats: false,\n};\n\n/**\n * Reducer of circuits.\n */\nexport const CircuitsReducer = createReducer(initialState, builder =>\n    builder\n        .addCase(UpdateCircuitsList, (state, { payload }) => ({\n            ...state,\n            circuits: payload,\n        }))\n        .addCase(UpdateSelectedCircuitId, (state, { payload }) => ({\n            ...state,\n            selectedid: payload,\n        }))\n        .addCase(UpdateIsLoadingCircuits, (state, { payload }) => ({\n            ...state,\n            isLoading: payload,\n        }))\n        .addCase(UpdateCircuitsError, (state, { payload }) => ({\n            ...state,\n            error: payload,\n        }))\n        .addCase(UpdateCircuitsInfoList, (state, { payload }) => ({\n            ...state,\n            circuitsInfo: payload,\n        }))\n        .addCase(UpdateIsLoadingCircuitsInfo, (state, { payload }) => ({\n            ...state,\n            isLoadingCircuitsInfo: payload,\n        }))\n        .addCase(UpdateCircuitsStats, (state, { payload }) => ({\n            ...state,\n            circuitsStats: payload,\n        }))\n        .addCase(UpdateIsLoadingCircuitsStats, (state, { payload }) => ({\n            ...state,\n            isLoadingCircuitsStats: payload,\n        })),\n);\n","/**\n * @file Reducer.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport { Ask } from 'src/models';\nimport {\n    UpdateAsksList,\n    AddAsk,\n    UpdateAsksError,\n    UpdateIsLoadingAsks,\n    RemoveAsk,\n} from '../actions';\n\n/**\n * State.\n */\nexport type AsksReducerState = {\n    asks: Ask[];\n    isLoading: boolean;\n    error: boolean;\n};\n\n/**\n * Initial state.\n */\nconst initialState: AsksReducerState = {\n    asks: [],\n    isLoading: false,\n    error: false,\n};\n\n/**\n * Reducer of asks.\n */\nexport const AsksReducer = createReducer(initialState, builder =>\n    builder\n        .addCase(UpdateAsksList, (state, { payload }) => ({\n            ...state,\n            asks: payload,\n        }))\n        .addCase(AddAsk, (state, { payload }) => {\n            state.asks.push(payload);\n        })\n        .addCase(UpdateIsLoadingAsks, (state, { payload }) => ({\n            ...state,\n            isLoading: payload,\n        }))\n        .addCase(UpdateAsksError, (state, { payload }) => ({\n            ...state,\n            error: payload,\n        }))\n        .addCase(RemoveAsk, (state, { payload }) => ({\n            ...state,\n            asks: state.asks.filter(x => payload !== x.id),\n        })),\n);\n","/**\n * @file Reducer.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport { Bid } from 'src/models';\nimport {\n    UpdateBidsList,\n    AddBid,\n    UpdateBidsError,\n    UpdateIsLoadingBids,\n    RemoveBid,\n} from '../actions';\n\n/**\n * State.\n */\nexport type BidsReducerState = {\n    bids: Bid[];\n    isLoading: boolean;\n    error: boolean;\n};\n\n/**\n * Initial state.\n */\nconst initialState: BidsReducerState = {\n    bids: [],\n    isLoading: false,\n    error: false,\n};\n\n/**\n * Reducer of bids.\n */\nexport const BidsReducer = createReducer(initialState, builder =>\n    builder\n        .addCase(UpdateBidsList, (state, { payload }) => ({\n            ...state,\n            bids: payload,\n        }))\n        .addCase(AddBid, (state, { payload }) => {\n            state.bids.push(payload);\n        })\n        .addCase(UpdateIsLoadingBids, (state, { payload }) => ({\n            ...state,\n            isLoading: payload,\n        }))\n        .addCase(UpdateBidsError, (state, { payload }) => ({\n            ...state,\n            error: payload,\n        }))\n        .addCase(RemoveBid, (state, { payload }) => ({\n            ...state,\n            asks: state.bids.filter(x => payload !== x.id),\n        })),\n);\n","/**\n * @file Selectors.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createSelector } from '@reduxjs/toolkit';\nimport { RootStateType } from '../../RootStateType';\n\nconst selectCircuitsList = (s: RootStateType) => s.circuitsState.circuits;\n\n/**\n * Selects current circuit id.\n *\n * @param s State.\n * @returns Current selected circuit id.\n */\nexport const selectCurrentCircuitId = (s: RootStateType): string | undefined =>\n    s.circuitsState.selectedid;\n\n/**\n * Sorted and filtered circuits selector.\n */\nexport const selectCircuits = createSelector(selectCircuitsList, circuits => circuits);\n\n/**\n * Selected circuit selector.\n */\nexport const selectCurrentCircuit = createSelector(\n    selectCircuits,\n    selectCurrentCircuitId,\n    (circuits, selectedid) => circuits.find(x => x.id === selectedid),\n);\n","/**\n * @file Selectors.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createSelector } from '@reduxjs/toolkit';\nimport { Bid } from 'src/models';\nimport { RootStateType } from 'src/redux';\nimport { selectCurrentUser } from '../../login';\n\n/**\n * Select all bids.\n *\n * @param s State.\n * @returns All bids.\n */\nexport const selectBidsList = (s: RootStateType): Bid[] => s.bidsState.bids;\n\n/**\n * Select bids, created by current user.\n */\nexport const selectCurrentUserBids = createSelector(\n    selectBidsList,\n    selectCurrentUser,\n    (bids, user) => bids.filter(x => x.sender === user),\n);\n\n/**\n * Select bids, created by current user with 'created' status.\n */\nexport const selectCurrentUserCreatedBids = createSelector(selectCurrentUserBids, asks =>\n    asks.filter(x => x.status === 'created'),\n);\n\n/**\n * Select bids, created by current user with 'compelted' status.\n */\nexport const selectCurrentUserCompletedBids = createSelector(selectCurrentUserBids, asks =>\n    asks.filter(x => x.status === 'completed'),\n);\n","/**\n * @file Selectors.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createSelector } from '@reduxjs/toolkit';\nimport { Ask } from 'src/models';\nimport { RootStateType } from 'src/redux';\nimport { selectCurrentUser } from '../../login';\n\n/**\n * Select all asks from state.\n *\n * @param s State.\n * @returns All asks.\n */\nexport const selectAsksList = (s: RootStateType): Ask[] => s.asksState.asks;\n\n/**\n * Select all completed asks.\n */\nexport const selectCompletedAsks = createSelector(selectAsksList, asks =>\n    asks.filter(x => x.status === 'completed'),\n);\n\n/**\n * Select asks, created by current user.\n */\nexport const selectCurrentUserAsks = createSelector(\n    selectAsksList,\n    selectCurrentUser,\n    (asks, user) => asks.filter(x => x.sender === user),\n);\n\n/**\n * Select asks, created by current user with 'created' status.\n */\nexport const selectCurrentUserActiveAsks = createSelector(selectCurrentUserAsks, asks =>\n    asks.filter(x => x.status === 'created' || x.status === 'processing'),\n);\n\n/**\n * Select asks, created by current user with 'compelted' status.\n */\nexport const selectCurrentUserCompletedAsks = createSelector(selectCurrentUserAsks, asks =>\n    asks.filter(x => x.status === 'completed'),\n);\n","/**\n * @file Redux saga.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { SagaIterator } from 'redux-saga';\nimport { delay, call, take, fork, cancel } from 'redux-saga/effects';\nimport { UpdateUser } from '../../login';\n\n/**\n * Helps to revalidate data on interval. Revalidation starts when auth completes.\n * Stops data revalidation when user logs out.\n *\n * TODO - implement pause revalidation when user leaves tab (but doesn't close it).\n *\n * @param fnToRevalidate - Function to revalidate data. Can be Generator or common function.\n * @param revalidateInterval - Interval between calling fn.\n * @param args - Any arguments to pass into fn.\n * @returns Revalidation saga.\n * @yields\n */\nexport function* RevalidateSaga<T extends (...args: unknown[]) => unknown>(\n    fnToRevalidate: T,\n    revalidateInterval: number,\n    ...args: Parameters<T>\n): SagaIterator {\n    while (true) {\n        const { payload: user } = yield take(UpdateUser);\n\n        if (user) {\n            yield call(Revalidate, fnToRevalidate, revalidateInterval, ...args);\n        }\n    }\n}\n\n// eslint-disable-next-line jsdoc/require-jsdoc\nexport function* Revalidate<T extends (...args: unknown[]) => unknown>(\n    fnToRevalidate: T,\n    revalidateInterval: number,\n    ...args: Parameters<T>\n): SagaIterator {\n    const task = yield fork(function* () {\n        while (true) {\n            yield call(fnToRevalidate, ...args);\n            yield delay(revalidateInterval);\n        }\n    });\n\n    const { payload: user } = yield take(UpdateUser);\n\n    if (!user) {\n        yield cancel(task);\n    }\n}\n","/**\n * @file Redux saga.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { call, put, select, takeLatest, fork, all } from 'redux-saga/effects';\nimport { SagaIterator } from '@redux-saga/core';\nimport { getCircuits, getCircuitsInfo, getCircuitsStats } from 'src/api';\nimport { Circuit, CircuitInfo, CircuitStats } from 'src/models';\nimport {\n    UpdateCircuitsError,\n    UpdateCircuitsInfoList,\n    UpdateCircuitsList,\n    UpdateCircuitsStats,\n    UpdateIsLoadingCircuits,\n    UpdateIsLoadingCircuitsInfo,\n    UpdateIsLoadingCircuitsStats,\n    UpdateSelectedCircuitId,\n} from '../actions';\nimport { ProtectedCall, UpdateUser } from '../../login';\nimport { selectCurrentCircuitId } from '../selectors';\nimport { RevalidateSaga } from '../../common';\n\nconst revalidateCircuitsInfoInterval =\n    Number(process.env.REACT_APP_REVALIDATE_DATA_INTERVAL) || 3000;\n\n/**\n * Circuits main saga.\n *\n * @yields\n */\nexport function* CircuitsSaga(): SagaIterator<void> {\n    yield takeLatest(UpdateUser, GetCircuitsSaga);\n    yield takeLatest(UpdateCircuitsList, SelectCircuitSaga);\n    yield fork(RevalidateSaga, GetCircuitsAdditionalData, revalidateCircuitsInfoInterval);\n}\n\n/**\n * Get circuits saga.\n *\n * @param {ReturnType<typeof UpdateUser>} action Action return type.\n * @yields\n */\nfunction* GetCircuitsSaga({ payload: user }: ReturnType<typeof UpdateUser>): SagaIterator<void> {\n    if (!user) {\n        return;\n    }\n\n    try {\n        yield put(UpdateIsLoadingCircuits(true));\n        yield put(UpdateCircuitsError(false));\n\n        const circuitsList: Circuit[] = yield call(ProtectedCall, getCircuits);\n\n        if (circuitsList !== undefined) {\n            yield put(UpdateCircuitsList(circuitsList));\n        }\n    } catch {\n        yield put(UpdateCircuitsError(true));\n    } finally {\n        yield put(UpdateIsLoadingCircuits(false));\n    }\n}\n\n/**\n * Selects first circuit in list after circuits list update (if none is selected).\n *\n * @param {ReturnType<typeof UpdateCircuitsList>} action - Action.\n * @yields\n */\nfunction* SelectCircuitSaga({\n    payload,\n}: ReturnType<typeof UpdateCircuitsList>): SagaIterator<void> {\n    const currentCircuitId = yield select(selectCurrentCircuitId);\n\n    if (currentCircuitId) {\n        return;\n    }\n\n    if (!payload.length) {\n        return;\n    }\n\n    yield put(UpdateSelectedCircuitId(payload[0].id));\n}\n\n/**\n * Revalidate circuits info.\n *\n * @yields\n */\nfunction* GetCircuitsInfoSaga() {\n    try {\n        yield put(UpdateIsLoadingCircuitsInfo(true));\n        const circutsInfo: CircuitInfo[] = yield call(ProtectedCall, getCircuitsInfo);\n        yield put(UpdateCircuitsInfoList(circutsInfo));\n    } catch {\n        // Do nothing\n    } finally {\n        yield put(UpdateIsLoadingCircuitsInfo(false));\n    }\n}\n\n/**\n * Revalidate circuits stats.\n *\n * @yields\n */\nfunction* GetCircuitsStatsSaga() {\n    try {\n        yield put(UpdateIsLoadingCircuitsStats(true));\n        const circutsStats: CircuitStats[] = yield call(ProtectedCall, getCircuitsStats);\n        yield put(UpdateCircuitsStats(circutsStats));\n    } catch {\n        // Do nothing\n    } finally {\n        yield put(UpdateIsLoadingCircuitsStats(false));\n    }\n}\n\n/**\n * Revalidate circuit additional data (info and statistics).\n *\n * @yields\n */\nfunction* GetCircuitsAdditionalData() {\n    yield all([fork(GetCircuitsInfoSaga), fork(GetCircuitsStatsSaga)]);\n}\n","/**\n * @file Redux saga.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { call, fork, put, select, takeLatest } from 'redux-saga/effects';\nimport { SagaIterator } from '@redux-saga/core';\nimport { getBidsByCircuitId } from 'src/api';\nimport { Bid } from 'src/models';\nimport { ProtectedCall } from 'src/redux';\nimport {\n    UpdateSelectedCircuitId,\n    UpdateBidsList,\n    UpdateIsLoadingBids,\n    UpdateBidsError,\n} from '../actions';\nimport { selectCurrentCircuitId } from '../selectors';\nimport { RevalidateSaga } from '../../common';\n\nconst revalidateBidsDelay = Number(process.env.REACT_APP_REVALIDATE_DATA_INTERVAL) || 3000;\n\n/**\n * Bids main saga.\n *\n * @yields\n */\nexport function* BidsSaga(): SagaIterator<void> {\n    yield takeLatest(UpdateSelectedCircuitId, function* () {\n        yield put(UpdateBidsList([]));\n        yield fork(GetBidsSaga);\n    });\n    yield fork(RevalidateSaga, GetBidsSaga, revalidateBidsDelay);\n}\n\n/**\n * Get bids saga.\n *\n * @yields\n */\nfunction* GetBidsSaga(): SagaIterator<void> {\n    const circuitId: string | undefined = yield select(selectCurrentCircuitId);\n\n    if (circuitId === undefined) {\n        return;\n    }\n\n    try {\n        yield put(UpdateBidsError(false));\n        yield put(UpdateIsLoadingBids(true));\n\n        const bids: Bid[] = yield call(ProtectedCall, getBidsByCircuitId, circuitId);\n\n        if (bids !== undefined) {\n            yield put(UpdateBidsList(bids));\n        }\n    } catch (e) {\n        yield put(UpdateBidsError(true));\n    } finally {\n        yield put(UpdateIsLoadingBids(false));\n    }\n}\n","/**\n * @file Redux saga.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { call, fork, put, takeLatest, select } from 'redux-saga/effects';\nimport { SagaIterator } from '@redux-saga/core';\nimport { getAsksByCircuitId } from 'src/api';\nimport { Ask } from 'src/models';\nimport { ProtectedCall } from 'src/redux';\nimport {\n    UpdateSelectedCircuitId,\n    UpdateAsksList,\n    UpdateIsLoadingAsks,\n    UpdateAsksError,\n} from '../actions';\nimport { selectCurrentCircuitId } from '../selectors';\nimport { RevalidateSaga } from '../../common';\n\nconst revalidateAsksDelay = Number(process.env.REACT_APP_REVALIDATE_DATA_INTERVAL) || 3000;\n\n/**\n * Asks main saga.\n *\n * @yields\n */\nexport function* AsksSaga(): SagaIterator<void> {\n    yield takeLatest(UpdateSelectedCircuitId, function* () {\n        yield put(UpdateAsksList([]));\n        yield fork(GetAsksSaga);\n    });\n    yield fork(RevalidateSaga, GetAsksSaga, revalidateAsksDelay);\n}\n\n/**\n * Get asks saga.\n *\n * @yields\n */\nfunction* GetAsksSaga(): SagaIterator<void> {\n    const circuitId: string | undefined = yield select(selectCurrentCircuitId);\n\n    if (circuitId === undefined) {\n        return;\n    }\n\n    try {\n        yield put(UpdateAsksError(false));\n        yield put(UpdateIsLoadingAsks(true));\n\n        const asks: Ask[] = yield call(ProtectedCall, getAsksByCircuitId, circuitId);\n\n        if (asks !== undefined) {\n            yield put(UpdateAsksList(asks));\n        }\n    } catch (e) {\n        yield put(UpdateAsksError(true));\n    } finally {\n        yield put(UpdateIsLoadingAsks(false));\n    }\n}\n","/**\n * @file Redux action creators.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createAction } from '@reduxjs/toolkit';\nimport { Proof } from 'src/models';\n\n/**\n * Update proof list.\n */\nexport const UpdateProofList = createAction<Proof[]>('@proof/UPDATE_PROOF_LIST');\n\n/**\n * Update proofs loading state.\n */\nexport const UpdateIsLoadingProofs = createAction<boolean>('@proof/UPDATE_IS_LOADING');\n\n/**\n * Update proof error state.\n */\nexport const UpdateProofsError = createAction<boolean>('@proof/UPDATE_ERROR');\n","/**\n * @file Reducer.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport { Proof } from 'src/models';\nimport { UpdateIsLoadingProofs, UpdateProofList, UpdateProofsError } from '../actions';\n\n/**\n * State.\n */\nexport type ProofReducerState = {\n    proofs: Proof[];\n    isLoadingProofs: boolean;\n    error: boolean;\n};\n\n/**\n * Initial state.\n */\nconst initialState: ProofReducerState = {\n    proofs: [],\n    isLoadingProofs: false,\n    error: false,\n};\n\n/**\n * Reducer of proofs.\n */\nexport const ProofReducer = createReducer(initialState, builder =>\n    builder\n        .addCase(UpdateProofList, (state, { payload }) => ({\n            ...state,\n            proofs: payload,\n        }))\n        .addCase(UpdateIsLoadingProofs, (state, { payload }) => ({\n            ...state,\n            isLoadingProofs: payload,\n        }))\n        .addCase(UpdateProofsError, (state, { payload }) => ({\n            ...state,\n            error: payload,\n        })),\n);\n","/**\n * @file Selectors.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createSelector } from '@reduxjs/toolkit';\nimport { Proof } from 'src/models';\nimport { RootStateType } from 'src/redux';\n\n/**\n * Select all proofs from state.\n *\n * @param s State.\n * @returns All proofs.\n */\nexport const selectProofList = (s: RootStateType): Proof[] => s.proofState.proofs;\n\n/**\n * Select all proof without heavy 'proof' field.\n */\nexport const selectPartialProofList = createSelector(selectProofList, proofs =>\n    proofs.map(x => {\n        const { id, bid_id } = x;\n        return { id, bid_id };\n    }),\n);\n","/**\n * @file Redux saga.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { call, put, select, takeLatest } from 'redux-saga/effects';\nimport { SagaIterator } from '@redux-saga/core';\nimport { getProofs } from 'src/api';\nimport { Proof } from 'src/models';\nimport { UpdateProofList, UpdateIsLoadingProofs, UpdateProofsError } from '../actions';\nimport { RootStateType } from '../../RootStateType';\nimport { ProtectedCall, UpdateUser } from '../../login';\n\nconst selectUser = (s: RootStateType) => s.userState.user;\n\n/**\n * Proof main saga.\n *\n * @yields\n */\nexport function* ProofSaga(): SagaIterator<void> {\n    yield takeLatest(UpdateUser, GetProofSaga);\n}\n\n/**\n * Get proof saga.\n *\n * @yields\n */\nfunction* GetProofSaga(): SagaIterator<void> {\n    const user: ReturnType<typeof selectUser> = yield select(selectUser);\n\n    if (!user) {\n        return;\n    }\n\n    try {\n        yield put(UpdateProofsError(false));\n        yield put(UpdateIsLoadingProofs(true));\n\n        const proofList: Proof[] = yield call(ProtectedCall, getProofs, user);\n\n        if (proofList !== undefined) {\n            yield put(UpdateProofList(proofList));\n        }\n    } catch (e) {\n        yield put(UpdateProofsError(true));\n    } finally {\n        yield put(UpdateIsLoadingProofs(false));\n    }\n}\n","/**\n * @file Root reducer.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { combineReducers } from 'redux';\nimport { UserReducer } from './login';\nimport { CircuitsReducer, BidsReducer, AsksReducer } from './market';\nimport { ProofReducer } from './portfolio';\nimport { RootStateType } from './RootStateType';\n\n/**\n * Root reducer.\n */\nexport const RootReducer = combineReducers<RootStateType>({\n    circuitsState: CircuitsReducer,\n    asksState: AsksReducer,\n    bidsState: BidsReducer,\n    proofState: ProofReducer,\n    userState: UserReducer,\n});\n","/**\n * @file Root saga.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { all, AllEffect, fork, ForkEffect } from 'redux-saga/effects';\nimport { CircuitsSaga, AsksSaga, BidsSaga } from './market';\nimport { AuthSaga } from './login';\nimport { ProofSaga } from './portfolio';\n\n/**\n * RootSaga.\n *\n * @yields\n */\nexport default function* RootSaga(): Iterator<AllEffect<ForkEffect>> {\n    yield all([\n        fork(AuthSaga),\n        fork(CircuitsSaga),\n        fork(AsksSaga),\n        fork(BidsSaga),\n        fork(ProofSaga),\n    ]);\n}\n","/**\n * @file State.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { configureStore, Middleware } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport { RootReducer } from './rootReducer';\nimport RootSaga from './RootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares: Middleware[] = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n    middlewares.push(logger);\n}\n\nexport const store = configureStore({\n    reducer: RootReducer,\n    middleware: getDefaultMiddleware => [...getDefaultMiddleware({ thunk: false }), ...middlewares],\n    devTools: process.env.NODE_ENV !== 'production',\n});\n\nsagaMiddleware.run(RootSaga);\n","/**\n * @file Hooks helpers.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { RootStateType } from '../RootStateType';\n\n/**\n * Typed use selector.\n */\nexport const useAppSelector: TypedUseSelectorHook<RootStateType> = useSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CircuitDetailedInfo_container__YIX53\",\"content\":\"CircuitDetailedInfo_content__GjHOu\",\"jsonView\":\"CircuitDetailedInfo_jsonView__2TlZR\",\"description\":\"CircuitDetailedInfo_description__2DJ1s\",\"imageContainer\":\"CircuitDetailedInfo_imageContainer__1_OWD\",\"toolbar\":\"CircuitDetailedInfo_toolbar__36p_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderBook\":\"OrderBook_orderBook__2unJV\",\"orderBookTable\":\"OrderBook_orderBookTable__2siIb\",\"rowsContainer\":\"OrderBook_rowsContainer__3Lv0E\",\"ask\":\"OrderBook_ask__3fnXa\",\"bid\":\"OrderBook_bid__2G52c\",\"lastOrderDataContainer\":\"OrderBook_lastOrderDataContainer__3tzRt\",\"grow\":\"OrderBook_grow__i1wx2\",\"loss\":\"OrderBook_loss__a8PaE\"};","/**\n * @file Enum declaration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Trade order type.\n */\nexport enum TradeOrderType {\n    buy = 'BUY',\n    sell = 'SELL',\n}\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Icon } from '@nilfoundation/react-components';\nimport { socialLinks } from '../../../constants';\nimport styles from './SocialLinks.module.scss';\n\n/**\n * Props.\n */\ntype SocialLinksProps = {\n    className?: string;\n    bottomIndent?: boolean;\n};\n\n/**\n * Social links.\n *\n * @param {SocialLinksProps} props Props.\n * @returns React component.\n */\nexport const SocialLinks = ({ className, bottomIndent }: SocialLinksProps): ReactElement => (\n    <ul\n        aria-label=\"Social media links\"\n        className={`${styles.socialLinks} ${className ?? ''} ${\n            bottomIndent ? styles.bottomIndent : ''\n        }`}\n    >\n        {socialLinks.map(({ icon, url }) => (\n            <li key={icon}>\n                <a href={url}>\n                    <Icon\n                        iconName={`fa-brands fa-${icon}`}\n                        srOnlyText={`${icon} link`}\n                    />\n                </a>\n            </li>\n        ))}\n    </ul>\n);\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\n\n/**\n * Copyright text.\n *\n * @returns React component.\n */\nexport const Copyright = (): ReactElement => {\n    return <>{`Copyright © =nil; Foundation ${new Date().getFullYear()}`}</>;\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Container, Row, Col } from '@nilfoundation/react-components';\nimport { SocialLinks } from '../SocialLinks';\nimport { Copyright } from '../Copyright';\nimport styles from './Footer.module.scss';\n\n/**\n * Footer.\n *\n * @returns React component.\n */\nexport const Footer = (): ReactElement => (\n    <Container className={styles.footer}>\n        <Row>\n            <Col>\n                <SocialLinks bottomIndent />\n            </Col>\n        </Row>\n        <Row className=\"text-center\">\n            <Col>\n                <Copyright />\n            </Col>\n        </Row>\n    </Container>\n);\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useCallback, useMemo } from 'react';\nimport { notificationActions, Variant } from '@nilfoundation/react-components';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { removeItemFromLocalStorage, setItemIntoLocalStorage } from 'src/packages/LocalStorage';\nimport { selectCurrentUser, UpdateUser, useAppSelector } from 'src/redux';\nimport { Path } from 'src/routing';\nimport { getUserFromJwt } from 'src/utils';\n\nconst readonlyUser = process.env.REACT_APP_READONLY_USER;\n\n/**\n * Provides access to auth state.\n *\n * @returns Auth state.\n */\nexport const useAuth = (): {\n    user: string | null;\n    isAuthentificated: boolean;\n    isReadonly: boolean;\n} => {\n    const user = useAppSelector(selectCurrentUser);\n    const isAuthentificated = useMemo(() => {\n        return !!user;\n    }, [user]);\n    const isReadonly = useMemo(() => {\n        return user === readonlyUser;\n    }, [user]);\n\n    return {\n        user,\n        isAuthentificated,\n        isReadonly,\n    };\n};\n\n/**\n * Returns callback to process login with jwt token.\n *\n * @returns Login callback.\n */\nexport const useLogin = (): ((jwt: string) => void) => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const processLogin = useCallback(\n        (jwt: string) => {\n            setItemIntoLocalStorage('jwt', jwt);\n\n            const user = getUserFromJwt(jwt);\n            user && dispatch(UpdateUser(user));\n\n            navigate(Path.root, { replace: true });\n\n            if (user === readonlyUser) {\n                return;\n            }\n\n            notificationActions?.create({\n                title: 'Login success',\n                message: `Successfully login as ${user}`,\n                variant: Variant.success,\n            });\n        },\n        [dispatch, navigate],\n    );\n\n    return processLogin;\n};\n\n/**\n * Returns callback to logout with existed user.\n *\n * @returns Logout callback.\n */\nexport const useLogout = (): (() => void) => {\n    const dispatch = useDispatch();\n\n    const processLogout = useCallback(() => {\n        dispatch(UpdateUser(null));\n        removeItemFromLocalStorage('jwt');\n    }, [dispatch]);\n\n    return processLogout;\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { RefObject, useEffect, useState } from 'react';\nimport { createChart, ColorType, IChartApi, DeepPartial, ChartOptions } from 'lightweight-charts';\nimport colors from 'src/styles/export.module.scss';\n\n/**\n * Return type.\n */\ntype UseChartsReturnType = {\n    /**\n     * Chart instance.\n     */\n    chart?: IChartApi;\n};\n\n/**\n * Use chart params.\n */\ntype UseChartParams<T extends HTMLElement> = {\n    ref: RefObject<T>;\n    options?: DeepPartial<ChartOptions>; // Don't forget to memoize options object.\n};\n\n/**\n * Hook to create and manage charts.\n *\n * @param {UseChartParams} params Parameters.\n * @returns Chart.\n */\nexport const useChart = <T extends HTMLElement>({\n    ref,\n    options,\n}: UseChartParams<T>): UseChartsReturnType => {\n    const [chart, setChart] = useState<IChartApi>();\n\n    useEffect(() => {\n        const { current: htmlElement } = ref;\n        if (!htmlElement) {\n            return;\n        }\n\n        const chart = createChart(htmlElement, {\n            width: htmlElement.clientWidth,\n            height: htmlElement.clientHeight,\n            ...chartDefaultOptions,\n        });\n        chart.timeScale().fitContent();\n        setChart(chart);\n\n        const handleResize = () => {\n            chart.applyOptions({ width: htmlElement.clientWidth });\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, [ref]);\n\n    useEffect(() => {\n        chart && options && chart.applyOptions(options);\n    }, [options, chart]);\n\n    useEffect(() => {\n        return () => {\n            chart && chart.remove();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return { chart };\n};\n\n/**\n * Default charts theme.\n */\nconst chartDefaultTheme = {\n    background: colors.baseDarkerColor,\n    fontFamily: 'inherit',\n    layoutTextColor: colors.secondaryDarkerColor,\n    gridLineColor: colors.baseLightColor,\n};\n\n/**\n * Chart constant options.\n */\nconst chartDefaultOptions = {\n    layout: {\n        background: { type: ColorType.Solid, color: chartDefaultTheme.background },\n        fontFamily: chartDefaultTheme.fontFamily,\n        textColor: chartDefaultTheme.layoutTextColor,\n    },\n    grid: {\n        vertLines: { color: chartDefaultTheme.gridLineColor },\n        horzLines: { color: chartDefaultTheme.gridLineColor },\n    },\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useMemo } from 'react';\nimport {\n    CandlestickData,\n    HistogramData,\n    LineData,\n    UTCTimestamp,\n    WhitespaceData,\n} from 'lightweight-charts';\nimport { useSelector } from 'react-redux';\nimport { dequal as deepEqual } from 'dequal';\nimport sum from 'lodash/sum';\nimport { useAppSelector, selectCompletedAsks } from 'src/redux';\nimport { Ask, Bid } from 'src/models';\nimport { getUTCTimestamp } from 'src/utils';\nimport { DateUnit } from 'src/enums';\nimport colors from 'src/styles/export.module.scss';\n\n/**\n * Hook return type.\n */\ntype UseGetCircuitDashboardDataReturnType = {\n    chartData: {\n        candlestickChartData: CandlestickData[];\n        proofGenTimeData: LineData[];\n        volumesData?: Array<WhitespaceData | HistogramData>;\n    };\n    loadingData: boolean;\n};\n\n/**\n * Get data to draw circuit chart.\n *\n * @param [withVolumes] Should calculate volumes data.\n * @param [dataRange] Data range.\n * @returns Data to draw circuit chart.\n */\nexport const useGetCircuitDashboardData = (\n    withVolumes = false,\n    dataRange = DateUnit.day,\n): UseGetCircuitDashboardDataReturnType => {\n    const loadingData = useAppSelector(s => s.circuitsState.isLoading || s.asksState.isLoading);\n    const asks = useSelector(selectCompletedAsks, deepEqual);\n    const grouppedOrders = useMemo(() => {\n        return reduceOrdersByDate(asks, dataRange);\n    }, [asks, dataRange]);\n\n    const chartData = useMemo(\n        () => ({\n            candlestickChartData: getCandlestickData(grouppedOrders),\n            proofGenTimeData: getProofGenTimeData(grouppedOrders),\n            volumesData: withVolumes ? getVolumesData(grouppedOrders) : undefined,\n        }),\n        [grouppedOrders, withVolumes],\n    );\n\n    return { chartData, loadingData };\n};\n\n/**\n * Takes orders array and returns dict, where keys are dates, and values are arrays of orders.\n *\n * @param asks Asks.\n * @param dataRange Data range.\n * @returns Orders, grouped by date.\n */\nconst reduceOrdersByDate = <T extends Bid | Ask>(asks: T[], dataRange: DateUnit) => {\n    return asks.reduce((previousValue: Record<string, T[]>, currentValue: T) => {\n        const date = getUTCTimestamp(currentValue.timestamp!, dataRange);\n\n        if (!previousValue[date]) previousValue[date] = [];\n\n        previousValue[date].push(currentValue);\n\n        return previousValue;\n    }, {});\n};\n\n/**\n * Creates candleStick data {@link CandlestickData} array from orders, groupped by date.\n *\n * @param ordersGrouppedByDate Orders array.\n * @returns Array of candleStick data.\n */\nconst getCandlestickData = <T extends Bid | Ask>(\n    ordersGrouppedByDate: Record<string, T[]>,\n): CandlestickData[] => {\n    const keys = Object.keys(ordersGrouppedByDate);\n\n    return keys.map((x, index) => {\n        const ordersCosts = ordersGrouppedByDate[x].map(x => x.cost);\n\n        const high = Math.max(...ordersCosts);\n        const low = Math.min(...ordersCosts);\n        const open =\n            index === 0 ? ordersCosts[0] : ordersGrouppedByDate[keys[index - 1]].at(-1)!.cost;\n        const close = ordersCosts[ordersCosts.length - 1];\n\n        return {\n            time: Number(x) as UTCTimestamp,\n            high,\n            low,\n            open,\n            close,\n        };\n    });\n};\n\n/**\n * Creates line data {@link LineData} array from orders, groupped by date.\n *\n * @param ordersGrouppedByDate Orders array.\n * @returns Array of line data.\n */\nconst getProofGenTimeData = <T extends Bid | Ask>(\n    ordersGrouppedByDate: Record<string, T[]>,\n): LineData[] => {\n    return Object.keys(ordersGrouppedByDate).map(x => {\n        const ordersEvalTime = ordersGrouppedByDate[x].map(x => x.eval_time);\n        const averageEvalTime = sum(ordersEvalTime) / ordersEvalTime.length;\n\n        return { time: Number(x) as UTCTimestamp, value: averageEvalTime };\n    });\n};\n\n/**\n * Generates volume data.\n *\n * @param ordersGrouppedByDate Orders array.\n * @returns Volume data.\n */\nconst getVolumesData = <T extends Bid | Ask>(\n    ordersGrouppedByDate: Record<string, T[]>,\n): Array<WhitespaceData | HistogramData> => {\n    const keys = Object.keys(ordersGrouppedByDate);\n\n    return keys.map((x, index) => {\n        const costs = ordersGrouppedByDate[x].map(x => x.cost);\n\n        const open = index === 0 ? costs[0] : ordersGrouppedByDate[keys[index - 1]].at(-1)!.cost;\n        const close = costs[costs.length - 1];\n\n        return {\n            time: Number(x) as UTCTimestamp,\n            value: ordersGrouppedByDate[x].length,\n            color: open < close ? colors.transparentSuccessColor : colors.transparentDangerColor,\n        };\n    });\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useEffect, useState } from 'react';\nimport {\n    IChartApi,\n    BarPrice,\n    BarPrices,\n    LineData,\n    CandlestickData,\n    MouseEventHandler,\n    DeepPartial,\n    CandlestickStyleOptions,\n    SeriesOptionsCommon,\n    LineStyleOptions,\n    Range,\n    SeriesMarker,\n    UTCTimestamp,\n    WhitespaceData,\n    HistogramData,\n    HistogramStyleOptions,\n} from 'lightweight-charts';\nimport { DateUnit } from 'src/enums';\nimport colors from 'src/styles/export.module.scss';\n\n/**\n * Return type.\n */\ntype UseRenderChartDataReturnType = {\n    /**\n     * Current price value (when user hovers chart).\n     */\n    price?: BarPrice | BarPrices;\n};\n\n/**\n * Hook parameters.\n */\ntype UseRenderChartDataProps<T extends 'Line' | 'Candlestick'> = {\n    seriesType: T;\n    seriesData: T extends 'Line' ? LineData[] : CandlestickData[];\n    chart?: IChartApi;\n    options?: DeepPartial<\n        (T extends 'Line' ? LineStyleOptions : CandlestickStyleOptions) & SeriesOptionsCommon\n    >;\n    visibleRange?: DateUnit;\n    markers?: SeriesMarker<UTCTimestamp>[];\n    volumes?: (WhitespaceData | HistogramData)[];\n};\n\n/**\n * Hook to manage rendering chart data.\n *\n * @param {UseRenderChartDataProps} parameters Parameters.\n * @returns Current price.\n */\nexport const useRenderChartData = <T extends 'Line' | 'Candlestick'>({\n    seriesType,\n    seriesData,\n    chart,\n    options,\n    visibleRange,\n    markers,\n    volumes,\n}: UseRenderChartDataProps<T>): UseRenderChartDataReturnType => {\n    const [price, setPrice] = useState<BarPrice | BarPrices>();\n\n    useEffect(() => {\n        if (!chart) {\n            return;\n        }\n\n        const addSeriesMethod =\n            seriesType === 'Line'\n                ? chart.addLineSeries.bind(chart, {\n                      ...seriesDefaultOptions,\n                      ...options,\n                  } as DeepPartial<LineStyleOptions & SeriesOptionsCommon>)\n                : chart.addCandlestickSeries.bind(chart, {\n                      ...seriesDefaultOptions,\n                      ...options,\n                  } as DeepPartial<CandlestickStyleOptions & SeriesOptionsCommon>);\n\n        const series = addSeriesMethod();\n        series.setData(seriesData);\n        markers && series.setMarkers(markers);\n\n        const volumeSeries = chart.addHistogramSeries(volumeSeriesDefaultOptions);\n        volumes && volumeSeries.setData(volumes);\n\n        const crosshairMoveHandler: MouseEventHandler = param => {\n            if (!param.time) {\n                setPrice(undefined);\n                return;\n            }\n\n            const price = param.seriesPrices.get(series);\n            price && setPrice(price);\n        };\n\n        chart.subscribeCrosshairMove(crosshairMoveHandler);\n\n        return () => {\n            chart.removeSeries(series);\n            chart.removeSeries(volumeSeries);\n            chart.unsubscribeCrosshairMove(crosshairMoveHandler);\n            setPrice(undefined);\n        };\n    }, [seriesData, chart, seriesType, options, markers, volumes]);\n\n    useEffect(() => {\n        if (!chart || !seriesData.length) {\n            return;\n        }\n\n        if (!visibleRange) {\n            chart.timeScale().fitContent();\n            return;\n        }\n\n        chart.timeScale().setVisibleLogicalRange(getDataRange(seriesData.length, visibleRange));\n    }, [chart, visibleRange, seriesData]);\n\n    return { price };\n};\n\n/**\n * Series default options.\n */\nconst seriesDefaultOptions: Partial<SeriesOptionsCommon> = {\n    priceFormat: {\n        type: 'price',\n        precision: 4,\n        minMove: 0.0001,\n    },\n};\n\n/**\n * Volume series default options.\n */\nconst volumeSeriesDefaultOptions: DeepPartial<HistogramStyleOptions & SeriesOptionsCommon> = {\n    color: colors.transparentBaseLightColor,\n    priceFormat: {\n        type: 'volume',\n    },\n    priceScaleId: '',\n    scaleMargins: {\n        top: 0.8,\n        bottom: 0,\n    },\n};\n\n/**\n * Creates chart data Range {@link Range} object, subtracting distance from provided right edge date.\n *\n * @param rightEdge Last date in range.\n * @param visibleRange Visible range.\n * @returns Range.\n */\nconst getDataRange = (rightEdge: number, visibleRange: DateUnit): Range<number> => {\n    let distance = 0;\n\n    switch (visibleRange) {\n        case DateUnit.minute:\n            distance = 60;\n            break;\n        case DateUnit.hour:\n            distance = 24;\n            break;\n        case DateUnit.day:\n        case DateUnit.quaterMinute:\n        case DateUnit.halfHour:\n            distance = 30;\n    }\n\n    return {\n        from: rightEdge - distance,\n        to: rightEdge,\n    };\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { SortByFn } from 'react-table';\nimport { dequal as deepEqual } from 'dequal';\nimport sum from 'lodash/sum';\nimport {\n    Ask,\n    Bid,\n    CostAndEvalTime,\n    LastOrderData,\n    OrderBookTableColumn,\n    OrderBookTableData,\n} from 'src/models';\nimport {\n    selectBidsList,\n    selectAsksList,\n    useAppSelector,\n    selectCurrentUserAsks,\n    selectCurrentUserBids,\n} from 'src/redux';\n\n/**\n * Hook return type.\n */\nexport type UseGetOrderBookDataReturnType = {\n    columns: OrderBookTableColumn[];\n    data: OrderBookTableData[];\n    loadingData: boolean;\n    isError: boolean;\n    lastOrderData?: LastOrderData;\n    maxVolume: number;\n};\n\n/**\n * Groupped orders map.\n */\ntype GrouppedOrdersMap = Map<string, Array<Bid | Ask>>;\n\n/**\n * Hook to get order book data structured for rendering table.\n *\n * @param itemsLimit - Max count of orderBook items of one type (itemsLimit * 2 overall).\n * @returns Data to render order book table.\n */\nexport const useGetOrderBookData = (itemsLimit = 25): UseGetOrderBookDataReturnType => {\n    const loadingData = useAppSelector(s => s.bidsState.isLoading || s.asksState.isLoading);\n    const asks = useSelector(selectAsksList, deepEqual);\n    const bids = useSelector(selectBidsList, deepEqual);\n    const userAsks = useSelector(selectCurrentUserAsks, deepEqual);\n    const userBids = useSelector(selectCurrentUserBids, deepEqual);\n    const isError = useAppSelector(s => s.asksState.error || s.bidsState.error);\n\n    const lastOrderData: LastOrderData = useMemo(() => getLastOrderData(asks), [asks]);\n\n    const columns = useMemo(\n        (): OrderBookTableColumn[] => [\n            {\n                Header: 'Orders',\n                accessor: 'ordersAmount',\n                disableSortBy: true,\n            },\n            {\n                Header: 'Cost',\n                accessor: 'cost',\n                sortType: customSortFunction,\n                sortDescFirst: true,\n            },\n            {\n                Header: 'Generation time',\n                accessor: 'eval_time',\n                sortType: customSortFunction,\n                sortDescFirst: true,\n            },\n            {\n                accessor: 'type',\n            },\n            {\n                accessor: 'userOrdersAmount',\n            },\n        ],\n        [],\n    );\n\n    const asksData = useMemo(() => {\n        return createOrderBookData(\n            asks\n                .filter(x => x.status === 'created')\n                .reduce(reduceOrdersByCostAndEvalTime, new Map()),\n            'ask',\n            userAsks,\n        ).slice(-itemsLimit);\n    }, [asks, userAsks, itemsLimit]);\n\n    const bidsData = useMemo(() => {\n        return createOrderBookData(\n            bids\n                .filter(x => x.status === 'created')\n                .reduce(reduceOrdersByCostAndEvalTime, new Map()),\n            'bid',\n            userBids,\n        ).slice(0, itemsLimit);\n    }, [bids, userBids, itemsLimit]);\n\n    const data = useMemo(\n        (): OrderBookTableData[] => asksData.concat(bidsData),\n        [asksData, bidsData],\n    );\n\n    const maxVolume = useMemo(\n        () =>\n            Math.max(\n                sum(asksData.map(x => x.ordersAmount)) ?? 0,\n                sum(bidsData.map(x => x.ordersAmount)) ?? 0,\n            ),\n        [asksData, bidsData],\n    );\n\n    return { columns, data, loadingData, isError, lastOrderData, maxVolume };\n};\n\n/**\n * Map groupped trade orders to order book data.\n *\n * @param grouppedOrders Trade orders.\n * @param orderType Bid or Ask.\n * @param userOrders - Orders, created by user.\n * @returns Order book data.\n */\nconst createOrderBookData = <T extends Bid | Ask>(\n    grouppedOrders: GrouppedOrdersMap,\n    orderType: 'bid' | 'ask',\n    userOrders: T[],\n): OrderBookTableData[] => {\n    const result: OrderBookTableData[] = [];\n\n    grouppedOrders.forEach((value, key) => {\n        const parsedKey: CostAndEvalTime = JSON.parse(key);\n\n        result.push({\n            cost: parsedKey?.cost,\n            eval_time: parsedKey?.eval_time,\n            ordersAmount: value.length,\n            type: orderType,\n            userOrdersAmount: value.filter(x => userOrders.some(y => y.id === x.id)).length,\n        });\n    });\n\n    return result;\n};\n\n/**\n * Takes orders array and returns dict, where keys are costs, and values are arrays of orders.\n *\n * @param previousValue Initial value.\n * @param currentValue Current value.\n * @returns Orders, grouped by date.\n */\nconst reduceOrdersByCostAndEvalTime = <T extends Bid | Ask>(\n    previousValue: GrouppedOrdersMap,\n    currentValue: T,\n) => {\n    const mapKey = JSON.stringify({\n        cost: currentValue.cost,\n        eval_time: currentValue.eval_time,\n    });\n\n    const value = previousValue.get(mapKey);\n\n    if (!value) {\n        previousValue.set(mapKey, [currentValue]);\n    } else {\n        previousValue.set(mapKey, [...value, currentValue]);\n    }\n\n    return previousValue;\n};\n\n/**\n * Counts current price value and price changing direction.\n *\n * @param currentAsks Current ask list.\n * @see {CurrentPrice}\n * @returns Current price.\n */\nconst getLastOrderData = (currentAsks: Ask[]): LastOrderData => {\n    const completedAsks = currentAsks.filter(x => x.status === 'completed');\n\n    const latestCost = completedAsks.at(-1)?.cost;\n    const prevCost = completedAsks.at(-2)?.cost;\n\n    const getType = () => (latestCost! > prevCost! ? 'grow' : 'loss');\n    const type = latestCost && prevCost ? getType() : undefined;\n\n    return {\n        cost: latestCost,\n        eval_time: completedAsks.at(-1)?.eval_time,\n        type,\n    };\n};\n\n/**\n * Creates react table sort by provided field fucntion.\n *\n * @param firstRow First row.\n * @param  secondRow Second row.\n * @param columnId Sorted column id.\n * @returns Sort function.\n */\nconst customSortFunction: SortByFn<OrderBookTableData> = (firstRow, secondRow, columnId) => {\n    const firstValue = firstRow.values[columnId];\n    const secondValue = secondRow.values[columnId];\n\n    if (firstValue === secondValue) {\n        return 0;\n    }\n\n    return firstValue - secondValue > 0 ? -1 : 1;\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { dequal as deepEqual } from 'dequal';\nimport { useAppSelector, selectCompletedAsks } from 'src/redux';\nimport { Ask, TradeHistoryData, TradeHistoryTableColumn, TradeOrderChange } from 'src/models';\nimport { formatDate } from 'src/utils';\n\n/**\n * UseGetTradeHistoryData hook return type.\n */\nexport type UseGetTradeHistoryDataReturnType = {\n    data: TradeHistoryData[];\n    columns: TradeHistoryTableColumn[];\n    loadingData: boolean;\n    isError: boolean;\n};\n\n/**\n * Get data to render trade history table.\n *\n * @param itemsLimit - Limit items to display.\n * @returns Data to render trade history table.\n */\nexport const useGetTradeHistoryData = (itemsLimit = 25): UseGetTradeHistoryDataReturnType => {\n    const loadingData = useAppSelector(s => s.circuitsState.isLoading || s.asksState.isLoading);\n    const asks = useSelector(selectCompletedAsks, deepEqual);\n    const isError = useAppSelector(s => s.asksState.error || s.bidsState.error);\n\n    const columns = useMemo(\n        (): TradeHistoryTableColumn[] => [\n            {\n                Header: 'Time',\n                accessor: 'timestamp',\n            },\n            {\n                Header: 'Cost',\n                accessor: 'cost',\n                disableSortBy: true,\n            },\n            {\n                Header: 'Generation time',\n                accessor: 'eval_time',\n                disableSortBy: true,\n            },\n            {\n                accessor: 'type',\n            },\n        ],\n        [],\n    );\n\n    const data = useMemo(\n        () => asks.map(mapToTradeHistoryData).slice(-itemsLimit),\n        [asks, itemsLimit],\n    );\n\n    return { data, columns, loadingData, isError };\n};\n\n/**\n * Maps asks list to trade history table data list.\n *\n * @param {Ask} ask - Current ask.\n * @param i Current index.\n * @param asks Asks array.\n * @returns Trade history table data list.\n */\nconst mapToTradeHistoryData = (\n    { timestamp, cost, eval_time }: Ask,\n    i: number,\n    asks: Ask[],\n): TradeHistoryData => ({\n    timestamp: formatDate(timestamp!, 'DD.MM HH:mm'),\n    cost,\n    eval_time,\n    type: i !== 0 ? getType(asks.at(i - 1)!.cost, cost) : undefined,\n});\n\n/**\n * Returns trade order change type.\n *\n * @param costA Prev cost.\n * @param costB Current cost.\n * @returns Trade order type.\n */\nconst getType = (costA: number, costB: number): TradeOrderChange => {\n    if (costA === costB) {\n        return undefined;\n    }\n\n    return costA > costB ? 'loss' : 'grow';\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { dequal as deepEqual } from 'dequal';\nimport {\n    useAppSelector,\n    selectCurrentUserCreatedBids,\n    selectCurrentUserCompletedBids,\n    selectCurrentUserActiveAsks,\n    selectCurrentUserCompletedAsks,\n} from 'src/redux';\nimport { Ask, Bid, ManageOrdersData, TradeOrderType } from 'src/models';\nimport { formatDate } from 'src/utils';\n\n/**\n * UseGetManageOrdersData hook return type.\n */\nexport type UseGetManageOrdersDataReturnType = {\n    loadingData: boolean;\n    isError: boolean;\n    activeOrdersData: ManageOrdersData[];\n    historyOrdersData: ManageOrdersData[];\n};\n\n/**\n * Get data to render manage orders panel.\n *\n * @returns Data to render manage orders panel.\n */\nexport const useGetManageOrdersData = (): UseGetManageOrdersDataReturnType => {\n    const loadingData = useAppSelector(s => s.bidsState.isLoading || s.asksState.isLoading);\n    const createdBids = useSelector(selectCurrentUserCreatedBids, deepEqual);\n    const completedBids = useSelector(selectCurrentUserCompletedBids, deepEqual);\n    const createdAsks = useSelector(selectCurrentUserActiveAsks, deepEqual);\n    const completedAsks = useSelector(selectCurrentUserCompletedAsks, deepEqual);\n    const isError = useAppSelector(s => s.asksState.error || s.bidsState.error);\n\n    const activeOrdersData = useMemo(() => {\n        const mappedAsks = createdAsks.map(x => mapToManageOrdersData(x, TradeOrderType.sell));\n        const mappedBids = createdBids.map(x => mapToManageOrdersData(x, TradeOrderType.buy));\n\n        return [...mappedAsks, ...mappedBids];\n    }, [createdAsks, createdBids]);\n\n    const historyOrdersData = useMemo(() => {\n        const mappedAsks = completedAsks.map(x => mapToManageOrdersData(x, TradeOrderType.sell));\n        const mappedBids = completedBids.map(x => mapToManageOrdersData(x, TradeOrderType.buy));\n\n        return [...mappedAsks, ...mappedBids];\n    }, [completedAsks, completedBids]);\n\n    return { loadingData, isError, activeOrdersData, historyOrdersData };\n};\n\n/**\n * Maps trade orders list to manage orders table data list.\n *\n * @param {Ask | Bid} order - Current order.\n * @param type Type.\n * @returns Manage orders table data list.\n */\nconst mapToManageOrdersData = <T extends Ask | Bid>(\n    { init_time, timestamp, cost, eval_time, id, status }: T,\n    type: TradeOrderType,\n): ManageOrdersData => ({\n    init_time: formatDate(init_time, 'DD.MM HH:mm'),\n    timestamp: formatDate(timestamp!, 'DD.MM HH:mm'),\n    cost,\n    eval_time,\n    type,\n    orderId: id,\n    status,\n});\n","/**\n * @file Enum declaration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Detailed info tab.\n */\nexport enum DetailedInfoTab {\n    info = 'Circuit info',\n    stats = 'Statistics',\n}\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n *\n * Credits to https://usehooks.com/useLocalStorage/\n */\n\nimport { useCallback, useState } from 'react';\nimport { dequal as deepEqual } from 'dequal';\nimport { getItemFromLocalStorage, setItemIntoLocalStorage } from 'src/packages/LocalStorage';\n\n/**\n * Hook to use localStorage in a useState() hook way.\n *\n * @param key LocalStorage key.\n * @param initialValue Inital value. Used when localStorage is empty.\n * @returns Persisited state.\n */\nexport const useLocalStorage = <T extends unknown>(\n    key: string,\n    initialValue: T,\n): [T, (value: T) => void] => {\n    const [storedValue, setStoredValue] = useState<T>(\n        () => getItemFromLocalStorage(key) || initialValue,\n    );\n\n    const setValue = useCallback(\n        (value: T) => {\n            if (deepEqual(storedValue, value)) {\n                return;\n            }\n\n            setStoredValue(value);\n            setItemIntoLocalStorage(key, value);\n        },\n        [key, storedValue],\n    );\n\n    return [storedValue, setValue];\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Dropdown } from '@nilfoundation/react-components';\nimport { navigationLinks } from '../../../constants';\nimport styles from './MobileMenu.module.scss';\n\n/**\n * Mobile menu.\n *\n * @returns React component.\n */\nexport const MobileMenu = (): ReactElement => {\n    return (\n        <Dropdown className={styles.menu}>\n            <Dropdown.Button\n                className={styles.button}\n                iconNameDropdownClosed=\"fa fa-bars\"\n                iconNameDropdownOpend=\"fa fa-times\"\n            />\n            <Dropdown.Menu align=\"right\">\n                {navigationLinks.map(({ title, path }) => (\n                    <Dropdown.Item\n                        href={path}\n                        key={title}\n                    >\n                        {title}\n                    </Dropdown.Item>\n                ))}\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n","/**\n * @file React functional component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode } from 'react';\nimport { Jumbotron } from '@nilfoundation/react-components';\nimport styles from './AuthCard.module.scss';\n\n/**\n * Props.\n */\ntype AuthCardProps = {\n    children: ReactNode;\n};\n\n/**\n * Auth card template.\n *\n * @param {AuthCardProps} props - Props.\n * @returns React component.\n */\nexport const AuthCard = ({ children }: AuthCardProps): ReactElement => {\n    return <Jumbotron className={styles.authCard}>{children}</Jumbotron>;\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useRef, useState, useEffect } from 'react';\nimport {\n    Image,\n    InputGroup,\n    Icon,\n    Input,\n    Size,\n    Button,\n    Variant,\n    Form,\n    Spinner,\n} from '@nilfoundation/react-components';\nimport { CSSTransition } from 'react-transition-group';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { Path } from 'src/routing';\nimport { LoginData } from 'src/models';\nimport { login } from 'src/api';\nimport { useLogin } from 'src/hooks';\nimport { AuthCard } from '../AuthCard';\nimport styles from './LoginForm.module.scss';\n\n/**\n * Password input type.\n */\ntype PwdInputType = 'password' | 'text';\n\n/**\n * Login form.\n *\n * @returns React component.\n */\nexport const LoginForm = (): ReactElement => {\n    const nodeRef = useRef(null);\n    const userNameInputRef = useRef<HTMLInputElement | null>(null);\n    const processLogin = useLogin();\n    const [errorMessage, setErrorMessage] = useState<string>();\n    const [pwdInputType, setPwdInputType] = useState<PwdInputType>('password');\n    const pwdInputIconName = pwdInputType === 'password' ? 'fa-eye-slash' : 'fa-eye';\n    const switchPwdInputType = () =>\n        setPwdInputType(pwdInputType === 'password' ? 'text' : 'password');\n\n    const {\n        register,\n        formState: { isSubmitting, isValid, errors },\n        handleSubmit,\n    } = useForm<LoginData>({\n        mode: 'onChange',\n    });\n\n    const onSubmitLogin = handleSubmit(async (data: LoginData): Promise<void> => {\n        setErrorMessage('');\n        try {\n            const { jwt } = await login(data);\n            processLogin(jwt);\n        } catch (e) {\n            setErrorMessage('Login error');\n        }\n    });\n\n    useEffect(() => {\n        userNameInputRef.current && userNameInputRef.current.focus();\n    }, []);\n\n    const { ref, ...restRegister } = register('username', { required: true });\n\n    return (\n        <AuthCard>\n            <Image\n                source={`${process.env.PUBLIC_URL}/logo512x384.png`}\n                alt=\"=nil; Foundation logo\"\n                responsive\n                rounded\n                className={styles.logoImage}\n            />\n            <Form>\n                <Form.Group hasError={!!errors['username']}>\n                    <InputGroup\n                        size={Size.lg}\n                        className={styles.control}\n                    >\n                        <InputGroup.Addon>\n                            <Icon\n                                iconName=\"fa-solid fa-user\"\n                                className={styles.icon}\n                            />\n                        </InputGroup.Addon>\n                        <Input\n                            type=\"text\"\n                            id=\"userName\"\n                            placeholder=\"username\"\n                            aria-label=\"username\"\n                            {...restRegister}\n                            ref={e => {\n                                ref(e);\n                                userNameInputRef.current = e;\n                            }}\n                        />\n                    </InputGroup>\n                </Form.Group>\n                <Form.Group hasError={!!errors['password']}>\n                    <InputGroup\n                        size={Size.lg}\n                        className={styles.control}\n                    >\n                        <InputGroup.Addon>\n                            <Icon\n                                iconName=\"fa-solid fa-lock\"\n                                className={styles.icon}\n                            />\n                        </InputGroup.Addon>\n                        <Input\n                            type={pwdInputType}\n                            id=\"password\"\n                            aria-label=\"password\"\n                            placeholder=\"password\"\n                            autoComplete=\"off\"\n                            {...register('password')}\n                        />\n                        <InputGroup.Buttons>\n                            <Button onClick={switchPwdInputType}>\n                                <Icon\n                                    iconName={`fa-solid ${pwdInputIconName}`}\n                                    className={styles.icon}\n                                />\n                            </Button>\n                        </InputGroup.Buttons>\n                    </InputGroup>\n                </Form.Group>\n                <Button\n                    block\n                    variant={Variant.success}\n                    size={Size.lg}\n                    onClick={onSubmitLogin}\n                    disabled={!isValid || isSubmitting}\n                >\n                    Login\n                    {isSubmitting && <Spinner />}\n                </Button>\n                <CSSTransition\n                    classNames=\"fade\"\n                    timeout={300}\n                    in={!!errorMessage}\n                    unmountOnExit\n                    nodeRef={nodeRef}\n                >\n                    <div\n                        ref={nodeRef}\n                        className=\"errorMessage\"\n                    >\n                        {errorMessage}\n                    </div>\n                </CSSTransition>\n                <div className=\"text-right\">\n                    <h5>\n                        <span className=\"text-muted\">{\"Don't have an account? \"}</span>\n                        <Link to={Path.register}>Request credentials</Link>\n                    </h5>\n                </div>\n            </Form>\n        </AuthCard>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode } from 'react';\nimport { Copyright, FullScreenView } from 'src/components';\nimport styles from './AuthContainer.module.scss';\n\n/**\n * Props.\n */\ntype AuthContainerProps = {\n    children: ReactNode;\n};\n\n/**\n * Auth container.\n *\n * @param {AuthContainerProps} props Props.\n * @returns React component.\n */\nexport const AuthContainer = ({ children }: AuthContainerProps): ReactElement => {\n    return (\n        <FullScreenView\n            showFullScreen\n            className={styles.loginContainer}\n        >\n            {children}\n            <div className={styles.copyright}>\n                <Copyright />\n            </div>\n        </FullScreenView>\n    );\n};\n","/**\n * @file React functional component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { Path } from 'src/routing';\nimport { useAuth } from 'src/hooks';\n\n/**\n * Props.\n */\ntype ProtectedRouteProps = {\n    children: ReactNode;\n};\n\n/**\n * Component to restrict non-authorized users access.\n *\n * @param {ProtectedRouteProps} props - Props.\n * @returns React component.\n */\nexport const ProtectedRoute = ({ children }: ProtectedRouteProps): ReactElement => {\n    const { isAuthentificated } = useAuth();\n\n    return (\n        <>\n            {isAuthentificated ? (\n                children\n            ) : (\n                <Navigate\n                    replace\n                    to={Path.login}\n                />\n            )}\n        </>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useRef, useState, useEffect } from 'react';\nimport {\n    InputGroup,\n    Icon,\n    Input,\n    Size,\n    Button,\n    Variant,\n    Form,\n    Spinner,\n} from '@nilfoundation/react-components';\nimport { CSSTransition } from 'react-transition-group';\nimport axios from 'axios';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { RegisterData } from 'src/models';\nimport { Path } from 'src/routing';\nimport { SocialLinks } from 'src/components/common';\nimport { emailRegExp } from 'src/utils';\nimport { AuthCard } from '../AuthCard';\nimport styles from './RegisterForm.module.scss';\n\n/**\n * Register form.\n *\n * @returns React component.\n */\nexport const RegisterForm = (): ReactElement => {\n    const nodeRef = useRef(null);\n    const emailInputRef = useRef<HTMLInputElement | null>(null);\n    const [errorMessage, setErrorMessage] = useState<string>();\n\n    const {\n        register,\n        formState: { isSubmitting, isValid, errors, isSubmitSuccessful },\n        handleSubmit,\n        reset,\n    } = useForm<RegisterData>({\n        mode: 'onChange',\n        defaultValues: {\n            to: process.env.REACT_APP_SITE_EMAIL,\n        },\n    });\n\n    const onSubmitLogin = handleSubmit(async (data: RegisterData): Promise<void> => {\n        setErrorMessage('');\n\n        await axios\n            .post(`${process.env.PUBLIC_URL}/contact/contact_me.php`, data)\n            .then(response => {\n                if (response.status >= 200 && response.status <= 399) {\n                    reset();\n\n                    return response;\n                } else {\n                    throw Error(response.statusText);\n                }\n            })\n            .catch(() => setErrorMessage('Error while processing form.'));\n    });\n\n    useEffect(() => {\n        emailInputRef.current && emailInputRef.current.focus();\n    }, []);\n\n    const { ref, ...restRegister } = register('email', { required: true, pattern: emailRegExp });\n\n    return (\n        <AuthCard>\n            <Form className={styles.form}>\n                <h4 className={styles.title}>Request your beta-test credentials via email</h4>\n                <div className={`${styles.description} text-muted`}>\n                    If you would like to get involved early, leave email below and we will let you\n                    know when proof market opens!\n                </div>\n                <Form.Group hasError={!!errors['email']}>\n                    <InputGroup\n                        size={Size.lg}\n                        className={styles.control}\n                    >\n                        <InputGroup.Addon>\n                            <Icon iconName=\"fa-solid fa-at\" />\n                        </InputGroup.Addon>\n                        <Input\n                            type=\"email\"\n                            id=\"email\"\n                            aria-label=\"email\"\n                            placeholder=\"your email\"\n                            autoComplete=\"off\"\n                            {...restRegister}\n                            ref={e => {\n                                ref(e);\n                                emailInputRef.current = e;\n                            }}\n                        />\n                    </InputGroup>\n                </Form.Group>\n                <Button\n                    block\n                    variant={Variant.success}\n                    size={Size.lg}\n                    onClick={onSubmitLogin}\n                    disabled={!isValid || isSubmitting}\n                >\n                    Submit\n                    {isSubmitting && <Spinner />}\n                </Button>\n                <CSSTransition\n                    classNames=\"fade\"\n                    timeout={300}\n                    in={!!errorMessage}\n                    unmountOnExit\n                    nodeRef={nodeRef}\n                >\n                    <div\n                        ref={nodeRef}\n                        className=\"errorMessage\"\n                    >\n                        {errorMessage}\n                    </div>\n                </CSSTransition>\n                {isSubmitSuccessful && !errorMessage && <div>Thanks for registration!</div>}\n                <div className={styles.social}>\n                    <h5 className={styles.title}>\n                        {\n                            \"Join our Discord's proof-market channel/Telegram for questions/to stay updated\"\n                        }\n                    </h5>\n                    <SocialLinks />\n                </div>\n                <div className={styles.successMessage}>\n                    <Link to={Path.root}>Continue exploring</Link>\n                </div>\n                <div className=\"text-right\">\n                    <h5>\n                        <span className=\"text-muted\">{'Already have an account? '}</span>\n                        <Link to={Path.login}>Sign in</Link>\n                    </h5>\n                </div>\n            </Form>\n        </AuthCard>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode, useEffect, useState } from 'react';\nimport { login } from 'src/api';\nimport { useAuth, useLogin } from 'src/hooks';\n\n/**\n * Props.\n */\ntype ReadonlyAccessProviderProps = {\n    children?: ReactNode;\n    fallback?: ReactNode;\n    errorView?: ReactNode;\n};\n\n/**\n * Provider automatic auth with readonly user.\n *\n * @param {ReadonlyAccessProviderProps} props Props.\n * @returns React component.\n */\nexport const ReadonlyAccessProvider = ({\n    children,\n    fallback,\n    errorView,\n}: ReadonlyAccessProviderProps): ReactElement => {\n    const [error, setError] = useState(false);\n    const processLogin = useLogin();\n    const { isAuthentificated } = useAuth();\n\n    useEffect(() => {\n        const readonlyUser = process.env.REACT_APP_READONLY_USER;\n\n        const loginWithReadonly = async (user: string) => {\n            try {\n                const { jwt } = await login({\n                    username: user,\n                    password: '',\n                });\n\n                processLogin(jwt);\n            } catch (e) {\n                setError(true);\n            }\n        };\n\n        !isAuthentificated && loginWithReadonly(readonlyUser!);\n    }, [processLogin, isAuthentificated]);\n\n    if (error) {\n        return <>{errorView}</>;\n    }\n\n    return <>{isAuthentificated ? children : fallback ?? null}</>;\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Button, Dropdown, Icon } from '@nilfoundation/react-components';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth, useLogout } from 'src/hooks';\nimport { Path } from 'src/routing';\nimport styles from './UserMenu.module.scss';\n\n/**\n * User menu.\n *\n * @returns React component.\n */\nexport const UserMenu = (): ReactElement => {\n    const { user, isReadonly } = useAuth();\n    const processLogout = useLogout();\n    const navigate = useNavigate();\n\n    if (!user || isReadonly) {\n        return (\n            <Button\n                className={styles.button}\n                onClick={() => navigate(Path.login)}\n            >\n                <Icon iconName=\"fa-solid fa-circle-user\" />\n                Sign In\n            </Button>\n        );\n    }\n\n    return (\n        <Dropdown className={styles.dropdown}>\n            <Dropdown.Button className={styles.button}>\n                <Icon iconName=\"fa-solid fa-circle-user\" />\n                {user}\n            </Dropdown.Button>\n            <Dropdown.Menu align=\"right\">\n                <Dropdown.Item onSelect={processLogout}>Logout</Dropdown.Item>\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n","/**\n * @file React functional component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, Size, Variant } from '@nilfoundation/react-components';\nimport { Path } from 'src/routing';\nimport { useAuth } from 'src/hooks';\nimport { Overlay } from 'src/components/common';\nimport styles from './ProtectedContent.module.scss';\n\n/**\n * Props.\n */\ntype ProtectedComponentProps = {\n    children: ReactNode;\n    overlayTitle?: string;\n    overlayButtonText?: string;\n};\n\n/**\n * Component to restrict non-authorized and readonly users access.\n * Renders an overlay with a link to login page.\n *\n * Consider to add position: relative to parent container.\n *\n * @param {ProtectedComponentProps} props - Props.\n * @returns React component.\n */\nexport const ProtectedContent = ({\n    children,\n    overlayTitle,\n    overlayButtonText = 'Sign in',\n}: ProtectedComponentProps): ReactElement => {\n    const { isAuthentificated, isReadonly } = useAuth();\n    const navigate = useNavigate();\n\n    return (\n        <>\n            {(!isAuthentificated || isReadonly) && (\n                <Overlay>\n                    <div className={styles.container}>\n                        {overlayTitle && <h4 className=\"text-center\">{overlayTitle}</h4>}\n                        <Button\n                            variant={Variant.success}\n                            size={Size.lg}\n                            onClick={() => navigate(Path.login)}\n                        >\n                            {overlayButtonText}\n                        </Button>\n                    </div>\n                </Overlay>\n            )}\n            {children}\n        </>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { Breadcrumbs as NativeBreadcrumbs } from '@nilfoundation/react-components';\nimport { Link } from 'react-router-dom';\nimport { mainSiteAddress } from 'src/constants';\nimport { Path } from 'src/routing';\nimport styles from './Breadcrumbs.module.scss';\n\n/**\n * Breadcrumbs component.\n *\n * @returns React component.\n */\nexport const Breadcrumbs = (): JSX.Element => {\n    return (\n        <NativeBreadcrumbs className={styles.breadcrumbs}>\n            <NativeBreadcrumbs.Item\n                href={mainSiteAddress}\n                className={styles.item}\n            >\n                <span>\n                    <code>=nil;</code>Foundation\n                </span>\n            </NativeBreadcrumbs.Item>\n            <NativeBreadcrumbs.Item\n                className={styles.item}\n                renderLink={() => (\n                    <Link to={Path.root}>\n                        <span>Proof Market</span>\n                    </Link>\n                )}\n            />\n        </NativeBreadcrumbs>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Container, Navbar, Nav } from '@nilfoundation/react-components';\nimport { Link, useLocation } from 'react-router-dom';\nimport { navigationLinks } from 'src/constants';\nimport { useAuth } from 'src/hooks';\nimport { Path } from 'src/routing';\nimport { MobileMenu } from '../MobileMenu';\nimport { UserMenu } from '../../login';\nimport { Breadcrumbs } from '../BreadCrumbs';\nimport styles from './Header.module.scss';\n\n/**\n * Header.\n *\n * @returns React component.\n */\nexport const Header = (): ReactElement => {\n    const { pathname } = useLocation();\n    const { isReadonly } = useAuth();\n\n    return (\n        <Navbar className={styles.navbar}>\n            <Container\n                className={styles.container}\n                fluid\n            >\n                <Breadcrumbs />\n                <Nav className={styles.nav}>\n                    {navigationLinks.map(({ title, path }) => (\n                        <Nav.Item\n                            key={title}\n                            active={pathname === path}\n                            renderLink={({ active: _, ...props }) => (\n                                <Link\n                                    to={path === Path.portfolio && isReadonly ? Path.login : path}\n                                    {...props}\n                                >\n                                    <span>{title}</span>\n                                </Link>\n                            )}\n                        />\n                    ))}\n                </Nav>\n                <UserMenu />\n                <MobileMenu />\n            </Container>\n        </Navbar>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport {\n    KeyboardEventHandler,\n    ReactElement,\n    ReactNode,\n    useState,\n    Children,\n    isValidElement,\n    cloneElement,\n} from 'react';\nimport { Icon } from '@nilfoundation/react-components';\nimport styles from './Details.module.scss';\n\n/**\n * Props.\n */\ntype DetailsProps = {\n    children: ReactNode;\n    title: ReactNode;\n    defaultOpen?: boolean;\n    bottomIndent?: boolean;\n    unmountOnClose?: boolean;\n    disabled?: boolean;\n};\n\n/**\n * Details.\n *\n * @param {DetailsProps} props Props.\n * @returns React component.\n */\nexport const Details = ({\n    children,\n    title,\n    defaultOpen = true,\n    bottomIndent = true,\n    unmountOnClose = false,\n    disabled = false,\n}: DetailsProps): ReactElement => {\n    const [isOpen, setIsOpen] = useState(defaultOpen);\n    const toggleIsOpen = () => setIsOpen(!isOpen);\n\n    const onKeyDownHandler: KeyboardEventHandler = e => {\n        if (e.key !== 'Enter' && e.key !== ' ') {\n            return;\n        }\n\n        !disabled && toggleIsOpen();\n    };\n\n    const iconClassName = `fa-solid fa-angle-${isOpen ? 'up' : 'down'} ${\n        disabled ? 'text-muted' : ''\n    }`;\n\n    return (\n        <>\n            <div\n                className={`${styles.title} ${bottomIndent ? styles.bottomIndent : ''}`}\n                onClick={toggleIsOpen}\n                onKeyDown={onKeyDownHandler}\n                role=\"button\"\n                tabIndex={0}\n            >\n                {title}\n                <Icon iconName={iconClassName} />\n            </div>\n            <>\n                {(!unmountOnClose || isOpen) &&\n                    Children.map(children, child => {\n                        if (isValidElement(child)) {\n                            const props = {\n                                className: `${child.props.className} ${!isOpen ? ' hidden' : ''}`,\n                            };\n\n                            return cloneElement(child, props);\n                        }\n\n                        return child;\n                    })}\n            </>\n        </>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode } from 'react';\nimport { Jumbotron } from '@nilfoundation/react-components';\nimport styles from './DashboardCard.module.scss';\n\n/**\n * Props.\n */\ntype DashboardCardProps = {\n    children: ReactNode;\n    className?: string;\n};\n\n/**\n * Dashboard card.\n *\n * @param {DashboardCardProps} props - Props.\n * @returns React component.\n */\nexport const DashboardCard = ({ children, className }: DashboardCardProps): ReactElement => {\n    return (\n        <Jumbotron className={`${styles.dashboardCard} ${className ?? ''}`}>{children}</Jumbotron>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { DetailedHTMLProps, HTMLAttributes, ReactElement } from 'react';\nimport styles from './Table.module.scss';\n\n/**\n * Props.\n */\ntype TableProps = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n\n/**\n * Table.\n *\n * @param {TableProps} props Props.\n * @returns React component.\n */\nexport const Table = ({ className, children, ...rest }: TableProps): ReactElement => {\n    return (\n        <div\n            role=\"table\"\n            className={`${styles.table} ${className ?? ''}`}\n            {...rest}\n        >\n            {children}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { DetailedHTMLProps, HTMLAttributes, ReactElement } from 'react';\n\n/**\n * Props.\n */\ntype TBodyProps = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n\n/**\n * Table body.\n *\n * @param {TBodyProps} props Props.\n * @returns React component.\n */\nexport const TBody = ({ children, className, ...rest }: TBodyProps): ReactElement => {\n    return (\n        <div\n            role=\"rowgroup\"\n            className={`tableBody ${className ?? ''}`}\n            {...rest}\n        >\n            {children}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { DetailedHTMLProps, HTMLAttributes, ReactElement } from 'react';\n\n/**\n * Props.\n */\ntype TCellProps = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n\n/**\n * Table cell.\n *\n * @param {TCellProps} props Props.\n * @returns React component.\n */\nexport const TCell = ({ children, ...rest }: TCellProps): ReactElement => {\n    return (\n        <div\n            role=\"cell\"\n            {...rest}\n        >\n            {children}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { DetailedHTMLProps, HTMLAttributes, ReactElement } from 'react';\nimport clsx from 'clsx';\nimport styles from './Table.module.scss';\n\n/**\n * Props.\n */\ntype THeadProps = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement> & {\n    sticky?: boolean;\n    isFooterHeader?: boolean;\n};\n\n/**\n * Table head.\n *\n * @param {THeadProps} props Props.\n * @returns React component.\n */\nexport const THead = ({\n    sticky,\n    className,\n    children,\n    isFooterHeader,\n    ...rest\n}: THeadProps): ReactElement => {\n    const tHeadClassName = clsx(\n        styles.tableHead,\n        className,\n        sticky && styles.stickyHead,\n        isFooterHeader && styles.footerHead,\n    );\n\n    return (\n        <div\n            role=\"rowgroup\"\n            className={tHeadClassName}\n            {...rest}\n        >\n            {children}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { DetailedHTMLProps, HTMLAttributes, ReactElement } from 'react';\n\n/**\n * Props.\n */\ntype THeaderProps = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement> & {\n    sticky?: boolean;\n};\n\n/**\n * Table column header.\n *\n * @param {THeaderProps} props Props.\n * @returns React component.\n */\nexport const THeader = ({ children, ...rest }: THeaderProps): ReactElement => {\n    return (\n        <div\n            role=\"columnheader\"\n            {...rest}\n        >\n            {children}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { DetailedHTMLProps, HTMLAttributes, ReactElement } from 'react';\n\n/**\n * Props.\n */\ntype TRowProps = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n\n/**\n * Table row.\n *\n * @param {TRowProps} props Props.\n * @returns React component.\n */\nexport const TRow = ({ children, ...rest }: TRowProps): ReactElement => {\n    return (\n        <div\n            role=\"row\"\n            {...rest}\n        >\n            {children}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { KeyboardEventHandler, ReactElement, useLayoutEffect, useMemo } from 'react';\nimport { Icon } from '@nilfoundation/react-components';\nimport { ColumnInstance } from 'react-table';\nimport { THeader } from '../Table';\nimport styles from './ReactTable.module.scss';\n\n/**\n * Props.\n */\ntype ReactTableHeaderProps<T extends Record<string, unknown>> = {\n    column: ColumnInstance<T>;\n    // TODO - refactor after upgrading to react-table@v8\n    onlySortBy?: 'asc' | 'desc';\n};\n\n/**\n * React table header.\n *\n * @param {ReactTableHeaderProps} props Props.\n * @returns React component.\n */\nexport const ReactTableHeader = <T extends Record<string, unknown>>({\n    column,\n    onlySortBy,\n}: ReactTableHeaderProps<T>): ReactElement => {\n    const { canSort, isSorted, isSortedDesc, toggleSortBy } = column;\n\n    const onKeyDownHandler: KeyboardEventHandler = e => {\n        if (e.key !== 'Enter' && e.key !== ' ') {\n            return;\n        }\n\n        e.preventDefault();\n        toggleSortBy();\n    };\n\n    // TODO - refactor after upgrading to react-table@v8\n    const shouldToggleSort = useMemo(() => {\n        if (onlySortBy === undefined) {\n            return false;\n        }\n\n        const toggleSortCondition = onlySortBy === 'asc' ? isSortedDesc : !isSortedDesc;\n        return isSorted && !!toggleSortCondition;\n    }, [onlySortBy, isSortedDesc, isSorted]);\n\n    useLayoutEffect(() => {\n        shouldToggleSort && toggleSortBy();\n    }, [shouldToggleSort, toggleSortBy]);\n\n    return (\n        <THeader\n            {...column.getHeaderProps(column.getSortByToggleProps())}\n            className={canSort ? styles.sortableColumnHeader : ''}\n            tabIndex={canSort ? 0 : undefined}\n            onKeyDown={onKeyDownHandler}\n        >\n            {column.render('Header')}\n            {isSorted && <Icon iconName={`fa-solid fa-angle-${isSortedDesc ? 'down' : 'up'}`} />}\n        </THeader>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode, useEffect } from 'react';\nimport {\n    ColumnInstance,\n    TableInstance,\n    TableOptions,\n    useFilters,\n    useSortBy,\n    useTable,\n} from 'react-table';\nimport { notEmpty } from 'src/utils';\nimport { useDebounce, useInitialTableState } from 'src/hooks';\nimport { ReactTableHeader } from './ReactTableHeader';\nimport { Table, TBody, THead, TRow } from '../Table';\n\n/**\n * Props.\n */\ntype ReactTableProps<T extends Record<string, unknown>> = {\n    name: string;\n    renderRows: (tableInstance: TableInstance<T>) => ReactNode;\n    renderHeaders?: (tableInstance: TableInstance<T>) => ReactNode;\n    className?: string;\n    footerHeader?: boolean;\n    showTableHeader?: boolean;\n} & TableOptions<T>;\n\n/**\n * React-table hook list to pass into table instance.\n */\nconst tableHooks = [useFilters, useSortBy].filter(notEmpty);\n\n/**\n * React table template.\n *\n * @param {ReactTableProps} props Props.\n * @returns React component.\n */\nexport const ReactTable = <T extends Record<string, unknown>>({\n    name,\n    renderRows,\n    renderHeaders,\n    initialState: defaultInitialState,\n    className,\n    footerHeader,\n    showTableHeader = true,\n    ...restOptions\n}: ReactTableProps<T>): ReactElement => {\n    const [initialState, setInitialState] = useInitialTableState(name, defaultInitialState);\n\n    const tableInstance = useTable<T>(\n        {\n            initialState,\n            ...restOptions,\n        },\n        ...tableHooks,\n    );\n    const { getTableBodyProps, visibleColumns, state } = tableInstance;\n\n    const debouncedState = useDebounce(state, 500);\n\n    useEffect(() => {\n        setInitialState(debouncedState);\n    }, [setInitialState, debouncedState]);\n\n    const tableHeadersRenderer = () =>\n        renderHeaders ? renderHeaders(tableInstance) : renderTableHeadersFallback(visibleColumns);\n\n    return (\n        <Table className={className}>\n            {showTableHeader && (\n                <THead\n                    sticky\n                    isFooterHeader={footerHeader}\n                >\n                    <TRow>{tableHeadersRenderer()}</TRow>\n                </THead>\n            )}\n            <TBody {...getTableBodyProps()}>{renderRows(tableInstance)}</TBody>\n        </Table>\n    );\n};\n\n/**\n * Renders table head.\n *\n * @param columns Table columns.\n * @returns Table head.\n */\nconst renderTableHeadersFallback = <T extends Record<string, unknown>>(\n    columns: ColumnInstance<T>[],\n) => (\n    <>\n        {columns.map(column => (\n            <ReactTableHeader\n                key={column.id}\n                column={column}\n            />\n        ))}\n    </>\n);\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useCallback } from 'react';\nimport { dequal as deepEqual } from 'dequal';\nimport { TableState } from 'react-table';\nimport { useLocalStorage } from '../useLocalStorage';\n\n/**\n * Partial table state.\n */\ntype PartalState<T extends Record<string, unknown>> = Partial<TableState<T>>;\n\n/**\n * Hook to keep persisited react-table state between data updates.\n *\n * @param name Table name.\n * @param [defaultState] Default table state.\n * @returns Table state handlers.\n * InitialState is taken from localStorage and can be rewrited with setInitialState.\n */\nexport const useInitialTableState = <T extends Record<string, unknown>>(\n    name: string,\n    defaultState: PartalState<T> = {},\n): [PartalState<T>, (newState: PartalState<T>) => void] => {\n    const [initialState, setInitialState] = useLocalStorage(name, defaultState);\n\n    const setNewState = useCallback(\n        (input: PartalState<T>) => {\n            const { sortBy, filters, hiddenColumns, columnOrder, groupBy } = input;\n            setInitialState({\n                columnOrder,\n                filters,\n                hiddenColumns,\n                sortBy,\n                groupBy,\n            });\n        },\n        [setInitialState],\n    );\n\n    const value = deepEqual(initialState, defaultState) ? defaultState : initialState;\n\n    return [value, setNewState];\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useEffect, useState } from 'react';\n\n/**\n * Hook to use debounce inside react component.\n * Debounces set state, preventing unnecessary rerender.\n *\n * @param value Value.\n * @param delay Delay.\n * @returns Debounced value.\n */\nexport const useDebounce = <T extends unknown>(value: T, delay: number): T => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value, delay]);\n\n    return debouncedValue;\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useState } from 'react';\nimport { Icon } from '@nilfoundation/react-components';\nimport { useDropzone, DropzoneOptions, FileRejection, DropEvent } from 'react-dropzone';\nimport './FileUploader.scss';\n\n/**\n * Props.\n */\ntype FileUploaderProps = {\n    title?: string;\n} & DropzoneOptions;\n\n/**\n *\n * @param {FileUploaderProps} props Props.\n * @returns React component.\n */\nexport const FileUploader = ({\n    title = \"Drag'n drop some files here, or click to select files\",\n    onDrop,\n    ...restOptions\n}: FileUploaderProps): ReactElement => {\n    const [textMessage, setTextMessage] = useState(title);\n\n    const onDropHandler = (\n        acceptedFiles: File[],\n        fileRejections: FileRejection[],\n        event: DropEvent,\n    ) => {\n        if (Object.keys(fileRejections).length !== 0) {\n            setTextMessage('Please submit valid file type');\n        }\n\n        onDrop && onDrop(acceptedFiles, fileRejections, event);\n    };\n\n    const { acceptedFiles, getRootProps, getInputProps, isDragActive } = useDropzone({\n        ...restOptions,\n        onDrop: onDropHandler,\n    });\n\n    return (\n        <div\n            className={`fileUploader ${isDragActive ? 'fileUploader-dragActive' : ''}`}\n            {...getRootProps()}\n        >\n            <input {...getInputProps()} />\n            {acceptedFiles.length !== 0 ? (\n                <span className=\"fileUploader__files\">\n                    {acceptedFiles.map(x => (\n                        <span key={x.name}>{x.name}</span>\n                    ))}\n                </span>\n            ) : (\n                <span className=\"fileUploader__message\">{textMessage}</span>\n            )}\n            <Icon iconName=\"fa-solid fa-circle-arrow-up\" />\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactNode, useRef } from 'react';\nimport { Portal } from '@nilfoundation/react-components';\nimport { CSSTransition } from 'react-transition-group';\nimport styles from './FullScreenView.module.scss';\n\n/**\n * Props.\n */\ntype FullScreenViewProps = {\n    showFullScreen: boolean;\n    children: ReactNode;\n    className?: string;\n};\n\n/**\n * Full screen view container.\n *\n * @param {FullScreenViewProps} props Props.\n * @returns React component.\n */\nexport const FullScreenView = ({\n    showFullScreen,\n    children,\n    className,\n}: FullScreenViewProps): JSX.Element => {\n    const nodeRef = useRef<HTMLDivElement>(null);\n\n    return (\n        <>\n            {children}\n            <Portal>\n                <CSSTransition\n                    classNames=\"alert\"\n                    timeout={300}\n                    in={showFullScreen}\n                    nodeRef={nodeRef}\n                    unmountOnExit\n                >\n                    <div\n                        className={`${styles.fullScreenView} ${className ?? ''}`}\n                        ref={nodeRef}\n                    >\n                        {children}\n                    </div>\n                </CSSTransition>\n            </Portal>\n        </>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { Button, ButtonProps, Icon } from '@nilfoundation/react-components';\nimport styles from './ClicableIcon.module.scss';\n\n/**\n * Props.\n */\ntype ClicableIconProps = {\n    iconName: string;\n} & ButtonProps<HTMLButtonElement>;\n\n/**\n * Button, that looks like an icon.\n *\n * @param {ClicableIconProps} props Props.\n * @returns React component.\n */\nexport const ClicableIcon = ({ iconName, className, ...rest }: ClicableIconProps): JSX.Element => {\n    return (\n        <Button\n            className={`${styles.button} ${className ?? ''}`}\n            {...rest}\n        >\n            <Icon iconName={iconName} />\n        </Button>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Container, Row, Col } from '@nilfoundation/react-components';\nimport { mainSiteAddress } from 'src/constants';\n\n/**\n * Offline view.\n *\n * @returns React component.\n */\nconst OfflineView = (): ReactElement => (\n    <Container\n        as=\"main\"\n        fluid\n    >\n        <Row>\n            <Col\n                xs={12}\n                className=\"text-center\"\n            >\n                <h4>Sorry, unknown error occured.</h4>\n                <p className=\"text-muted\">\n                    Please, try to reload page or leave message to support.\n                </p>\n                <p>\n                    <a href={mainSiteAddress}>{mainSiteAddress}</a>\n                </p>\n            </Col>\n        </Row>\n    </Container>\n);\n\nexport default OfflineView;\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode, useEffect, useState } from 'react';\nimport OfflineView from 'src/views/OfflineView';\n\n/**\n * Props.\n */\ntype NetConnectionHandlerProps = {\n    children?: ReactNode;\n};\n\n/**\n * Social links.\n *\n * @param {NetConnectionHandlerProps} props Props.\n * @returns React component.\n */\nexport const NetConnectionHandler = ({ children }: NetConnectionHandlerProps): ReactElement => {\n    const [online, setOnline] = useState(window.navigator.onLine);\n\n    useEffect(() => {\n        const setIsOnline = () => setOnline(true);\n        const setIsOffline = () => {\n            setOnline(false);\n        };\n\n        window.addEventListener('online', setIsOnline);\n        window.addEventListener('offline', setIsOffline);\n\n        return () => {\n            window.removeEventListener('online', setIsOnline);\n            window.removeEventListener('offline', setIsOffline);\n        };\n    }, [setOnline]);\n\n    return <>{online ? children : <OfflineView />}</>;\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode } from 'react';\nimport styles from './Overlay.module.scss';\n\n/**\n * Props.\n */\ntype OverlayProps = {\n    className?: string;\n    children: ReactNode;\n};\n\n/**\n * Overlay component.\n *\n * @param {OverlayProps} props Props.\n * @returns React component.\n */\nexport const Overlay = ({ className, children }: OverlayProps): ReactElement => (\n    <div className={`${className ?? ''} ${styles.overlay}`}>{children}</div>\n);\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Icon } from '@nilfoundation/react-components';\nimport clsx from 'clsx';\nimport styles from './PriceChangeIndicator.module.scss';\n\n/**\n * Props.\n */\ntype PriceChangeIndicatorProps = {\n    change: number;\n    className?: string;\n    toFixed?: number;\n};\n\n/**\n * Trade history component.\n *\n * @param {PriceChangeIndicatorProps} props Props.\n * @returns React component.\n */\nexport const PriceChangeIndicator = ({\n    change,\n    className,\n    toFixed = 4,\n}: PriceChangeIndicatorProps): ReactElement => {\n    const isGrow = !!change && change > 0;\n    const iconName = `fa-solid fa-arrow-${isGrow ? 'up' : 'down'}`;\n    const computedClassName = clsx(\n        styles.priceChangeIndicator,\n        isGrow ? 'growTextColor' : 'lossTextColor',\n        className,\n    );\n\n    return (\n        <div className={computedClassName}>\n            <Icon iconName={iconName} />\n            {`${Math.abs(change).toFixed(toFixed)}%`}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, memo } from 'react';\nimport { Media, Spinner } from '@nilfoundation/react-components';\nimport clsx from 'clsx';\nimport { useAppSelector } from 'src/redux';\nimport { PriceChangeIndicator } from '../PriceChangeIndicator';\n\n/**\n * Props.\n */\ntype CircuitsListItemInfoProps = {\n    isSelected: boolean;\n    cost?: number | null;\n    change?: number | null;\n};\n\n/**\n * Currencies list item brief info.\n *\n * @param {CircuitsListItemInfoProps} props - Props.\n * @returns React component.\n */\nexport const CircuitsListItemInfo = memo(function CircuitsListItemInfo({\n    cost,\n    change,\n    isSelected,\n}: CircuitsListItemInfoProps): ReactElement {\n    const isLoadingInfo = useAppSelector(s => s.circuitsState.isLoadingCircuitsInfo);\n    const className = clsx('dailyChangeIndicator', isSelected && 'dailyChangeIndicator_selected');\n\n    return (\n        <Media.Item position=\"right\">\n            {cost && <div>{`$${cost.toFixed(4)}`}</div>}\n            {!!change && (\n                <PriceChangeIndicator\n                    change={change}\n                    className={className}\n                />\n            )}\n            {isLoadingInfo && cost === undefined && change === undefined && <Spinner />}\n        </Media.Item>\n    );\n});\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { ListGroup, Media } from '@nilfoundation/react-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UpdateSelectedCircuitId, selectCurrentCircuit } from 'src/redux';\nimport { CircuitsListData } from 'src/models';\nimport { CircuitsListItemInfo } from './CircuitsListItemInfo';\n\n/**\n * Props.\n */\ntype CurcuitsListItemProps = {\n    data: CircuitsListData;\n};\n\n/**\n * Currencies list item.\n *\n * @param {CurcuitsListItemProps} props - Props.\n * @returns React component.\n */\nexport const CurcuitsListItem = ({\n    data: { id, cost, change, name },\n}: CurcuitsListItemProps): ReactElement => {\n    const dispatch = useDispatch();\n    const selectedItem = useSelector(selectCurrentCircuit, (prev, next) => prev?.id === next?.id);\n    const isSelected = id === selectedItem?.id;\n\n    const onSelectItem = () => {\n        dispatch(UpdateSelectedCircuitId(id));\n    };\n\n    return (\n        <ListGroup.Item\n            active={isSelected}\n            onClick={onSelectItem}\n        >\n            <Media>\n                <Media.Body>{name}</Media.Body>\n                <CircuitsListItemInfo\n                    cost={cost}\n                    change={change}\n                    isSelected={isSelected}\n                />\n            </Media>\n        </ListGroup.Item>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, memo, useCallback, useMemo, useRef, useState } from 'react';\nimport { FilterProps, TableInstance, TableState } from 'react-table';\nimport { Icon, Input, InputGroup, ListGroup } from '@nilfoundation/react-components';\nimport { dequal as deepEqual } from 'dequal';\nimport debounce from 'lodash/debounce';\nimport { useAppSelector } from 'src/redux';\nimport { Circuit, CircuitsListData, CircuitsListTableColumn } from 'src/models';\nimport { ReactTable } from 'src/components';\nimport { CurcuitsListItem } from './CircuitsListItem';\n\n/**\n * Props.\n */\ntype CircuitsListTableProps = {\n    circuitsList: Circuit[];\n};\n\n/**\n * Search by text input.\n *\n * @param {FilterProps<CircuitsListData>} props - Filter props.\n * @returns Search by text filter input.\n */\nconst ByTextColumnFilter = ({ column: { setFilter } }: FilterProps<CircuitsListData>) => {\n    const [value, setValue] = useState('');\n    const debouncedSearch = useRef(\n        debounce(value => {\n            setFilter(value || undefined);\n        }, 300),\n    ).current;\n\n    return (\n        <InputGroup>\n            <InputGroup.Addon>\n                <Icon iconName=\"fa-solid fa-search\" />\n            </InputGroup.Addon>\n            <Input\n                placeholder=\"Search circuits\"\n                type=\"text\"\n                value={value}\n                onChange={e => {\n                    setValue(e.target.value);\n                    debouncedSearch(e.target.value);\n                }}\n            />\n        </InputGroup>\n    );\n};\n\n/**\n * Table columns.\n */\nconst columns: CircuitsListTableColumn[] = [\n    {\n        Header: 'Name',\n        accessor: 'name',\n        Filter: ByTextColumnFilter,\n    },\n    {\n        accessor: 'cost',\n        disableFilters: true,\n    },\n    {\n        accessor: 'change',\n        disableFilters: true,\n    },\n    {\n        accessor: 'id',\n        disableFilters: true,\n    },\n];\n\n/**\n * Initial table state without user interactions.\n */\nconst defaultTableState: Partial<TableState<CircuitsListData>> = {\n    sortBy: [\n        {\n            id: 'name',\n            desc: false,\n        },\n    ],\n    hiddenColumns: ['change', 'cost', 'id'],\n};\n\n/**\n * Active orders table.\n *\n * @param {CircuitsListTableProps} props Props.\n * @returns React component.\n */\nexport const CircuitsListTable = memo(function CircuitsListTable({\n    circuitsList,\n}: CircuitsListTableProps): ReactElement {\n    const circuitsInfo = useAppSelector(s => s.circuitsState.circuitsInfo, deepEqual);\n\n    const tableData: CircuitsListData[] = useMemo(() => {\n        return circuitsList.map(x => {\n            const info = circuitsInfo && circuitsInfo.find(y => y.circuit_id === x.id);\n\n            return {\n                id: x.id,\n                name: `${x.name.toUpperCase()} (${x.info.toUpperCase()})/USD`,\n                cost: info?.current,\n                change: info?.daily_change,\n            };\n        });\n    }, [circuitsList, circuitsInfo]);\n\n    const renderRows = useCallback(\n        ({ rows, prepareRow, visibleColumns }: TableInstance<CircuitsListData>) => (\n            <>\n                {visibleColumns.find(x => x.canFilter)?.render('Filter')}\n                <ListGroup>\n                    {rows.map(row => {\n                        prepareRow(row);\n                        return (\n                            <CurcuitsListItem\n                                key={row.id}\n                                data={row.values as CircuitsListData}\n                            />\n                        );\n                    })}\n                </ListGroup>\n            </>\n        ),\n        [],\n    );\n\n    return (\n        <ReactTable\n            name=\"circuitsListTable\"\n            data={tableData}\n            columns={columns}\n            renderRows={renderRows}\n            initialState={defaultTableState}\n            showTableHeader={false}\n        />\n    );\n});\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Spinner } from '@nilfoundation/react-components';\nimport { dequal as deepEqual } from 'dequal';\nimport { selectCircuits, useAppSelector } from 'src/redux';\nimport { CircuitsListTable } from './CircuitsListTable';\nimport { Details, DashboardCard } from '../../common';\nimport './CircuitsList.scss';\n\n/**\n * Currencies list.\n *\n * @returns React component.\n */\nexport const CircuitsList = (): ReactElement => {\n    const circuitsList = useAppSelector(selectCircuits, deepEqual);\n    const loadingCircuits = useAppSelector(s => s.circuitsState.isLoading);\n\n    return (\n        <DashboardCard>\n            <Details title={<h4>Circuit list</h4>}>\n                <div className=\"circuitsList\">\n                    {loadingCircuits && !circuitsList.length ? (\n                        <Spinner grow />\n                    ) : (\n                        <CircuitsListTable circuitsList={circuitsList} />\n                    )}\n                </div>\n            </Details>\n        </DashboardCard>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Icon, Label } from '@nilfoundation/react-components';\nimport { Circuit } from 'src/models';\nimport styles from './CircuitDetailedInfo.module.scss';\n\n/**\n * Props.\n */\ntype CircuitInfoCardProps = {\n    circuit: Circuit;\n};\n\n/**\n * Circuit info card.\n *\n * @param {CircuitInfoCardProps} props Props.\n * @returns React component.\n */\nexport const CircuitInfoCard = ({ circuit }: CircuitInfoCardProps): ReactElement => {\n    const { info, name, description, repository } = circuit;\n\n    return (\n        <>\n            <h4>{`${name} (${info})/USD`}</h4>\n            <h5 className={styles.description}>{description}</h5>\n            <p>\n                <Label\n                    href={repository}\n                    target=\"_blank\"\n                >\n                    <Icon\n                        iconName=\"fa-brands fa-github\"\n                        srOnlyText=\"github repository link\"\n                    />\n                    GitHub Repository\n                </Label>\n            </p>\n        </>\n    );\n};\n","/**\n * @file Enum declaration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Tab.\n */\nexport enum ManageOrdersTab {\n    active = 'ACTIVE',\n    history = 'HISTORY',\n}\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport ReactJson from 'react-json-view';\nimport { jsonViewerTheme } from 'src/constants';\nimport { Circuit } from 'src/models';\nimport styles from './CircuitDetailedInfo.module.scss';\n\n/**\n * Props.\n */\ntype CircuitJsonViewProps = {\n    circuit: Circuit;\n};\n\n/**\n * Circuit json view.\n *\n * @param {CircuitJsonViewProps} props Props.\n * @returns React component.\n */\nexport const CircuitJsonView = ({ circuit }: CircuitJsonViewProps): ReactElement => {\n    return (\n        <div className={styles.jsonView}>\n            <ReactJson\n                src={circuit}\n                collapsed={1}\n                name={null}\n                displayDataTypes={false}\n                displayObjectSize={false}\n                theme={jsonViewerTheme}\n            />\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { dequal as deepEqual } from 'dequal';\nimport { Spinner } from '@nilfoundation/react-components';\nimport { useAppSelector } from 'src/redux';\n\n/**\n * Props.\n */\ntype CircuitStatsCardProps = {\n    circuitId: string;\n};\n\n/**\n * Circuit statistics card.\n *\n * @param {CircuitStatsCardProps} props Props.\n * @returns React component.\n */\nexport const CircuitStatsCard = ({ circuitId }: CircuitStatsCardProps): ReactElement => {\n    const isLoadingStats = useAppSelector(s => s.circuitsState.isLoadingCircuitsStats);\n    const stats = useAppSelector(\n        s => s.circuitsState.circuitsStats.find(x => x.circuit_id === circuitId),\n        deepEqual,\n    );\n\n    switch (true) {\n        case isLoadingStats && stats === undefined:\n            return <Spinner grow />;\n        case !stats:\n            return <h4>No data.</h4>;\n        default:\n            return (\n                <>\n                    <div>\n                        <h5>{`Average cost: ${stats!.avg_cost.toFixed(4)} USD`}</h5>\n                    </div>\n                    <div>\n                        <h5>{`Average gen time: ${stats!.avg_eval_time.toFixed(4)} Mins`}</h5>\n                    </div>\n                    <div>\n                        <h5>{`Completed: ${stats!.completed}`}</h5>\n                    </div>\n                </>\n            );\n    }\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Image, Nav, Spinner } from '@nilfoundation/react-components';\nimport { selectCurrentCircuit, useAppSelector } from 'src/redux';\nimport { Circuit } from 'src/models';\nimport { getCurrencyImage } from 'src/enums';\nimport { Details, DashboardCard } from '../../common';\nimport { CircuitInfoCard } from './CircuitInfoCard';\nimport { DetailedInfoTab } from './DetailedInfoTab';\nimport { CircuitJsonView } from './CircuitJsonView';\nimport { CircuitStatsCard } from './CircuitStatsCard';\nimport styles from './CircuitDetailedInfo.module.scss';\n\n/**\n * Currencies list.\n *\n * @returns React component.\n */\nexport const CircuitDetailedInfo = (): ReactElement => {\n    const [intoType, setInfoType] = useState<DetailedInfoTab>(DetailedInfoTab.info);\n    const currentSelectedCircuit = useSelector(selectCurrentCircuit);\n    const loadingCircuits = useAppSelector(s => s.circuitsState.isLoading);\n\n    return (\n        <DashboardCard className={styles.container}>\n            <Details title={<h4>Circuit detailed info</h4>}>\n                <Nav\n                    justified\n                    className={styles.toolbar}\n                >\n                    {Object.values(DetailedInfoTab).map(t => (\n                        <Nav.Item\n                            key={t}\n                            onClick={() => setInfoType(t)}\n                            active={t === intoType}\n                        >\n                            {t.toUpperCase()}\n                        </Nav.Item>\n                    ))}\n                </Nav>\n                {currentSelectedCircuit && (\n                    <div className={styles.imageContainer}>\n                        <Image\n                            alt=\"Circuit image\"\n                            source={getCurrencyImage(currentSelectedCircuit.name)}\n                            responsive\n                        />\n                    </div>\n                )}\n                <div className={styles.content}>\n                    {currentSelectedCircuit ? (\n                        <CircuitDetailedInfoFactory\n                            type={intoType}\n                            circuit={currentSelectedCircuit}\n                        />\n                    ) : loadingCircuits ? (\n                        <Spinner grow />\n                    ) : (\n                        <div>Nothing is selected.</div>\n                    )}\n                </div>\n            </Details>\n        </DashboardCard>\n    );\n};\n\n/**\n *Renders Circuit info conditionally.\n *\n * @param {{type: DetailedInfoTab; circuit: Circuit;}} props Props.\n * @returns React element.\n */\nconst CircuitDetailedInfoFactory = ({\n    type,\n    circuit,\n}: {\n    type: DetailedInfoTab;\n    circuit: Circuit;\n}): ReactElement => {\n    switch (type) {\n        case DetailedInfoTab.info:\n            return (\n                <>\n                    <CircuitInfoCard circuit={circuit} />\n                    <CircuitJsonView circuit={circuit} />\n                </>\n            );\n        case DetailedInfoTab.stats:\n            return <CircuitStatsCard circuitId={circuit.id} />;\n        default:\n            return <></>;\n    }\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Nav, useBreakpoints } from '@nilfoundation/react-components';\nimport { ChartType } from 'src/enums';\n\n/**\n * Props.\n */\ntype ChartTypeSelectProps = {\n    chartType: ChartType;\n    onSelectChartType: (chartType: ChartType) => void;\n    disabled: boolean;\n};\n\n/**\n * Chart type selector.\n *\n * @param {ChartTypeSelectProps} props Props.\n * @returns React component.\n */\nexport const ChartTypeSelect = ({\n    chartType,\n    onSelectChartType,\n    disabled,\n}: ChartTypeSelectProps): ReactElement => {\n    const { xs, sm } = useBreakpoints();\n\n    return (\n        <Nav\n            tabs\n            vertical={xs || sm}\n        >\n            {Object.values(ChartType).map(x => (\n                <Nav.Item\n                    key={x}\n                    active={x === chartType}\n                    onClick={() => onSelectChartType(x)}\n                    disabled={disabled}\n                >\n                    {x}\n                </Nav.Item>\n            ))}\n        </Nav>\n    );\n};\n","/**\n * @file React context.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createContext } from 'react';\nimport { DateUnit } from 'src/enums';\n\n/**\n * Context type.\n */\ntype ChartSettingsContectModel = {\n    dataRange: DateUnit;\n    setDataRange: (unit: DateUnit) => void;\n    displayVolumes: boolean;\n    setDisplayVolumes: (b: boolean) => void;\n};\n\n/**\n * Data range context.\n */\nexport const ChartSettingsContext = createContext<ChartSettingsContectModel>(\n    {} as ChartSettingsContectModel,\n);\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useContext } from 'react';\nimport { Nav } from '@nilfoundation/react-components';\nimport { DateUnit } from 'src/enums';\nimport { ChartSettingsContext } from './ChartSettingsContext';\n\n/**\n * Props.\n */\ntype DataRangeSelectProps = {\n    disabled: boolean;\n};\n\n/**\n * Data range select.\n *\n * @param {DataRangeSelectProps} props Props.\n * @returns React component.\n */\nexport const DataRangeSelect = ({ disabled }: DataRangeSelectProps): ReactElement => {\n    const { dataRange, setDataRange } = useContext(ChartSettingsContext);\n    return (\n        <Nav>\n            {Object.values(DateUnit).map(x => (\n                <Nav.Item\n                    key={x}\n                    active={dataRange === x}\n                    onClick={() => setDataRange(x)}\n                    disabled={disabled}\n                >\n                    {x}\n                </Nav.Item>\n            ))}\n        </Nav>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { BarPrice, BarPrices } from 'lightweight-charts';\nimport styles from './ChartLegend.module.scss';\n\n/**\n * Props.\n */\ntype ChartLegendProps = {\n    name: string;\n    price?: BarPrice | BarPrices;\n};\n\n/**\n * Dashboard legend.\n *\n * @param {ChartLegendProps} props Props.\n * @returns React component.\n */\nexport const ChartLegend = ({ name, price }: ChartLegendProps): ReactElement => {\n    return (\n        <div className={styles.chartLegend}>\n            <h5 className={styles.chartName}>{name.toUpperCase()}</h5>\n            {typeof price === 'object' ? (\n                Object.keys(price).map(x => (\n                    <div\n                        className=\"text-muted\"\n                        key={x}\n                    >\n                        {`${x}: ${price[x as keyof BarPrices]?.toFixed(2)}`}\n                    </div>\n                ))\n            ) : (\n                <div className=\"text-muted\">{price?.toFixed(2)}</div>\n            )}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useContext, useMemo, useRef } from 'react';\nimport {\n    CandlestickData,\n    CandlestickStyleOptions,\n    ChartOptions,\n    DeepPartial,\n    HistogramData,\n    LineData,\n    LineStyleOptions,\n    SeriesOptionsCommon,\n    UTCTimestamp,\n    WhitespaceData,\n} from 'lightweight-charts';\nimport { Spinner } from '@nilfoundation/react-components';\nimport { useChart, useRenderChartData } from 'src/hooks';\nimport { formatUTCTimestamp } from 'src/utils';\nimport { getDateFormatBasedOnDateUnit } from 'src/enums';\nimport { ChartSettingsContext } from '../CircuitDashboard';\nimport { ChartLegend } from '../ChartLegend';\nimport './ChartTemplate.scss';\n\n/**\n * Props.\n */\ntype ChartTemplateProps<T extends 'Line' | 'Candlestick'> = {\n    chartName: string;\n    loadingData: boolean;\n    seriesType: T;\n    seriesData: T extends 'Line' ? LineData[] : CandlestickData[];\n    seriesOptions?: DeepPartial<\n        (T extends 'Line' ? LineStyleOptions : CandlestickStyleOptions) & SeriesOptionsCommon\n    >;\n    chartOptions?: DeepPartial<ChartOptions>;\n    volumesData?: Array<WhitespaceData | HistogramData>;\n};\n\n/**\n * Chart template.\n *\n * @param {ChartTemplateProps} props Props.\n * @returns React component.\n */\nexport const ChartTemplate = <T extends 'Line' | 'Candlestick'>({\n    chartName,\n    loadingData,\n    seriesType,\n    seriesData,\n    seriesOptions,\n    chartOptions,\n    volumesData,\n}: ChartTemplateProps<T>): ReactElement => {\n    const ref = useRef<HTMLDivElement>(null);\n    const { dataRange, displayVolumes } = useContext(ChartSettingsContext);\n    const options = useMemo(\n        (): DeepPartial<ChartOptions> => ({\n            ...chartOptions,\n            localization: {\n                timeFormatter: (t: UTCTimestamp) =>\n                    formatUTCTimestamp(t, getDateFormatBasedOnDateUnit(dataRange)),\n            },\n            timeScale: {\n                tickMarkFormatter: (t: UTCTimestamp) =>\n                    formatUTCTimestamp(t, getDateFormatBasedOnDateUnit(dataRange)),\n                fixRightEdge: true,\n            },\n            rightPriceScale: {\n                scaleMargins: {\n                    top: 0.2,\n                    bottom: displayVolumes ? 0.3 : 0.2,\n                },\n            },\n        }),\n        [chartOptions, dataRange, displayVolumes],\n    );\n\n    const { chart } = useChart({ ref, options });\n\n    const { price } = useRenderChartData({\n        seriesType,\n        seriesData,\n        chart,\n        options: seriesOptions,\n        visibleRange: dataRange,\n        volumes: volumesData,\n    });\n\n    return (\n        <div\n            ref={ref}\n            className=\"circuitChart\"\n        >\n            <ChartLegend\n                price={price}\n                name={chartName}\n            />\n            {loadingData && seriesData.length === 0 && <Spinner grow />}\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useContext, useMemo } from 'react';\nimport { LineWidth } from 'lightweight-charts';\nimport { useGetCircuitDashboardData } from 'src/hooks';\nimport colors from 'src/styles/export.module.scss';\nimport { ChartTemplate } from '../ChartTemplate';\nimport { ChartSettingsContext } from '../CircuitDashboard';\n\n/**\n * Proof cost chart.\n *\n * @returns React component.\n */\nexport const ProofCostChart = (): ReactElement => {\n    const seriesOptions = useMemo(\n        () => ({\n            upColor: colors.successColor,\n            downColor: colors.dangerColor,\n            priceLineWidth: 2 as LineWidth,\n        }),\n        [],\n    );\n    const { dataRange, displayVolumes } = useContext(ChartSettingsContext);\n    const {\n        chartData: { candlestickChartData, volumesData },\n        loadingData: isLoadingChartData,\n    } = useGetCircuitDashboardData(displayVolumes, dataRange);\n\n    return (\n        <ChartTemplate\n            loadingData={isLoadingChartData}\n            chartName=\"Proof cost, USD\"\n            seriesData={candlestickChartData}\n            seriesType=\"Candlestick\"\n            seriesOptions={seriesOptions}\n            volumesData={volumesData}\n        />\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useContext, useMemo } from 'react';\nimport { useGetCircuitDashboardData } from 'src/hooks';\nimport colors from 'src/styles/export.module.scss';\nimport { ChartTemplate } from '../ChartTemplate';\nimport { ChartSettingsContext } from '../CircuitDashboard';\n\n/**\n * Proof cost chart.\n *\n * @returns React component.\n */\nexport const ProofTimeGenChart = (): ReactElement => {\n    const seriesOptions = useMemo(\n        () => ({\n            color: colors.infoColor,\n        }),\n        [],\n    );\n    const { dataRange, displayVolumes } = useContext(ChartSettingsContext);\n    const {\n        chartData: { proofGenTimeData, volumesData },\n        loadingData: isLoadingChartData,\n    } = useGetCircuitDashboardData(displayVolumes, dataRange);\n\n    return (\n        <ChartTemplate\n            loadingData={isLoadingChartData}\n            chartName=\"Proof Generation Time, min\"\n            seriesData={proofGenTimeData}\n            seriesType=\"Line\"\n            seriesOptions={seriesOptions}\n            volumesData={volumesData}\n        />\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode } from 'react';\nimport { DateUnit } from 'src/enums';\nimport { useLocalStorage } from 'src/hooks';\nimport { ChartSettingsContext } from './ChartSettingsContext';\n/**\n * Props.\n */\ntype ChartSettingsProviderProps = {\n    children?: ReactNode;\n};\n\n/**\n * Chart settings provider.\n *\n * @param {ChartSettingsProviderProps} props Props.\n * @returns React component.\n */\nexport const ChartSettingsProvider = ({ children }: ChartSettingsProviderProps): ReactElement => {\n    const [dataRange, setDataRange] = useLocalStorage<DateUnit>(\n        'circuitDashboardDataRange',\n        DateUnit.hour,\n    );\n\n    const [displayVolumes, setDisplayVolumes] = useLocalStorage(\n        'circuitDashboardDisplayVolumes',\n        false,\n    );\n\n    return (\n        <ChartSettingsContext.Provider\n            value={{\n                dataRange,\n                setDataRange,\n                displayVolumes,\n                setDisplayVolumes,\n            }}\n        >\n            {children}\n        </ChartSettingsContext.Provider>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useContext } from 'react';\nimport { Icon, Nav } from '@nilfoundation/react-components';\nimport { ChartSettingsContext } from './ChartSettingsContext';\n\n/**\n * Props.\n */\ntype DashboardToolbarProps = {\n    disabled: boolean;\n    isFullscreen: boolean;\n    setFullScreen: (x: boolean) => void;\n};\n\n/**\n * Dashboard toolbar.\n *\n * @param {DashboardToolbarProps} props Props.\n * @returns React component.\n */\nexport const DashboardToolbar = ({\n    disabled,\n    isFullscreen,\n    setFullScreen,\n}: DashboardToolbarProps): ReactElement => {\n    const { displayVolumes, setDisplayVolumes } = useContext(ChartSettingsContext);\n\n    return (\n        <Nav>\n            <Nav.Item\n                disabled={disabled}\n                active={displayVolumes}\n                onClick={() => setDisplayVolumes(!displayVolumes)}\n            >\n                <Icon iconName=\"fa-solid fa-chart-simple\" />\n            </Nav.Item>\n            <Nav.Item\n                disabled={disabled}\n                active={isFullscreen}\n                onClick={() => setFullScreen(!isFullscreen)}\n            >\n                <Icon iconName={`fa-solid fa-${isFullscreen ? 'compress' : 'expand'}`} />\n            </Nav.Item>\n        </Nav>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { DashboardCard } from 'src/components/common';\nimport { selectCurrentCircuit, useAppSelector } from 'src/redux';\nimport { renderDashOnEmptyValue } from 'src/utils';\nimport { PriceChangeIndicator } from '../PriceChangeIndicator';\nimport styles from './CircuitInfoPanel.module.scss';\n\n/**\n * Panel with circuit info.\n *\n * @returns React component.\n */\nexport const CircuitInfoPanel = (): ReactElement => {\n    const currentCircuit = useAppSelector(selectCurrentCircuit);\n    const circuitInfo = useAppSelector(s =>\n        s.circuitsState.circuitsInfo.find(x => x.circuit_id === currentCircuit?.id),\n    );\n    const change = circuitInfo?.daily_change;\n\n    return (\n        <DashboardCard className={styles.panel}>\n            <div className={styles.container}>\n                {currentCircuit && (\n                    <div>\n                        {`${currentCircuit?.name.toUpperCase()} (${currentCircuit?.info.toUpperCase()})/USD`}\n                    </div>\n                )}\n                <div>\n                    <div className={`text-muted ${styles.title}`}>Current cost</div>\n                    <div>{renderDashOnEmptyValue(circuitInfo?.current)}</div>\n                </div>\n                <div>\n                    <div className={`text-muted ${styles.title}`}>24h Change</div>\n                    <div>\n                        {!!change ? (\n                            <PriceChangeIndicator change={change} />\n                        ) : (\n                            renderDashOnEmptyValue(undefined)\n                        )}\n                    </div>\n                </div>\n                <div>\n                    <div className={`text-muted ${styles.title}`}>24h High</div>\n                    <div>{renderDashOnEmptyValue(circuitInfo?.max)}</div>\n                </div>\n                <div>\n                    <div className={`text-muted ${styles.title}`}>24h Low</div>\n                    <div>{renderDashOnEmptyValue(circuitInfo?.min)}</div>\n                </div>\n                <div>\n                    <div className={`text-muted ${styles.title}`}>24h Volume</div>\n                    <div>{renderDashOnEmptyValue(circuitInfo?.volume, 0)}</div>\n                </div>\n            </div>\n        </DashboardCard>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useState } from 'react';\nimport { ChartType } from 'src/enums';\nimport { selectCurrentCircuit, useAppSelector } from 'src/redux';\nimport { DashboardCard, FullScreenView } from '../../common';\nimport { ChartTypeSelect } from './ChartTypeSelect';\nimport { DataRangeSelect } from './DataRangeSelect';\nimport { ProofCostChart, ProofTimeGenChart } from '../CircuitCharts';\nimport { ChartSettingsProvider } from './ChartSettingsProvider';\nimport { DashboardToolbar } from './DashboardToolbar';\nimport { CircuitInfoPanel } from '../CircuitInfoPanel';\nimport './CircuitDashboard.scss';\n\n/**\n * Circuit dashboard.\n *\n * @returns React component.\n */\nexport const CircuitDashboard = (): ReactElement => {\n    const currentCircuit = useAppSelector(selectCurrentCircuit);\n    const [chartType, setChartType] = useState(ChartType.proofCostChart);\n    const [fullScreen, setFullScreen] = useState(false);\n\n    return (\n        <DashboardCard>\n            <div className=\"circuitDashboard\">\n                <ChartSettingsProvider>\n                    <ChartTypeSelect\n                        chartType={chartType}\n                        onSelectChartType={setChartType}\n                        disabled={!currentCircuit}\n                    />\n                    <FullScreenView\n                        showFullScreen={fullScreen}\n                        className=\"fullScreenChartContainer\"\n                    >\n                        {fullScreen && <CircuitInfoPanel />}\n                        <div className=\"circuitDashboard__toolbar\">\n                            <DataRangeSelect disabled={!currentCircuit} />\n                            <DashboardToolbar\n                                disabled={!currentCircuit}\n                                isFullscreen={fullScreen}\n                                setFullScreen={setFullScreen}\n                            />\n                        </div>\n                        <ChartFactory chartType={chartType} />\n                    </FullScreenView>\n                </ChartSettingsProvider>\n            </div>\n        </DashboardCard>\n    );\n};\n\n/**\n * Renders chart depending on its type.\n *\n * @param {{chartType: ChartType}} props Props.\n * @returns Chart.\n */\nconst ChartFactory = ({ chartType }: { chartType: ChartType }) => {\n    switch (chartType) {\n        case ChartType.proofCostChart:\n            return <ProofCostChart />;\n        case ChartType.proofGetTimeChart:\n            return <ProofTimeGenChart />;\n        default:\n            return <></>;\n    }\n};\n","/**\n * @file React context.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createContext } from 'react';\nimport { CostAndEvalTime } from 'src/models';\n\n/**\n * Context type.\n */\ntype OrderManagementContextModel = {\n    processing: boolean;\n    setProcessing: (processing: boolean) => void;\n    selectedValues?: CostAndEvalTime;\n    setSelectedValues: (costAndEvalTime?: CostAndEvalTime) => void;\n};\n\n/**\n * Order management context.\n */\nexport const OrderManagementContext = createContext<OrderManagementContextModel>(\n    {} as OrderManagementContextModel,\n);\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode, useState } from 'react';\nimport { CostAndEvalTime } from 'src/models';\nimport { OrderManagementContext } from './OrderManagementContext';\n\n/**\n * Props.\n */\ntype OrderManagementContextProviderProps = {\n    children?: ReactNode;\n};\n\n/**\n * Order management context provider.\n *\n * @param {OrderManagementContextProviderProps} props Props.\n * @returns React component.\n */\nexport const OrderManagementContextProvider = ({\n    children,\n}: OrderManagementContextProviderProps): ReactElement => {\n    const [processing, setProcessing] = useState(false);\n    const [selectedValues, setSelectedValues] = useState<CostAndEvalTime>();\n\n    return (\n        <OrderManagementContext.Provider\n            value={{ processing, setProcessing, selectedValues, setSelectedValues }}\n        >\n            {children}\n        </OrderManagementContext.Provider>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Label } from '@nilfoundation/react-components';\nimport { Cell } from 'react-table';\nimport { OrderBookTableData } from 'src/models';\nimport { TCell } from 'src/components';\nimport { renderDashOnEmptyValue } from 'src/utils';\n\n/**\n * Props.\n */\ntype OrderBookTableCellProps = {\n    cell: Cell<OrderBookTableData>;\n    userOrdersAmount?: number;\n};\n\n/**\n * Order book table cell.\n *\n * @param {OrderBookTableCellProps} props Props.\n * @returns React component.\n */\nexport const OrderBookTableCell = ({\n    cell,\n    userOrdersAmount,\n}: OrderBookTableCellProps): ReactElement => {\n    const { column, value, getCellProps } = cell;\n\n    return (\n        <TCell {...getCellProps()}>\n            <span>{column.id === 'ordersAmount' ? value : renderDashOnEmptyValue(value)}</span>\n            {!!userOrdersAmount && (\n                <Label>\n                    <span>{userOrdersAmount}</span>\n                </Label>\n            )}\n        </TCell>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { CSSProperties, KeyboardEventHandler, ReactElement, useContext } from 'react';\nimport { Row } from 'react-table';\nimport { TRow } from 'src/components';\nimport { OrderBookTableData } from 'src/models';\nimport { OrderManagementContext } from '../OrderManagementContextProvider';\nimport { OrderBookTableCell } from './OrderBookTableCell';\n\n/**\n * Props.\n */\ntype OrderBookTableRowProps = {\n    row: Row<OrderBookTableData>;\n    volume: number;\n    className?: string;\n};\n\n/**\n * Order book table row.\n *\n * @param {OrderBookTableRowProps} props Props.\n * @returns React component.\n */\nexport const OrderBookTableRow = ({\n    row,\n    volume,\n    className: propsClassName,\n}: OrderBookTableRowProps): ReactElement => {\n    const { setSelectedValues } = useContext(OrderManagementContext);\n    const onClickRow = () => {\n        setSelectedValues({\n            cost: row.values.cost,\n            eval_time: row.values.eval_time,\n        });\n    };\n\n    const onKeyDownHandler: KeyboardEventHandler = e => {\n        if (e.key !== 'Enter' && e.key !== ' ') {\n            return;\n        }\n\n        e.preventDefault();\n        onClickRow();\n    };\n\n    const { className, style, ...rest } = row.getRowProps();\n    const combinedStyle = { ...style, '--bar-width': `${volume}%` } as CSSProperties;\n    const combinedClassName = `${className ?? ''} ${propsClassName ?? ''}`;\n\n    return (\n        <TRow\n            {...rest}\n            onClick={onClickRow}\n            onKeyDown={onKeyDownHandler}\n            tabIndex={0}\n            style={combinedStyle}\n            className={combinedClassName}\n        >\n            {row.cells.map(cell => {\n                const { key } = cell.getCellProps();\n                return (\n                    <OrderBookTableCell\n                        key={key}\n                        cell={cell}\n                        userOrdersAmount={\n                            cell.column.id !== 'ordersAmount'\n                                ? undefined\n                                : row.values.userOrdersAmount\n                        }\n                    />\n                );\n            })}\n        </TRow>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, memo, useCallback } from 'react';\nimport { Row, TableInstance, TableState } from 'react-table';\nimport { LastOrderData, OrderBookTableColumn, OrderBookTableData } from 'src/models';\nimport { ReactTable, ReactTableHeader } from 'src/components';\nimport { OrderBookTableRow } from './OrderBookTableRow';\nimport styles from './OrderBook.module.scss';\n\n/**\n * Props.\n */\ntype OrderBookTableProps = {\n    columns: OrderBookTableColumn[];\n    data: OrderBookTableData[];\n    lastOrderData?: LastOrderData;\n    maxVolume: number;\n};\n\ntype RowWithVolume = Row<OrderBookTableData> & { volume: number };\n\n/**\n * Initial table state without user interactions.\n */\nconst defaultOrderBookState: Partial<TableState<OrderBookTableData>> = {\n    sortBy: [\n        {\n            id: 'cost',\n            desc: true,\n        },\n    ],\n    hiddenColumns: ['type', 'userOrdersAmount'],\n};\n\n/**\n * Order book table.\n *\n * @param {OrderBookTableProps} props Props.\n * @returns React component.\n */\nexport const OrderBookTable = memo(function OrderBookTable({\n    columns,\n    data,\n    lastOrderData,\n    maxVolume,\n}: OrderBookTableProps): ReactElement {\n    const renderRows = useCallback(\n        ({ rows, prepareRow }: TableInstance<OrderBookTableData>) => {\n            return (\n                <>\n                    <div className={styles.rowsContainer}>\n                        {getDataWithVolumes(\n                            rows.filter(x => x.values.type === 'ask'),\n                            maxVolume,\n                        ).map(row => renderRow(row, prepareRow, styles.ask))}\n                    </div>\n                    {lastOrderData && (\n                        <div className={styles.lastOrderDataContainer}>\n                            {lastOrderData.cost && (\n                                <div className={lastOrderData.type}>{`${lastOrderData.cost.toFixed(\n                                    4,\n                                )} $`}</div>\n                            )}\n                            {lastOrderData.eval_time && (\n                                <div className=\"text-muted\">{`${lastOrderData.eval_time.toFixed(\n                                    4,\n                                )} min`}</div>\n                            )}\n                        </div>\n                    )}\n                    <div className={styles.rowsContainer}>\n                        {getDataWithVolumes(\n                            rows.reverse().filter(x => x.values.type === 'bid'),\n                            maxVolume,\n                        ).map(row => renderRow(row, prepareRow, styles.bid))}\n                    </div>\n                </>\n            );\n        },\n        [lastOrderData, maxVolume],\n    );\n\n    const renderHeaders = useCallback(({ visibleColumns }: TableInstance<OrderBookTableData>) => {\n        return (\n            <>\n                {visibleColumns.map(column => (\n                    <ReactTableHeader\n                        key={column.id}\n                        column={column}\n                        onlySortBy=\"desc\"\n                    />\n                ))}\n            </>\n        );\n    }, []);\n\n    return (\n        <ReactTable\n            name=\"orderBookTable\"\n            className={styles.orderBookTable}\n            renderRows={renderRows}\n            renderHeaders={renderHeaders}\n            data={data}\n            columns={columns}\n            disableSortRemove={true}\n            initialState={defaultOrderBookState}\n        />\n    );\n});\n\n/**\n * Render row.\n *\n * @param row Row instance.\n * @param prepareRow Prepare row callback.\n * @param className HTML Class.\n * @returns Row.\n */\nconst renderRow = (\n    row: RowWithVolume,\n    prepareRow: (r: Row<OrderBookTableData>) => void,\n    className: string,\n): ReactElement => {\n    prepareRow(row);\n    return (\n        <OrderBookTableRow\n            key={row.id}\n            row={row}\n            volume={row.volume}\n            className={className}\n        />\n    );\n};\n\n/**\n * Adds volume data to each order book data item.\n *\n * @param data Data.\n * @param maxVolume Max volume.\n * @returns Data with voulmes.\n */\nconst getDataWithVolumes = (\n    data: Row<OrderBookTableData>[],\n    maxVolume: number,\n): RowWithVolume[] => {\n    let count = 0;\n\n    const finalData = data.map(x => {\n        count = count + x.values.ordersAmount;\n\n        return {\n            ...x,\n            volume: 100 - ((maxVolume - count) / maxVolume) * 100,\n        };\n    });\n\n    return finalData;\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Spinner } from '@nilfoundation/react-components';\nimport { useGetOrderBookData, UseGetOrderBookDataReturnType } from 'src/hooks';\nimport { OrderBookTable } from './OrderBookTable';\nimport { Details, DashboardCard } from '../../common';\nimport styles from './OrderBook.module.scss';\n\n/**\n * Order book.\n *\n * @returns React component.\n */\nexport const OrderBook = (): ReactElement => {\n    const data = useGetOrderBookData();\n\n    return (\n        <DashboardCard>\n            <Details title={<h4>Order book</h4>}>\n                <div className={styles.orderBook}>{OrderBookViewFactory(data)}</div>\n            </Details>\n        </DashboardCard>\n    );\n};\n\n/**\n * Renders order book view.\n *\n * @param {UseGetOrderBookDataReturnType} props Props.\n * @returns React element.\n */\nconst OrderBookViewFactory = ({\n    data,\n    columns,\n    loadingData,\n    isError,\n    lastOrderData,\n    maxVolume,\n}: UseGetOrderBookDataReturnType) => {\n    switch (true) {\n        case loadingData && !data.length:\n            return <Spinner grow />;\n        case isError:\n            return <h5>Error while loading data.</h5>;\n        case !!data.length:\n            return (\n                <OrderBookTable\n                    data={data}\n                    columns={columns}\n                    lastOrderData={lastOrderData}\n                    maxVolume={maxVolume}\n                />\n            );\n        default:\n            return <h5>No orders.</h5>;\n    }\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode, useRef } from 'react';\nimport { Form, uniqueId } from '@nilfoundation/react-components';\n\n/**\n * Props.\n */\ntype BaseFormGroupProps = {\n    hasError: boolean;\n    children: ({ placeholder, id }: { placeholder?: string; id?: string }) => ReactNode;\n    hintText?: string;\n    labelText?: string;\n    className?: string;\n};\n\n/**\n * Base form group with label and hint.\n *\n * @param {BaseFormGroupProps} props Props.\n * @returns React component.\n */\nexport const BaseFormGroup = ({\n    hasError,\n    children,\n    hintText,\n    labelText,\n    className,\n}: BaseFormGroupProps): ReactElement => {\n    const { current } = useRef(uniqueId(labelText));\n\n    return (\n        <Form.Group\n            hasError={hasError}\n            className={className}\n        >\n            {labelText && <Form.Label htmlFor={current}>{labelText}</Form.Label>}\n            {children({\n                placeholder: hintText,\n                id: current,\n            })}\n        </Form.Group>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode, useContext, useEffect, useRef } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { CSSTransition } from 'react-transition-group';\nimport {\n    Button,\n    Input,\n    Size,\n    Spinner,\n    Variant,\n    Form,\n    InputGroup,\n} from '@nilfoundation/react-components';\nimport { CreateTradeOrder } from 'src/models';\nimport { useAuth } from 'src/hooks';\nimport { Details } from '../../common';\nimport { OrderManagementContext } from '../OrderManagementContextProvider';\nimport { BaseFormGroup } from './BaseFormGroup';\nimport styles from './CreateTradeOrderForm.module.scss';\n\n/**\n * Props.\n */\ntype CreateTradeOrderFormProps = {\n    onSubmit: () => Promise<void>;\n    errorMessage: string;\n    children?: ReactNode;\n};\n\n/**\n * Validates input value.\n *\n * @param v Value.\n * @returns Validation result.\n */\nconst validateFn = (v?: number) => v !== undefined && (v >= 0 || isNaN(v));\n\n/**\n * Create trade order form.\n *\n * @param {CreateTradeOrderFormProps} props Props.\n * @returns React component.\n */\nexport const CreateTradeOrderForm = ({\n    onSubmit,\n    errorMessage,\n    children,\n}: CreateTradeOrderFormProps): ReactElement => {\n    const nodeRef = useRef(null);\n    const { selectedValues, setSelectedValues } = useContext(OrderManagementContext);\n    const {\n        register,\n        setValue,\n        formState: { isSubmitting, isValid, errors },\n    } = useFormContext<CreateTradeOrder>();\n    const { user, isReadonly } = useAuth();\n\n    useEffect(() => {\n        if (!selectedValues) {\n            return;\n        }\n\n        const setValueOpts = { shouldDirty: true, shouldValidate: true };\n        setValue('cost', selectedValues.cost, setValueOpts);\n        setValue('eval_time', selectedValues.eval_time, setValueOpts);\n        setSelectedValues(undefined);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedValues]);\n\n    return (\n        <Form>\n            <div className=\"formContent\">\n                <BaseFormGroup\n                    hasError={!!errors['cost']}\n                    labelText=\"Cost\"\n                    hintText=\"Proof cost\"\n                >\n                    {props => (\n                        <InputGroup className={styles.control}>\n                            <Input\n                                type=\"number\"\n                                {...props}\n                                {...register('cost', {\n                                    required: true,\n                                    min: 0,\n                                    valueAsNumber: true,\n                                })}\n                            />\n                            <InputGroup.Addon>USD</InputGroup.Addon>\n                        </InputGroup>\n                    )}\n                </BaseFormGroup>\n                <Details\n                    title={\n                        <div className={`${styles.detailsTitle} text-muted`}>\n                            Additional parameters\n                        </div>\n                    }\n                    bottomIndent={false}\n                    defaultOpen={false}\n                >\n                    <BaseFormGroup\n                        hasError={!!errors['eval_time']}\n                        labelText=\"Generation time\"\n                        hintText=\"Proof generation time\"\n                    >\n                        {props => (\n                            <InputGroup className={styles.control}>\n                                <Input\n                                    type=\"number\"\n                                    {...props}\n                                    {...register('eval_time', {\n                                        required: false,\n                                        validate: validateFn,\n                                        valueAsNumber: true,\n                                    })}\n                                />\n                                <InputGroup.Addon>Mins</InputGroup.Addon>\n                            </InputGroup>\n                        )}\n                    </BaseFormGroup>\n                    <BaseFormGroup\n                        hasError={!!errors['wait_period']}\n                        labelText=\"Order timeout\"\n                        hintText=\"Order cancellation time\"\n                    >\n                        {props => (\n                            <InputGroup className={styles.control}>\n                                <Input\n                                    type=\"number\"\n                                    {...props}\n                                    {...register('wait_period', {\n                                        required: false,\n                                        validate: validateFn,\n                                        valueAsNumber: true,\n                                    })}\n                                />\n                                <InputGroup.Addon>Mins</InputGroup.Addon>\n                            </InputGroup>\n                        )}\n                    </BaseFormGroup>\n                </Details>\n                {children}\n            </div>\n            <Button\n                variant={Variant.success}\n                onClick={onSubmit}\n                size={Size.lg}\n                disabled={!isValid || isSubmitting || !user || isReadonly}\n            >\n                Submit\n                {isSubmitting && <Spinner />}\n            </Button>\n            <CSSTransition\n                classNames=\"fade\"\n                timeout={300}\n                in={!!errorMessage}\n                nodeRef={nodeRef}\n            >\n                <div\n                    ref={nodeRef}\n                    className=\"errorMessage\"\n                >\n                    {errorMessage}\n                </div>\n            </CSSTransition>\n        </Form>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useCallback, useContext } from 'react';\nimport { Controller, ControllerRenderProps, useFormContext } from 'react-hook-form';\nimport { FileRejection } from 'react-dropzone';\nimport { CreateBid } from 'src/models';\nimport { FileUploader as FileUploaderTemplate } from 'src/components';\nimport { OrderManagementContext } from '../OrderManagementContextProvider';\nimport { BaseFormGroup } from '../CreateTradeOrderForm';\nimport './PublicInput.scss';\n\n/**\n * Public_input filed input.\n *\n * @returns React component.\n */\nexport const PublicInput = (): ReactElement => {\n    const { processing } = useContext(OrderManagementContext);\n    const {\n        control,\n        formState: { errors },\n    } = useFormContext<CreateBid>();\n\n    return (\n        <BaseFormGroup\n            hasError={!!errors['public_input']}\n            labelText=\"Public Input\"\n            className=\"publicInput\"\n        >\n            {() => (\n                <Controller<CreateBid, 'public_input'>\n                    name=\"public_input\"\n                    control={control}\n                    rules={{\n                        validate: val => val !== null && !!val,\n                    }}\n                    render={({ field: { ref: _, ...rest } }) => (\n                        <FileUploader\n                            {...rest}\n                            disabled={processing}\n                        />\n                    )}\n                />\n            )}\n        </BaseFormGroup>\n    );\n};\n\n/**\n * Props.\n */\ntype FileUploaderProps = {\n    disabled?: boolean;\n} & Omit<ControllerRenderProps<CreateBid, 'public_input'>, 'ref'>;\n\n/**\n * Renders file uploader.\n *\n * @param {FileUploaderProps} props Props.\n * @returns Recat component.\n */\nconst FileUploader = ({ onChange, disabled }: FileUploaderProps): ReactElement => {\n    const handleJsonFile = useCallback(\n        (acceptedFiles: File[], fileRejections: FileRejection[]) => {\n            if (fileRejections.length !== 0) {\n                onChange(null);\n            }\n\n            const reader = new FileReader();\n\n            reader.onload = ({ target }) => {\n                if (!target || !target.result) {\n                    return;\n                }\n\n                const obj = JSON.parse(target.result as string);\n                onChange(obj);\n            };\n\n            reader.onerror = () => {\n                /*Do nothing*/\n            };\n            reader.onabort = () => {\n                /*Do nothing*/\n            };\n\n            const file = acceptedFiles.at(0);\n            file && reader.readAsText(file);\n        },\n        [onChange],\n    );\n\n    return (\n        <FileUploaderTemplate\n            multiple={false}\n            disabled={disabled}\n            accept={{\n                'application/json': ['.json'],\n            }}\n            onDrop={handleJsonFile}\n        />\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useContext, useState } from 'react';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { notificationActions, Variant } from '@nilfoundation/react-components';\nimport { CreateBid } from 'src/models';\nimport { AddBid, useAppSelector } from 'src/redux';\nimport { createBid } from 'src/api/market/BidsApi';\nimport { OrderManagementContext } from '../OrderManagementContextProvider';\nimport { CreateTradeOrderForm } from '../CreateTradeOrderForm';\nimport { PublicInput } from './PublicInput';\n\n/**\n * Create bid form.\n *\n * @returns React component.\n */\nexport const CreateBidForm = (): ReactElement => {\n    const { setProcessing } = useContext(OrderManagementContext);\n    const user = useAppSelector(s => s.userState.user)!;\n    const selectedCircuitId = useAppSelector(s => s.circuitsState.selectedid);\n    const dispatch = useDispatch();\n    const [errorMessage, setErrorMessage] = useState('');\n    const form = useForm<CreateBid>({\n        mode: 'onChange',\n        defaultValues: {\n            sender: user,\n            circuit_id: selectedCircuitId,\n        },\n    });\n\n    const onSubmitBid = form.handleSubmit(async (data: CreateBid): Promise<void> => {\n        setErrorMessage('');\n        setProcessing(true);\n        try {\n            const bid = await createBid(data);\n            dispatch(AddBid(bid));\n\n            const { cost, eval_time } = data;\n\n            notificationActions?.create({\n                title: 'Order successfully created',\n                message: `Cost: ${cost}${eval_time ? `, eval_time: ${eval_time}` : ''}`,\n                variant: Variant.success,\n            });\n            form.reset();\n        } catch (e) {\n            setErrorMessage('Create order error');\n        } finally {\n            setProcessing(false);\n        }\n    });\n\n    return (\n        <FormProvider {...form}>\n            <CreateTradeOrderForm\n                onSubmit={onSubmitBid}\n                errorMessage={errorMessage}\n            >\n                <PublicInput />\n            </CreateTradeOrderForm>\n        </FormProvider>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useState, useContext } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { notificationActions, Variant } from '@nilfoundation/react-components';\nimport { CreateAsk } from 'src/models';\nimport { AddAsk, useAppSelector } from 'src/redux';\nimport { createAsk } from 'src/api/market/AsksApi';\nimport { OrderManagementContext } from '../OrderManagementContextProvider';\nimport { CreateTradeOrderForm } from '../CreateTradeOrderForm';\n\n/**\n * Create ask form.\n *\n * @returns React component.\n */\nexport const CreateAskForm = (): ReactElement => {\n    const { setProcessing } = useContext(OrderManagementContext);\n    const user = useAppSelector(s => s.userState.user)!;\n    const selectedCircuitId = useAppSelector(s => s.circuitsState.selectedid);\n    const dispatch = useDispatch();\n    const [errorMessage, setErrorMessage] = useState('');\n    const form = useForm<CreateAsk>({\n        mode: 'onChange',\n        defaultValues: {\n            sender: user,\n            circuit_id: selectedCircuitId,\n        },\n    });\n\n    const onSubmitAsk = form.handleSubmit(async (data: CreateAsk): Promise<void> => {\n        setErrorMessage('');\n        setProcessing(true);\n        try {\n            const ask = await createAsk(data);\n            dispatch(AddAsk(ask));\n\n            const { cost, eval_time } = data;\n\n            notificationActions?.create({\n                title: 'Order successfully created',\n                message: `Cost: ${cost}${eval_time ? `, eval_time: ${eval_time}` : ''}`,\n                variant: Variant.success,\n            });\n            form.reset();\n        } catch (e) {\n            setErrorMessage(`Create order error`);\n        } finally {\n            setProcessing(false);\n        }\n    });\n\n    return (\n        <FormProvider {...form}>\n            <CreateTradeOrderForm\n                onSubmit={onSubmitAsk}\n                errorMessage={errorMessage}\n            />\n        </FormProvider>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useContext } from 'react';\nimport { Nav } from '@nilfoundation/react-components';\nimport { TradeOrderType } from 'src/models';\nimport { OrderManagementContext } from '../OrderManagementContextProvider';\n\n/**\n * Props.\n */\ntype OrderManagementTabsProps = {\n    currentTab: TradeOrderType;\n    onSetTab: (t: TradeOrderType) => void;\n};\n\n/**\n * Order management panel.\n *\n * @param {OrderManagementTabsProps} props Props.\n * @returns React component.\n */\nexport const CreateOrdersTabs = ({\n    currentTab,\n    onSetTab,\n}: OrderManagementTabsProps): ReactElement => {\n    const { processing } = useContext(OrderManagementContext);\n\n    return (\n        <Nav justified>\n            {Object.values(TradeOrderType).map(t => (\n                <Nav.Item\n                    key={t}\n                    onClick={() => onSetTab(t)}\n                    active={t === currentTab}\n                    disabled={processing}\n                >\n                    {t}\n                </Nav.Item>\n            ))}\n        </Nav>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useState } from 'react';\nimport { useAppSelector } from 'src/redux';\nimport { TradeOrderType } from 'src/models';\nimport { DashboardCard, Details } from '../../common';\nimport { ProtectedContent } from '../../login';\nimport { CreateBidForm } from '../CreateBidForm';\nimport { CreateAskForm } from '../CreateAskForm';\nimport { CreateOrdersTabs } from './CreateOrdersTabs';\nimport './CreateOrdersPanel.scss';\n\n/**\n * Create orders panel.\n *\n * @returns React component.\n */\nexport const CreateOrdersPanel = (): ReactElement => {\n    const [tab, setTab] = useState<TradeOrderType>(TradeOrderType.buy);\n    const selectedCircuitId = useAppSelector(s => s.circuitsState.selectedid);\n\n    return (\n        <DashboardCard>\n            <Details title={<h4>Create orders</h4>}>\n                <div className=\"cerateOrdersPanel\">\n                    <ProtectedContent overlayTitle=\"Authorization is required to create orders\">\n                        <CreateOrdersTabs\n                            currentTab={tab}\n                            onSetTab={setTab}\n                        />\n                        {tabFactory(tab, selectedCircuitId)}\n                    </ProtectedContent>\n                </div>\n            </Details>\n        </DashboardCard>\n    );\n};\n\n/**\n * Renders tab content conditionally.\n *\n * @param tab Selected tab.\n * @param selectedCircuitId Selected circuit id.\n * @returns React Element.\n */\nconst tabFactory = (tab: TradeOrderType, selectedCircuitId?: string) => {\n    if (selectedCircuitId === undefined) {\n        return <h5>Please, select circuit to create orders.</h5>;\n    }\n\n    switch (tab) {\n        case TradeOrderType.buy:\n            return <CreateBidForm />;\n        case TradeOrderType.sell:\n            return <CreateAskForm />;\n        default:\n            return <></>;\n    }\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, memo, useCallback } from 'react';\nimport { Row, TableInstance, TableState } from 'react-table';\nimport { TradeHistoryData, TradeHistoryTableColumn } from 'src/models';\nimport { ReactTable, TRow, TCell } from 'src/components';\nimport { renderDashOnEmptyValue } from 'src/utils';\nimport styles from './TradeHistory.module.scss';\n\n/**\n * Props.\n */\ntype TradeHistoryTableProps = {\n    columns: TradeHistoryTableColumn[];\n    data: TradeHistoryData[];\n};\n\n/**\n * Initial table state without user interactions.\n */\nconst defaultTableState: Partial<TableState<TradeHistoryData>> = {\n    sortBy: [\n        {\n            id: 'timestamp',\n            desc: true,\n        },\n    ],\n    hiddenColumns: ['type'],\n};\n\n/**\n * Order book table.\n *\n * @param {TradeHistoryTableProps} props Props.\n * @returns React component.\n */\nexport const TradeHistoryTable = memo(function TradeHistoryTable({\n    columns,\n    data,\n}: TradeHistoryTableProps): ReactElement {\n    const renderRows = useCallback(\n        ({ rows, prepareRow }: TableInstance<TradeHistoryData>) =>\n            rows.map(row => {\n                prepareRow(row);\n                return (\n                    <TRow\n                        {...row.getRowProps()}\n                        key={row.id}\n                    >\n                        {row.cells.map(cell => {\n                            const { value, column, getCellProps } = cell;\n                            const { key, ...rest } = getCellProps();\n\n                            return (\n                                <TCell\n                                    className={getCellClassName(row)}\n                                    key={key}\n                                    {...rest}\n                                >\n                                    {column.id !== 'timestamp'\n                                        ? renderDashOnEmptyValue(value)\n                                        : value}\n                                </TCell>\n                            );\n                        })}\n                    </TRow>\n                );\n            }),\n        [],\n    );\n\n    return (\n        <ReactTable\n            name=\"tradeHistoryTable\"\n            className={styles.table}\n            data={data}\n            columns={columns}\n            disableSortRemove={true}\n            renderRows={renderRows}\n            initialState={defaultTableState}\n        />\n    );\n});\n\n/**\n * Generate className to table cell.\n *\n * @param row Row.\n * @returns Class name.\n */\nconst getCellClassName = (row: Row<TradeHistoryData>) => {\n    if (row.values.type === undefined) {\n        return undefined;\n    }\n\n    return `${row.values.type}TextColor`;\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Spinner } from '@nilfoundation/react-components';\nimport { useGetTradeHistoryData, UseGetTradeHistoryDataReturnType } from 'src/hooks';\nimport { Details, DashboardCard } from '../../common';\nimport { TradeHistoryTable } from './TradeHistoryTable';\nimport styles from './TradeHistory.module.scss';\n\n/**\n * Trade history component.\n *\n * @returns React component.\n */\nexport const TradeHistory = (): ReactElement => {\n    const data = useGetTradeHistoryData();\n\n    return (\n        <DashboardCard>\n            <Details title={<h4>Trades</h4>}>\n                <div className={styles.container}>{TradeHistoryViewFactory({ ...data })}</div>\n            </Details>\n        </DashboardCard>\n    );\n};\n\n/**\n * Renders trade history view.\n *\n * @param {UseGetTradeHistoryDataReturnType} props Props.\n * @returns React element.\n */\nconst TradeHistoryViewFactory = ({\n    data,\n    columns,\n    loadingData,\n    isError,\n}: UseGetTradeHistoryDataReturnType) => {\n    switch (true) {\n        case loadingData && !data.length:\n            return <Spinner grow />;\n        case isError:\n            return <h5>Error while loading data.</h5>;\n        case !!data.length:\n            return (\n                <TradeHistoryTable\n                    data={data}\n                    columns={columns}\n                />\n            );\n        default:\n            return <h5>Empty history.</h5>;\n    }\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Nav } from '@nilfoundation/react-components';\nimport { ManageOrdersTab } from './ManageOrdersTab';\n\n/**\n * Props.\n */\ntype ManageOrdersPanelTabsProps = {\n    currentTab: ManageOrdersTab;\n    onSetTab: (t: ManageOrdersTab) => void;\n};\n\n/**\n * Manage orders panel tabs.\n *\n * @param {ManageOrdersPanelTabsProps} props Props.\n * @returns React component.\n */\nexport const ManageOrdersPanelTabs = ({\n    currentTab,\n    onSetTab,\n}: ManageOrdersPanelTabsProps): ReactElement => {\n    return (\n        <Nav justified>\n            {Object.values(ManageOrdersTab).map(t => (\n                <Nav.Item\n                    key={t}\n                    onClick={() => onSetTab(t)}\n                    active={t === currentTab}\n                >\n                    {t}\n                </Nav.Item>\n            ))}\n        </Nav>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Button, Size, Variant, Spinner } from '@nilfoundation/react-components';\n\n/**\n * Props.\n */\ntype ToolbarPanelProps = {\n    onAccept: () => void;\n    onDecline: () => void;\n    processing: boolean;\n    message?: string;\n};\n\n/**\n * Toolbar panel.\n *\n * @param {ToolbarPanelProps} props Props.\n * @returns React component.\n */\nexport const ToolbarPanel = ({\n    onAccept,\n    onDecline,\n    processing,\n    message,\n}: ToolbarPanelProps): ReactElement => {\n    return (\n        <div className=\"toolbarPanel\">\n            {message && <div className=\"message\">{message}</div>}\n            <div className=\"buttons\">\n                <Button\n                    onClick={onAccept}\n                    variant={Variant.success}\n                    size={Size.lg}\n                    disabled={processing}\n                    block\n                >\n                    Yes\n                    {processing && <Spinner />}\n                </Button>\n                <Button\n                    onClick={onDecline}\n                    variant={Variant.danger}\n                    size={Size.lg}\n                    disabled={processing}\n                    block\n                >\n                    No\n                </Button>\n            </div>\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, memo, useCallback, useState } from 'react';\nimport { Cell, Column, Row, TableInstance, TableState } from 'react-table';\nimport { Icon } from '@nilfoundation/react-components';\nimport { useDispatch } from 'react-redux';\nimport { ManageOrdersData, TradeOrderType } from 'src/models';\nimport { ReactTable, TRow, TCell, ClicableIcon } from 'src/components';\nimport { removeAsk, removeBid } from 'src/api';\nimport { RemoveAsk, RemoveBid } from 'src/redux';\nimport { renderDashOnEmptyValue } from 'src/utils';\nimport { useAuth } from 'src/hooks';\nimport { ToolbarPanel } from './ToolbarPanel';\n\n/**\n * Props.\n */\ntype ActiveOrdersTableProps = {\n    data: ManageOrdersData[];\n};\n\n/**\n * Table columns.\n */\nconst columns: Column<ManageOrdersData>[] = [\n    {\n        accessor: 'status',\n        disableSortBy: true,\n    },\n    {\n        Header: 'Time',\n        accessor: 'init_time',\n    },\n    {\n        Header: 'Type',\n        accessor: 'type',\n    },\n    {\n        Header: 'Cost',\n        accessor: 'cost',\n    },\n    {\n        Header: 'Gen time',\n        accessor: 'eval_time',\n    },\n    {\n        accessor: 'orderId',\n        disableSortBy: true,\n    },\n];\n\n/**\n * Initial table state without user interactions.\n */\nconst defaultTableState: Partial<TableState<ManageOrdersData>> = {\n    sortBy: [\n        {\n            id: 'init_time',\n            desc: true,\n        },\n    ],\n};\n\n/**\n * Active orders table.\n *\n * @param {ActiveOrdersTableProps} props Props.\n * @returns React component.\n */\nexport const ActiveOrdersTable = memo(function ActiveOrdersTable({\n    data,\n}: ActiveOrdersTableProps): ReactElement {\n    const [selectedRow, setSelectedRow] = useState<Row<ManageOrdersData> | null>(null);\n    const [processing, setProcessing] = useState(false);\n    const dispatch = useDispatch();\n    const { isReadonly } = useAuth();\n\n    const onAcceptRemoveOrder = useCallback(async () => {\n        setProcessing(true);\n\n        if (!selectedRow) {\n            return;\n        }\n\n        try {\n            const { orderId, type } = selectedRow.values;\n            const fetcher = type === TradeOrderType.buy ? removeBid : removeAsk;\n            const action = type === TradeOrderType.buy ? RemoveBid : RemoveAsk;\n\n            await fetcher(orderId);\n            dispatch(action(orderId));\n            setSelectedRow(null);\n        } catch (e) {\n            // TODO Handle error\n        } finally {\n            setProcessing(false);\n        }\n    }, [setProcessing, selectedRow, setSelectedRow, dispatch]);\n\n    const onDecline = useCallback(() => {\n        setSelectedRow(null);\n    }, [setSelectedRow]);\n\n    const renderRow = useCallback(\n        (\n            row: Row<ManageOrdersData>,\n            prepareRow: (r: Row<ManageOrdersData>) => void,\n            canRemove = false,\n        ) => {\n            prepareRow(row);\n\n            return (\n                <TRow\n                    {...row.getRowProps()}\n                    key={row.id}\n                >\n                    {row.cells.map(cell => {\n                        const { value, column, getCellProps } = cell;\n                        const { key, ...rest } = getCellProps();\n\n                        if (column.id === 'status') {\n                            const icon = `fa-solid fa-${\n                                value === 'created' ? 'circle-plus' : 'spinner'\n                            }`;\n\n                            return (\n                                <TCell\n                                    key={key}\n                                    {...rest}\n                                >\n                                    <Icon\n                                        title={value}\n                                        iconName={icon}\n                                    />\n                                </TCell>\n                            );\n                        }\n\n                        if (column.id === 'orderId') {\n                            return canRemove ? (\n                                <TCell\n                                    key={key}\n                                    {...rest}\n                                >\n                                    <ClicableIcon\n                                        iconName=\"fa-solid fa-ban\"\n                                        disabled={isReadonly || processing}\n                                        onClick={() => setSelectedRow(cell.row)}\n                                    />\n                                </TCell>\n                            ) : (\n                                <></>\n                            );\n                        }\n\n                        const shouldUseToFixed = column.id === 'eval_time' || column.id === 'cost';\n\n                        return (\n                            <TCell\n                                className={getCellClassName(cell)}\n                                key={key}\n                                {...rest}\n                            >\n                                <span>\n                                    {shouldUseToFixed ? renderDashOnEmptyValue(value) : value}\n                                </span>\n                            </TCell>\n                        );\n                    })}\n                </TRow>\n            );\n        },\n        [processing, setSelectedRow, isReadonly],\n    );\n\n    const renderRows = useCallback(\n        ({ rows, prepareRow }: TableInstance<ManageOrdersData>) => {\n            const activeOrders = rows.filter(x => x.values.status === 'created');\n            const inProgressOrders = rows.filter(x => x.values.status === 'processing');\n\n            return (\n                <>\n                    {activeOrders.length !== 0 &&\n                        activeOrders.map(x => renderRow(x, prepareRow, true))}\n                    {inProgressOrders.length !== 0 &&\n                        inProgressOrders.map(x => renderRow(x, prepareRow))}\n                </>\n            );\n        },\n        [renderRow],\n    );\n\n    return (\n        <>\n            <ReactTable\n                name=\"activeOrdersTable\"\n                className=\"activeOrdersTable\"\n                data={data}\n                columns={columns}\n                renderRows={renderRows}\n                disableSortRemove={true}\n                initialState={defaultTableState}\n            />\n            {selectedRow !== null && (\n                <ToolbarPanel\n                    onAccept={onAcceptRemoveOrder}\n                    onDecline={onDecline}\n                    processing={processing}\n                    message=\"Proceed removing order?\"\n                />\n            )}\n        </>\n    );\n});\n\n/**\n * Generate className to table cell.\n *\n * @param cell Cell.\n * @returns Class name.\n */\nconst getCellClassName = (cell: Cell<ManageOrdersData>) => {\n    if (cell.column.id !== 'type') {\n        return undefined;\n    }\n\n    return `${cell.value === TradeOrderType.buy ? 'grow' : 'loss'}TextColor`;\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, memo, useCallback } from 'react';\nimport { Cell, Column, TableInstance, TableState } from 'react-table';\nimport { ManageOrdersData, TradeOrderType } from 'src/models';\nimport { ReactTable, TRow, TCell } from 'src/components';\nimport { renderDashOnEmptyValue } from 'src/utils';\n\n/**\n * Props.\n */\ntype HistoryOrdersTableProps = {\n    data: ManageOrdersData[];\n};\n\n/**\n * Table columns.\n */\nconst columns: Column<ManageOrdersData>[] = [\n    {\n        Header: 'Time',\n        accessor: 'timestamp',\n    },\n    {\n        Header: 'Type',\n        accessor: 'type',\n    },\n    {\n        Header: 'Cost',\n        accessor: 'cost',\n    },\n    {\n        Header: 'Generation time',\n        accessor: 'eval_time',\n    },\n];\n\n/**\n * Initial table state without user interactions.\n */\nconst defaultTableState: Partial<TableState<ManageOrdersData>> = {\n    sortBy: [\n        {\n            id: 'timestamp',\n            desc: true,\n        },\n    ],\n};\n\n/**\n * History orders table.\n *\n * @param {HistoryOrdersTableProps} props Props.\n * @returns React component.\n */\nexport const HistoryOrdersTable = memo(function ActiveOrdersTable({\n    data,\n}: HistoryOrdersTableProps): ReactElement {\n    const renderRows = useCallback(\n        ({ rows, prepareRow }: TableInstance<ManageOrdersData>) =>\n            rows.map(row => {\n                prepareRow(row);\n                return (\n                    <TRow\n                        {...row.getRowProps()}\n                        key={row.id}\n                    >\n                        {row.cells.map(cell => {\n                            const { value, column, getCellProps } = cell;\n                            const { key, ...rest } = getCellProps();\n                            const shouldUseToFixed =\n                                column.id === 'eval_time' || column.id === 'cost';\n\n                            return (\n                                <TCell\n                                    className={getCellClassName(cell)}\n                                    key={key}\n                                    {...rest}\n                                >\n                                    <span>\n                                        {shouldUseToFixed ? renderDashOnEmptyValue(value) : value}\n                                    </span>\n                                </TCell>\n                            );\n                        })}\n                    </TRow>\n                );\n            }),\n        [],\n    );\n\n    return (\n        <ReactTable\n            name=\"historyOrdersTable\"\n            className=\"historyOrdersTable\"\n            data={data}\n            columns={columns}\n            disableSortRemove={true}\n            renderRows={renderRows}\n            initialState={defaultTableState}\n        />\n    );\n});\n\n/**\n * Generate className to table cell.\n *\n * @param cell Cell.\n * @returns Class name.\n */\nconst getCellClassName = (cell: Cell<ManageOrdersData>) => {\n    if (cell.column.id !== 'type') {\n        return undefined;\n    }\n\n    return `${cell.value === TradeOrderType.buy ? 'grow' : 'loss'}TextColor`;\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useState } from 'react';\nimport { Spinner } from '@nilfoundation/react-components';\nimport { useAppSelector } from 'src/redux';\nimport { useGetManageOrdersData } from 'src/hooks';\nimport { ManageOrdersData } from 'src/models';\nimport { DashboardCard, Details } from '../../common';\nimport { ProtectedContent } from '../../login';\nimport { ManageOrdersTab } from './ManageOrdersTab';\nimport { ManageOrdersPanelTabs } from './ManageOrdersPanelTabs';\nimport { ActiveOrdersTable } from './ActiveOrdersTable';\nimport { HistoryOrdersTable } from './HistoryOrdersTable';\nimport './ManageOrdersPanel.scss';\n\n/**\n * Manage orders panel.\n *\n * @returns React component.\n */\nexport const ManageOrdersPanel = (): ReactElement => {\n    const [tab, setTab] = useState<ManageOrdersTab>(ManageOrdersTab.active);\n    const selectedCircuitId = useAppSelector(s => s.circuitsState.selectedid);\n    const { isError, loadingData, activeOrdersData, historyOrdersData } = useGetManageOrdersData();\n\n    return (\n        <DashboardCard>\n            <Details title={<h4>Manage orders</h4>}>\n                <div className=\"manageOrdersPanel\">\n                    <ProtectedContent overlayTitle=\"Authorization is required to manage orders\">\n                        <ManageOrdersPanelTabs\n                            currentTab={tab}\n                            onSetTab={setTab}\n                        />\n                        {selectedCircuitId !== undefined ? (\n                            tabFactory(\n                                tab,\n                                isError,\n                                loadingData,\n                                tab === ManageOrdersTab.active\n                                    ? activeOrdersData\n                                    : historyOrdersData,\n                            )\n                        ) : (\n                            <h5>Please, select circuit to display orders.</h5>\n                        )}\n                    </ProtectedContent>\n                </div>\n            </Details>\n        </DashboardCard>\n    );\n};\n\n/**\n * Renders tab content conditionally.\n *\n * @param tab - Tab.\n * @param error - Error.\n * @param loading - Loading.\n * @param data - Data.\n * @returns React Element.\n */\nconst tabFactory = (\n    tab: ManageOrdersTab,\n    error: boolean,\n    loading: boolean,\n    data: ManageOrdersData[],\n) => {\n    if (error) {\n        return <h5>Error while loading data.</h5>;\n    }\n\n    if (data.length === 0) {\n        return loading ? <Spinner grow /> : <h5>No orders.</h5>;\n    }\n\n    switch (tab) {\n        case ManageOrdersTab.active:\n            return <ActiveOrdersTable data={data} />;\n        case ManageOrdersTab.history:\n            return <HistoryOrdersTable data={data} />;\n        default:\n            return <></>;\n    }\n};\n","/**\n * @file React context.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createContext } from 'react';\n\n/**\n * Context type.\n */\ntype SelectedProofContextModel = {\n    selectedProofId?: number;\n    setSelectedProofId: (id?: number) => void;\n};\n\n/**\n * Selected proof context.\n */\nexport const SelectedProofContext = createContext<SelectedProofContextModel>(\n    {} as SelectedProofContextModel,\n);\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, ReactNode } from 'react';\nimport { useProofIdState } from 'src/hooks';\nimport { SelectedProofContext } from './SelectedProofContext';\n\n/**\n * Poprs.\n */\ntype SelectedProofContextProviderProps = {\n    children?: ReactNode;\n};\n\n/**\n * Selected proof context provider.\n *\n * @param {SelectedProofContextProviderProps} props Props.\n * @returns React component.\n */\nexport const SelectedProofContextProvider = ({\n    children,\n}: SelectedProofContextProviderProps): ReactElement => {\n    const [selectedProofId, setSelectedProofId] = useProofIdState();\n\n    return (\n        <SelectedProofContext.Provider value={{ selectedProofId, setSelectedProofId }}>\n            {children}\n        </SelectedProofContext.Provider>\n    );\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { Dispatch, SetStateAction, useState } from 'react';\nimport { dequal as deepEqual } from 'dequal';\nimport { selectPartialProofList, useAppSelector } from 'src/redux';\n\n/**\n * Hook to manage selected proof id state.\n *\n * @returns Proof id state.\n */\nexport const useProofIdState = (): [\n    number | undefined,\n    Dispatch<SetStateAction<number | undefined>>,\n] => {\n    const [selectedProofId, setSelectedProofId] = useState<number>();\n\n    const proofs = useAppSelector(selectPartialProofList, deepEqual);\n\n    if (selectedProofId === undefined && proofs.length) {\n        setSelectedProofId(proofs.at(0)?.id);\n    }\n\n    return [selectedProofId, setSelectedProofId];\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useContext } from 'react';\nimport { ListGroup, Media, Spinner } from '@nilfoundation/react-components';\nimport { selectPartialProofList, useAppSelector } from 'src/redux';\nimport { DashboardCard } from 'src/components/common';\nimport { SelectedProofContext } from '../SelectedProofContextProvider';\nimport './ProofList.scss';\n\n/**\n * Proof list.\n *\n * @returns React component.\n */\nexport const ProofList = (): ReactElement => {\n    const proofList = useAppSelector(selectPartialProofList);\n    const loadingProofs = useAppSelector(s => s.proofState.isLoadingProofs);\n    const getProofsError = useAppSelector(s => s.proofState.error);\n\n    return (\n        <DashboardCard className=\"proofList\">\n            <h4>Proof list</h4>\n            {ProofListViewFactory(proofList, loadingProofs, getProofsError)}\n        </DashboardCard>\n    );\n};\n\n/**\n * Conditionally renders proof data. First true case renders.\n *\n * @param proofList Proof list.\n * @param loadingProofs Proofs loading state.\n * @param getProofsError Proofs loading error.\n * @returns View, based on proof data state.\n */\nconst ProofListViewFactory = (\n    proofList: ReturnType<typeof selectPartialProofList>,\n    loadingProofs: boolean,\n    getProofsError: boolean,\n) => {\n    const { selectedProofId, setSelectedProofId } = useContext(SelectedProofContext);\n    switch (true) {\n        case loadingProofs:\n            return <Spinner grow />;\n        case getProofsError:\n            return <h5>Error while getting proofs.</h5>;\n        case !!proofList.length:\n            return (\n                <ListGroup>\n                    {proofList.map(x => (\n                        <ListGroup.Item\n                            key={x.id}\n                            onClick={() => setSelectedProofId(x.id)}\n                            active={x.id === selectedProofId}\n                        >\n                            <Media>\n                                <Media.Body>\n                                    <Media.Heading>{`id: ${x.id}`}</Media.Heading>\n                                    {`bid_id: ${x.bid_id}`}\n                                </Media.Body>\n                            </Media>\n                        </ListGroup.Item>\n                    ))}\n                </ListGroup>\n            );\n        default:\n            <h5>No proofs.</h5>;\n    }\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { KeyboardEventHandler, ReactElement } from 'react';\nimport { Button, Icon, Size, Variant } from '@nilfoundation/react-components';\nimport { ProofDto } from 'src/models';\nimport { useDownloadJsonFile } from 'src/hooks';\n\n/**\n * Props.\n */\ntype ProofViewHeaderProps = {\n    proof?: ProofDto;\n};\n\n/**\n * Proof view header.\n *\n * @param {ProofViewHeaderProps} props Props.\n * @returns React component.\n */\nexport const ProofViewHeader = ({ proof }: ProofViewHeaderProps): ReactElement => {\n    const downloadJson = useDownloadJsonFile(`proof-${proof?.id}`, JSON.stringify(proof));\n\n    const keyDownHandler: KeyboardEventHandler = e => {\n        if (e.key !== 'Enter' && e.key !== ' ') {\n            return;\n        }\n\n        downloadJson();\n    };\n\n    return (\n        <div className=\"proofViewHeader\">\n            <h4>Proof detailed info</h4>\n            <Button\n                variant={Variant.success}\n                disabled={proof === undefined}\n                size={Size.sm}\n                onClick={downloadJson}\n                onKeyDown={keyDownHandler}\n                aria-label=\"Download proof as JSON file\"\n            >\n                <Icon iconName=\"fa-solid fa-download\" />\n                JSON\n            </Button>\n        </div>\n    );\n};\n","/**\n * @file React hook.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { useCallback } from 'react';\n\n/**\n * Hook to download data as json.\n *\n * @param fileName Name of downloaded file.\n * @param [data] Data.\n * @returns Callback to download data as json file.\n */\nexport const useDownloadJsonFile = (fileName: string, data?: BlobPart): (() => void) => {\n    const downloadJson = useCallback(() => {\n        if (!data) {\n            return;\n        }\n\n        const blob = new Blob([data], { type: 'text/json' });\n\n        const a = document.createElement('a');\n        a.download = `${fileName}.json`;\n        a.href = window.URL.createObjectURL(blob);\n\n        const clickEvt = new MouseEvent('click', {\n            view: window,\n            bubbles: true,\n            cancelable: true,\n        });\n\n        a.dispatchEvent(clickEvt);\n        a.remove();\n    }, [data, fileName]);\n\n    return downloadJson;\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport ReactJson from 'react-json-view';\nimport { jsonViewerTheme } from 'src/constants';\nimport { ProofDto } from 'src/models';\n\n/**\n * Props.\n */\ntype ProofViewJsonProps = {\n    proof: ProofDto;\n};\n\n/**\n * Proof JSON view.\n *\n * @param {ProofViewJsonProps} props Props.\n * @returns React component.\n */\nexport const ProofViewJson = ({ proof }: ProofViewJsonProps): ReactElement => {\n    return (\n        <div className=\"proofJsonViewContainer\">\n            <ReactJson\n                src={proof}\n                name={null}\n                displayDataTypes={false}\n                displayObjectSize={false}\n                collapseStringsAfterLength={600}\n                theme={jsonViewerTheme}\n            />\n        </div>\n    );\n};\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, useContext } from 'react';\nimport { Spinner } from '@nilfoundation/react-components';\nimport { useAppSelector } from 'src/redux';\nimport { DashboardCard } from 'src/components';\nimport { Proof } from 'src/models';\nimport { SelectedProofContext } from '../SelectedProofContextProvider';\nimport { ProofViewHeader } from './ProofViewHeader';\nimport { ProofViewJson } from './ProofViewJson';\nimport './ProofView.scss';\n\n/**\n * Proof view.\n *\n * @returns React component.\n */\nexport const ProofView = (): ReactElement => {\n    const { selectedProofId } = useContext(SelectedProofContext);\n    const isLoadingProofs = useAppSelector(s => s.proofState.isLoadingProofs);\n    const proofData = useAppSelector(s => s.proofState.proofs.find(x => x.id === selectedProofId));\n\n    return (\n        <DashboardCard className=\"proofView\">\n            <ProofViewHeader proof={proofData} />\n            {ProofViewFactory(isLoadingProofs, proofData)}\n        </DashboardCard>\n    );\n};\n\n/**\n * Conditionally renders proof data. First true case renders.\n *\n * @param loadingProofs Loading proof data from dbms.\n * @param proof Proof data.\n * @returns View, based on proof data state.\n */\nconst ProofViewFactory = (loadingProofs: boolean, proof?: Proof) => {\n    switch (true) {\n        case loadingProofs:\n            return <Spinner grow />;\n        case proof !== undefined:\n            return <ProofViewJson proof={proof!} />;\n        default:\n            <h5>No proof data was found.</h5>;\n    }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"RegisterForm_title__2dkIs\",\"description\":\"RegisterForm_description__1yOmq\",\"social\":\"RegisterForm_social__3q7C8\",\"control\":\"RegisterForm_control__11GP7\",\"form\":\"RegisterForm_form__35kd2\",\"successMessage\":\"RegisterForm_successMessage__PK7f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"CircuitInfoPanel_panel__1wG2C\",\"container\":\"CircuitInfoPanel_container__2Tz7U\",\"title\":\"CircuitInfoPanel_title__3PHJ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoImage\":\"LoginForm_logoImage__1IRVH\",\"icon\":\"LoginForm_icon__TLw57\",\"control\":\"LoginForm_control__1eG7g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__3FziC\",\"tableHead\":\"Table_tableHead__2OCzy\",\"footerHead\":\"Table_footerHead__1TW8b\",\"stickyHead\":\"Table_stickyHead__3xNZn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailsTitle\":\"CreateTradeOrderForm_detailsTitle__75pkC\",\"control\":\"CreateTradeOrderForm_control__3Wls7\"};","/**\n * @file Api.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { Bid, CreateBid } from 'src/models';\nimport { createBearerHttpClient } from '../common';\n\nconst databaseUrl = `_db/${process.env.REACT_APP_DBMS_DEFAULT_DATABASE}`;\nconst apiUrl = `${databaseUrl}/_api/`;\nconst httpFetcher = createBearerHttpClient(apiUrl);\n\nconst createFetcher = createBearerHttpClient('/market/bid');\n\n/**\n * Get bids.\n *\n * @param circuitId Circuit id.\n * @returns Bids.\n */\nexport const getBidsByCircuitId = (circuitId: string): Promise<Bid[]> =>\n    httpFetcher\n        .post('cursor', {\n            query: `\n                FOR x IN @@relation\n                    FILTER x.circuit_id == ${circuitId}\n                    RETURN x`,\n            bindVars: {\n                '@relation': 'bid',\n            },\n            batchSize: 10000,\n        })\n        .then((x: any) => x.result);\n\n/**\n * Create Bid.\n *\n * @param data - Bid dto.\n * @returns Bid.\n */\nexport const createBid = (data: CreateBid): Promise<Bid> =>\n    createFetcher.post('', data).then((x: any) => x);\n\n/**\n * Remove Bid.\n *\n * @param bidToRemoveId Bid to remove id.\n * @returns Ask.\n */\nexport const removeBid = (bidToRemoveId: Bid['id']): Promise<void> =>\n    httpFetcher\n        .post('cursor', {\n            query: `\n            FOR x IN @@relation\n                FILTER x.id == ${bidToRemoveId}\n                REMOVE { _key: x._key } IN @@relation\n            `,\n            bindVars: {\n                '@relation': 'bid',\n            },\n        })\n        .then((x: any) => x.result);\n","/**\n * @file Api.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { Ask, CreateAsk } from '../../models';\nimport { createBearerHttpClient } from '../common';\n\nconst databaseUrl = `_db/${process.env.REACT_APP_DBMS_DEFAULT_DATABASE}`;\nconst apiUrl = `${databaseUrl}/_api/`;\nconst httpFetcher = createBearerHttpClient(apiUrl);\n\nconst createFetcher = createBearerHttpClient('/market/ask');\n\n/**\n * Get asks.\n *\n * @param circuitId Circuit id.\n * @returns Asks.\n */\nexport const getAsksByCircuitId = (circuitId: string): Promise<Ask[]> =>\n    httpFetcher\n        .post('cursor', {\n            query: `\n                FOR x IN @@relation\n                FILTER x.circuit_id == ${circuitId}\n                RETURN x`,\n            bindVars: {\n                '@relation': 'ask',\n            },\n            batchSize: 10000,\n        })\n        .then((x: any) => x.result);\n\n/**\n * Create Ask.\n *\n * @param data Ask dto.\n * @returns Ask.\n */\nexport const createAsk = (data: CreateAsk): Promise<Ask> => createFetcher.post('', data);\n\n/**\n * Remove Ask.\n *\n * @param askToRemoveId Ask to remove id.\n * @returns Ask.\n */\nexport const removeAsk = (askToRemoveId: Ask['id']): Promise<void> =>\n    httpFetcher.post('cursor', {\n        query: `\n            FOR x IN @@relation\n                FILTER x.id == ${askToRemoveId}\n                REMOVE { _key: x._key } IN @@relation\n            `,\n        bindVars: {\n            '@relation': 'ask',\n        },\n    });\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TradeHistory_container__1JvuS\",\"table\":\"TradeHistory_table__3qP19\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"UserMenu_dropdown__1lDHS\",\"button\":\"UserMenu_button__1HAKP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumbs\":\"Breadcrumbs_breadcrumbs__1_0bQ\",\"item\":\"Breadcrumbs_item__wXuDg\",\"active\":\"Breadcrumbs_active__2ubF0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__2uQq1\",\"nav\":\"Header_nav__hD99J\",\"navbar\":\"Header_navbar__25ekV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"socialLinks\":\"SocialLinks_socialLinks__j4XIK\",\"bottomIndent\":\"SocialLinks_bottomIndent__2OAp6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"MobileMenu_menu__3eb25\",\"button\":\"MobileMenu_button__2Cjo_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"AuthContainer_loginContainer__3AkV9\",\"copyright\":\"AuthContainer_copyright__2DGTy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Details_title__7XfVG\",\"bottomIndent\":\"Details_bottomIndent__1rV3q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chartLegend\":\"ChartLegend_chartLegend__3J6ik\",\"chartName\":\"ChartLegend_chartName__12Pfj\"};","/**\n * @file Utility function.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport jwt_decode from 'jwt-decode';\n\n/**\n * Parse jwt to get username.\n *\n * @param jwt - Jwt.\n * @throws Will throw an error if can't get user from token.\n * @returns Username or null.\n */\nexport const getUserFromJwt = (jwt: string): string => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const decoded: any = jwt_decode(jwt);\n\n    if (!decoded || !decoded.preferred_username) {\n        throw new Error('Invalid token!');\n    }\n\n    return decoded.preferred_username as string;\n};\n","/**\n * @file Utility function.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport dayjs from 'dayjs';\n\n/**\n * Format UTCTimestamp.\n *\n * @param timestamp - Timestamp.\n * @param format Format.\n * @returns Formatted timestamp string.\n */\nexport const formatUTCTimestamp = (timestamp: number, format: string): string =>\n    dayjs(timestamp * 1000).format(format);\n","/**\n * @file Utility function.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { DateUnit } from 'src/enums';\n\n/**\n * Round date string to provided time value. Always rounds down.\n *\n * @param dateString Date string.\n * @param floorTo Round date to.\n * @returns Date.\n */\nexport const floorDateTo = (dateString: string, floorTo: DateUnit): Date => {\n    const date = new Date(dateString);\n\n    switch (floorTo) {\n        case DateUnit.minute:\n            date.setSeconds(0, 0);\n            break;\n        case DateUnit.quaterMinute:\n            floorToQuaterMinute(date);\n            break;\n        case DateUnit.halfHour:\n            date.setMinutes(date.getMinutes() >= 30 ? 30 : 0, 0, 0);\n            break;\n        case DateUnit.hour:\n            date.setMinutes(0, 0, 0);\n            break;\n        case DateUnit.day:\n            date.setHours(0, 0, 0, 0);\n            break;\n    }\n\n    return date;\n};\n\nconst floorToQuaterMinute = (date: Date): void => {\n    const minutes = date.getMinutes();\n    let minutesToSet = 0;\n\n    if (minutes >= 15 && minutes < 30) {\n        minutesToSet = 15;\n    }\n\n    if (minutes >= 30 && minutes < 45) {\n        minutesToSet = 30;\n    }\n\n    if (minutes >= 45) {\n        minutesToSet = 45;\n    }\n\n    date.setMinutes(minutesToSet, 0, 0);\n};\n","/**\n * @file Utility function.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { UTCTimestamp } from 'lightweight-charts';\nimport { DateUnit } from 'src/enums';\nimport { floorDateTo } from './floorDateTo';\n\n/**\n * Get UTCTimestamp from date string.\n *\n * @param dateString - Date string.\n * @param floorTo - Date unit floor to.\n * @returns UTCTimestamp.\n */\nexport const getUTCTimestamp = (dateString: string, floorTo?: DateUnit): UTCTimestamp => {\n    const date = floorTo ? floorDateTo(dateString, floorTo) : new Date(dateString);\n\n    return Math.trunc(date.getTime() / 1000) as UTCTimestamp;\n};\n","/**\n * @file Utility function.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport dayjs from 'dayjs';\n\n/**\n * Formats date string.\n *\n * @param dateString - Date string.\n * @param format - Format.\n * @returns Formatted date string representation.\n */\nexport const formatDate = (dateString: string, format: string): string =>\n    dayjs(dateString).format(format);\n","/**\n * @file Utility function.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Drops all nullable values from array in a type safe manner.\n *\n * @param value Any value.\n * @returns Filtered array with only nonNullable values.\n */\nexport const notEmpty = <T>(value: T): value is NonNullable<T> => {\n    return value !== null && value !== undefined;\n};\n","/**\n * @file Utility function.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Renders value or long dash symbol if value is empty.\n *\n * @param value Numeric value.\n * @param [fractionDigits] Number of digits after the value decimal point.\n * @returns Value or long dash symbol.\n */\nexport const renderDashOnEmptyValue = (value?: number, fractionDigits = 4): string =>\n    value ? value?.toFixed(fractionDigits) : longDash;\n\n/**\n * Long dash HTML symbol.\n */\nconst longDash = '—';\n","/**\n * @file Regexp.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Regexp to validate emails.\n */\nexport const emailRegExp = /^(.+)@(.+)$/i;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__PzL7i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authCard\":\"AuthCard_authCard__aQdMN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProtectedContent_container__w-v9m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboardCard\":\"DashboardCard_dashboardCard__fXvxj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sortableColumnHeader\":\"ReactTable_sortableColumnHeader__1IJqY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullScreenView\":\"FullScreenView_fullScreenView__3q9rV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ClicableIcon_button__qhkwu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Overlay_overlay__3RcD2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"priceChangeIndicator\":\"PriceChangeIndicator_priceChangeIndicator__1WYpS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"#776475\",\"dangerColor\":\"#f44336\",\"successColor\":\"#57965a\",\"baseColor\":\"#222\",\"infoColor\":\"#2677f0\",\"baseDarkerColor\":\"#151515\",\"baseLightColor\":\"#3c3c3c\",\"secondaryColor\":\"#f5f2f1\",\"secondaryDarkerColor\":\"#d3d3d3\",\"transparentSuccessColor\":\"rgba(87,150,90,.3)\",\"transparentDangerColor\":\"rgba(244,67,54,.3)\",\"transparentBaseLightColor\":\"rgba(60,60,60,.4)\"};","/**\n * @file Enum declaration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Currency type.\n */\nexport enum Currency {\n    Solana = 'Solana',\n    Mina = 'Mina',\n    Ethereum = 'Ethereum',\n}\n\n/**\n *\n * @param currency Currency.\n * @returns Path to currency image.\n */\nexport const getCurrencyImage = (currency: Currency): string =>\n    `${process.env.PUBLIC_URL}currencies/${currency}-icon.svg`;\n","/**\n * @file Enum declaration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Chart type.\n */\nexport enum ChartType {\n    proofCostChart = 'Proof Cost',\n    proofGetTimeChart = 'Proof Generation Time',\n}\n","/**\n * @file Enum declaration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Date range variant.\n */\nexport enum DateUnit {\n    minute = '1m',\n    quaterMinute = '15m',\n    halfHour = '30m',\n    hour = '1h',\n    day = 'D',\n}\n\n/**\n * Returns time scale date format based on provided date unit.\n *\n * @param unit Date unit.\n * @returns Date format.\n */\nexport const getDateFormatBasedOnDateUnit = (unit: DateUnit): string => {\n    switch (unit) {\n        case DateUnit.minute:\n        case DateUnit.quaterMinute:\n        case DateUnit.halfHour:\n        case DateUnit.hour:\n            return 'DD.MM HH:mm';\n        case DateUnit.day:\n            return 'DD.MM';\n        default:\n            return '';\n    }\n};\n","/**\n * @file Enum declaration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Paths.\n */\nexport enum Path {\n    root = '/',\n    any = '*',\n    login = '/login',\n    portfolio = '/portfolio',\n    register = '/register',\n}\n","/**\n * @file React routing.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { lazy } from 'react';\nimport { RouteModel } from './RouteModel';\nimport { Path } from './Paths';\n\nconst MarketView = lazy(() => import('../views/MarketView'));\nconst LoginView = lazy(() => import('../views/LoginView'));\nconst PortfolioView = lazy(() => import('../views/PortfolioView'));\nconst Page404 = lazy(() => import('../views/404'));\nconst RegisterView = lazy(() => import('../views/RegisterView'));\n\n/**\n * Login route.\n */\nexport const loginRoute: RouteModel = {\n    path: Path.login,\n    Component: LoginView,\n};\n\n/**\n * Register route.\n */\nexport const registerRoute: RouteModel = {\n    path: Path.register,\n    Component: RegisterView,\n};\n\n/**\n * App routes.\n */\nexport const routes: RouteModel[] = [\n    {\n        path: Path.root,\n        Component: MarketView,\n    },\n    {\n        path: Path.portfolio,\n        Component: PortfolioView,\n    },\n    {\n        path: Path.any, // This should always be the last\n        Component: Page404,\n    },\n];\n","/**\n * @file Constant data.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nexport const socialLinks = [\n    {\n        icon: 'twitter',\n        url: 'https://twitter.com/nil_foundation',\n    },\n    {\n        icon: 'linkedin',\n        url: 'https://www.linkedin.com/company/nil-foundation',\n    },\n    {\n        icon: 'github',\n        url: 'http://github.com/nilfoundation',\n    },\n    {\n        icon: 'telegram',\n        url: 'https://t.me/nilfoundation',\n    },\n    {\n        icon: 'discord',\n        url: 'https://discord.gg/KmTAEjbmM3',\n    },\n];\n","/**\n * @file Constant data.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { Path } from 'src/routing';\n\n/**\n * App navigation links.\n */\nexport const navigationLinks = [\n    {\n        title: 'Market',\n        path: Path.root,\n    },\n    {\n        title: 'Portfolio',\n        path: Path.portfolio,\n    },\n];\n","/**\n * @file Constant data.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport colors from 'src/styles/export.module.scss';\n\n/**\n * Json viewer custom theme.\n */\nexport const jsonViewerTheme = {\n    base00: 'transparent', // background\n    base01: colors.secondaryDarkerColor,\n    base02: colors.baseLightColor, // left vertical bar color\n    base03: colors.secondaryDarkerColor,\n    base04: colors.primaryColor, // helpers text color\n    base05: colors.secondaryDarkerColor,\n    base06: colors.secondaryDarkerColor,\n    base07: colors.secondaryDarkerColor,\n    base08: colors.secondaryDarkerColor,\n    base09: colors.secondaryDarkerColor,\n    base0A: colors.secondaryColor,\n    base0B: colors.secondaryColor,\n    base0C: colors.secondaryColor,\n    base0D: colors.primaryColor,\n    base0E: colors.primaryColor,\n    base0F: colors.secondaryDarkerColor, // copy icons color\n};\n","/**\n * @file Constant data.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n/**\n * Main site url.\n */\nexport const mainSiteAddress = 'https://nil.foundation';\n","/**\n * @file Api.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { createBearerHttpClient } from '../common';\nimport { LoginData, LoginDto } from '../../models';\n\nconst httpFetcher = createBearerHttpClient();\nconst databaseUrl = `_db/${process.env.REACT_APP_DBMS_DEFAULT_DATABASE}`;\n\n/**\n * Login.\n *\n * @param loginData - Login data.\n * @returns .\n */\nexport const login = (loginData: LoginData): Promise<LoginDto> =>\n    httpFetcher.post<LoginDto, LoginData>(`${databaseUrl}/_open/auth`, loginData);\n\n/**\n * Renew jtw tocken.\n *\n * @deprecated\n * @returns .\n */\nexport const renewJwt = (): Promise<LoginDto> =>\n    httpFetcher.post<LoginDto>(`${databaseUrl}/_open/auth/renew`);\n","/**\n * @file Api.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { Circuit, CircuitInfo, CircuitStats } from 'src/models';\nimport { createBearerHttpClient } from '../common';\n\nconst dbName = process.env.REACT_APP_DBMS_DEFAULT_DATABASE;\nconst databaseUrl = `_db/${dbName}`;\nconst apiUrl = `${databaseUrl}/_api/`;\nconst httpFetcher = createBearerHttpClient(apiUrl);\n\nconst newFetcher = createBearerHttpClient('');\n\n/**\n * Get circuits.\n *\n * @returns Circuit list.\n */\nexport const getCircuits = (): Promise<Circuit> =>\n    httpFetcher\n        .post('cursor', {\n            query: `\n                FOR x IN @@relation\n                    LET att = ATTRIBUTES(x, true)\n                    RETURN KEEP(x, att)\n            `,\n            bindVars: {\n                '@relation': 'circuit',\n            },\n        })\n        .then((x: any) => x.result);\n\n/**\n * Get circuits info.\n *\n * @returns .\n */\nexport const getCircuitsInfo = (): Promise<CircuitInfo> =>\n    newFetcher.get(`/${databaseUrl}/${dbName}/circuit/info`);\n\n/**\n * Get circuits stats.\n *\n * @returns .\n */\nexport const getCircuitsStats = (): Promise<CircuitStats> =>\n    newFetcher.get(`/${databaseUrl}/${dbName}/circuit/statistics`);\n","/**\n * @file Api.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { Proof } from '../../models';\nimport { createBearerHttpClient } from '../common';\n\nconst databaseUrl = `_db/${process.env.REACT_APP_DBMS_DEFAULT_DATABASE}`;\nconst apiUrl = `${databaseUrl}/_api/`;\nconst httpFetcher = createBearerHttpClient(apiUrl);\n\n/**\n * Get proofs.\n *\n * @param currentUser Current user.\n * @returns Proofs.\n */\nexport const getProofs = (currentUser: string): Promise<Proof> =>\n    httpFetcher\n        .post('cursor', {\n            query: `\n                FOR x IN @@relation\n                    RETURN UNSET(x, 'proof')\n            `,\n            bindVars: {\n                '@relation': 'proof',\n            },\n        })\n        .then((x: any) => x.result);\n","/**\n * @file Http client.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\n\n/**\n * Http client.\n *\n * @class HttpClient\n */\nexport class HttpClient {\n    protected readonly client: AxiosInstance;\n\n    /**\n     * Constructor.\n     *\n     * @param requestConfig - Config.\n     * @param configureClient - Configuration callback.\n     */\n    constructor(\n        requestConfig?: AxiosRequestConfig,\n        configureClient?: (client: AxiosInstance) => void,\n    ) {\n        this.client = axios.create(requestConfig);\n        configureClient && configureClient(this.client);\n    }\n\n    /**\n     * GET.\n     *\n     * @param url - Url.\n     * @param config - Config.\n     * @memberof HttpClient\n     */\n    public async get<TResponse>(url: string, config?: AxiosRequestConfig): Promise<TResponse> {\n        const response = await this.client.get<TResponse>(url, config);\n        return response.data;\n    }\n\n    /**\n     * POST.\n     *\n     * @param url - Url.\n     * @param data - Data.\n     * @param config - Config.\n     * @memberof HttpClient\n     */\n    public async post<TResponse, TRequest = undefined>(\n        url: string,\n        data?: TRequest,\n        config?: AxiosRequestConfig,\n    ): Promise<TResponse> {\n        const response = await this.client.post<TResponse>(url, data, config);\n        return response.data;\n    }\n\n    /**\n     * PUT.\n     *\n     * @param url - Url.\n     * @param payload - Payload.\n     * @param config - Config.\n     * @memberof HttpClient\n     */\n    public async put<TResponse, TRequest = undefined>(\n        url: string,\n        payload?: TRequest,\n        config?: AxiosRequestConfig,\n    ): Promise<TResponse> {\n        const response = await this.client.put(url, payload, config);\n        return response.data;\n    }\n\n    /**\n     * DELETE.\n     *\n     * @param url - Url.\n     * @param config - Config.\n     * @memberof HttpClient\n     */\n    public async delete<TResponse>(url: string, config?: AxiosRequestConfig): Promise<TResponse> {\n        const response = await this.client.delete(url, config);\n        return response.data;\n    }\n}\n","/**\n * @file Bearer http client.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { AxiosRequestConfig } from 'axios';\nimport { HttpClient } from './HttpClient';\nimport { getItemFromLocalStorage } from '../../packages/LocalStorage';\n\nconst { REACT_APP_BASE_API_URL } = process.env;\n\n/**\n * Creates HTTP client with authorization.\n *\n * @param baseUrl - Base api url.\n * @param withCredentials - Include credentials.\n * @returns Bearer http client.\n */\nexport const createBearerHttpClient = (baseUrl?: string, withCredentials?: boolean): HttpClient =>\n    new HttpClient(\n        {\n            baseURL: baseUrl ? `${REACT_APP_BASE_API_URL}/${baseUrl}` : `${REACT_APP_BASE_API_URL}`,\n            withCredentials,\n        },\n        client => client.interceptors.request.use(injectJwtToken),\n    );\n\nconst getJwtToken = (): string | undefined => {\n    const tokenStorageKey = 'jwt';\n    return getItemFromLocalStorage<string>(tokenStorageKey);\n};\n\nconst injectJwtToken = (config: AxiosRequestConfig): AxiosRequestConfig => {\n    const jwtToken = getJwtToken();\n    if (jwtToken && config.headers) {\n        config.headers.Authorization = `Bearer ${jwtToken}`;\n    }\n    return config;\n};\n","/**\n * @file Polyfills entrypoint.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport 'react-app-polyfill/ie11';\n/**\n * Injects core-js polyfills into bundle to provide old browsers support.\n *\n * @see {@link https://stackoverflow.com/questions/73194573/why-does-babel-in-create-react-app-not-polyfill-array-prototype-at-properly}.\n */\n// eslint-disable-next-line\nconst r = require('core-js/stable');\n","/**\n * @file React component.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement } from 'react';\nimport { Container, Row, Col } from '@nilfoundation/react-components';\nimport { mainSiteAddress } from 'src/constants';\n\n/**\n * App Error view.\n *\n * @returns React component.\n */\nconst ErrorView = (): ReactElement => (\n    <Container\n        as=\"main\"\n        fluid\n    >\n        <Row>\n            <Col\n                xs={12}\n                className=\"text-center\"\n            >\n                <h4>Sorry, unknown error occured.</h4>\n                <p className=\"text-muted\">\n                    Please, try to reload page or leave message to support.\n                </p>\n                <p>\n                    <a href={mainSiteAddress}>{mainSiteAddress}</a>\n                </p>\n            </Col>\n        </Row>\n    </Container>\n);\n\nexport default ErrorView;\n","/**\n * @file App.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReactElement, Suspense } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { Layout, NotificationProvider, Spinner } from '@nilfoundation/react-components';\nimport * as Sentry from '@sentry/react';\nimport {\n    Header,\n    Footer,\n    ProtectedRoute,\n    NetConnectionHandler,\n    ReadonlyAccessProvider,\n    AuthContainer,\n} from './components';\nimport { routes, loginRoute, registerRoute } from './routing';\nimport ErrorView from './views/ErrorView';\n\n/**\n * @returns App.\n */\nfunction App(): ReactElement {\n    return (\n        <Sentry.ErrorBoundary fallback={<ErrorView />}>\n            <NotificationProvider>\n                <BrowserRouter>\n                    <Layout\n                        header={<Header />}\n                        footer={<Footer />}\n                        stickyHeader\n                    >\n                        <Suspense fallback={<Spinner grow />}>\n                            <NetConnectionHandler>\n                                <Routes>\n                                    <Route\n                                        path={registerRoute.path}\n                                        element={\n                                            <AuthContainer>\n                                                <registerRoute.Component />\n                                            </AuthContainer>\n                                        }\n                                    />\n                                    <Route\n                                        path={loginRoute.path}\n                                        element={\n                                            <AuthContainer>\n                                                <loginRoute.Component />\n                                            </AuthContainer>\n                                        }\n                                    />\n                                    {routes.map(({ path, Component }) => (\n                                        <Route\n                                            key={path}\n                                            path={path}\n                                            element={\n                                                <ReadonlyAccessProvider fallback={<Spinner grow />}>\n                                                    <ProtectedRoute>\n                                                        <Component />\n                                                    </ProtectedRoute>\n                                                </ReadonlyAccessProvider>\n                                            }\n                                        />\n                                    ))}\n                                </Routes>\n                            </NetConnectionHandler>\n                        </Suspense>\n                    </Layout>\n                </BrowserRouter>\n            </NotificationProvider>\n        </Sentry.ErrorBoundary>\n    );\n}\n\nexport default Sentry.withProfiler(App);\n","/**\n * @file Web vitals.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport { ReportHandler } from 'web-vitals';\n\n// eslint-disable-next-line jsdoc/require-jsdoc\nexport const reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n","/**\n * @file Env variables checker.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nconst requiredEnv = [\n    process.env.REACT_APP_BASE_API_URL,\n    process.env.REACT_APP_DBMS_DEFAULT_DATABASE,\n    process.env.REACT_APP_READONLY_USER,\n    process.env.REACT_APP_SITE_EMAIL,\n];\n\n/**\n * Checks env variables definition.\n *\n * @throws An error if any required env is not defined.\n * @returns .\n */\nexport const checkEnvVariablesAreDefined = (): void =>\n    requiredEnv.forEach(x => {\n        if (!x) {\n            throw new Error(\n                'All required environment variables should be defined before running this app',\n            );\n        }\n    });\n","/**\n * @file Sentry configuration.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\nimport * as Sentry from '@sentry/react';\nimport { BrowserTracing } from '@sentry/tracing';\n\n/**\n * Configures sentry for app.\n *\n * @see {@link https://docs.sentry.io/platforms/javascript/guides/react/}\n */\nexport const configureSentry = (): void => {\n    if (process.env.NODE_ENV !== 'production') {\n        return;\n    }\n\n    Sentry.init({\n        dsn: process.env.REACT_APP_SENTRY_DSN,\n        integrations: [new BrowserTracing()],\n        tracesSampleRate: 0.2,\n    });\n};\n","/**\n * @file Root index.\n * @copyright Yury Korotovskikh 2022 <u.korotovskiy@nil.foundation>\n */\n\n// eslint-disable-next-line import/order\nimport './polyfills';\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './redux';\nimport { configureSentry } from './sentry';\nimport { reportWebVitals } from './reportWebVitals';\nimport { checkEnvVariablesAreDefined } from './checkEnv';\nimport './index.scss';\n\ncheckEnvVariablesAreDefined();\nconfigureSentry();\nrender(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\nreportWebVitals();\n"],"sourceRoot":""}